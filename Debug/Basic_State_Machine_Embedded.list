
Basic_State_Machine_Embedded.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006a80  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000f8  08006c08  08006c08  00016c08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006d00  08006d00  00020044  2**0
                  CONTENTS
  4 .ARM          00000000  08006d00  08006d00  00020044  2**0
                  CONTENTS
  5 .preinit_array 00000000  08006d00  08006d00  00020044  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006d00  08006d00  00016d00  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006d04  08006d04  00016d04  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000044  20000000  08006d08  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00001560  20000044  08006d4c  00020044  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200015a4  08006d4c  000215a4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020044  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001b1f6  00000000  00000000  00020074  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000037a7  00000000  00000000  0003b26a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001358  00000000  00000000  0003ea18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001208  00000000  00000000  0003fd70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000195d4  00000000  00000000  00040f78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00017e6f  00000000  00000000  0005a54c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00094345  00000000  00000000  000723bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00106700  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000502c  00000000  00000000  00106754  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000044 	.word	0x20000044
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08006bf0 	.word	0x08006bf0

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000048 	.word	0x20000048
 80001c4:	08006bf0 	.word	0x08006bf0

080001c8 <strlen>:
 80001c8:	4603      	mov	r3, r0
 80001ca:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001ce:	2a00      	cmp	r2, #0
 80001d0:	d1fb      	bne.n	80001ca <strlen+0x2>
 80001d2:	1a18      	subs	r0, r3, r0
 80001d4:	3801      	subs	r0, #1
 80001d6:	4770      	bx	lr

080001d8 <Lan_Interrupt_Service>:

	}
}

void Lan_Interrupt_Service(void)
{
 80001d8:	b580      	push	{r7, lr}
 80001da:	af00      	add	r7, sp, #0
	if(getSn_IR(0) & (1 << 2))
 80001dc:	f44f 7002 	mov.w	r0, #520	; 0x208
 80001e0:	f001 feb4 	bl	8001f4c <WIZCHIP_READ>
 80001e4:	4603      	mov	r3, r0
 80001e6:	f003 0304 	and.w	r3, r3, #4
 80001ea:	2b00      	cmp	r3, #0
 80001ec:	d00f      	beq.n	800020e <Lan_Interrupt_Service+0x36>
	{
		recv(0,Receive_Buffer,255);
 80001ee:	22ff      	movs	r2, #255	; 0xff
 80001f0:	4913      	ldr	r1, [pc, #76]	; (8000240 <Lan_Interrupt_Service+0x68>)
 80001f2:	2000      	movs	r0, #0
 80001f4:	f001 fb80 	bl	80018f8 <recv>
//		if(Receive_Buffer==PING_ACK_CMD)
//		{
//			//Set State Idle State
//		}

		memset(Receive_Buffer,0,sizeof Receive_Buffer);// clear the receiving buffer
 80001f8:	22ff      	movs	r2, #255	; 0xff
 80001fa:	2100      	movs	r1, #0
 80001fc:	4810      	ldr	r0, [pc, #64]	; (8000240 <Lan_Interrupt_Service+0x68>)
 80001fe:	f006 fc9d 	bl	8006b3c <memset>
		setSn_IR(0, 0x04);
 8000202:	2104      	movs	r1, #4
 8000204:	f44f 7002 	mov.w	r0, #520	; 0x208
 8000208:	f001 feec 	bl	8001fe4 <WIZCHIP_WRITE>

	else
	{
		setSn_IR(0, 0x1F);/// decimal 31 .. for more info check W5500 datasheet, Page 48
	}
}
 800020c:	e015      	b.n	800023a <Lan_Interrupt_Service+0x62>
	else if(getSn_IR(0) & (1 << 1))
 800020e:	f44f 7002 	mov.w	r0, #520	; 0x208
 8000212:	f001 fe9b 	bl	8001f4c <WIZCHIP_READ>
 8000216:	4603      	mov	r3, r0
 8000218:	f003 0302 	and.w	r3, r3, #2
 800021c:	2b00      	cmp	r3, #0
 800021e:	d007      	beq.n	8000230 <Lan_Interrupt_Service+0x58>
		Ethernet_Connect();
 8000220:	f000 faac 	bl	800077c <Ethernet_Connect>
		setSn_IR(0, 0x02);
 8000224:	2102      	movs	r1, #2
 8000226:	f44f 7002 	mov.w	r0, #520	; 0x208
 800022a:	f001 fedb 	bl	8001fe4 <WIZCHIP_WRITE>
}
 800022e:	e004      	b.n	800023a <Lan_Interrupt_Service+0x62>
		setSn_IR(0, 0x1F);/// decimal 31 .. for more info check W5500 datasheet, Page 48
 8000230:	211f      	movs	r1, #31
 8000232:	f44f 7002 	mov.w	r0, #520	; 0x208
 8000236:	f001 fed5 	bl	8001fe4 <WIZCHIP_WRITE>
}
 800023a:	bf00      	nop
 800023c:	bd80      	pop	{r7, pc}
 800023e:	bf00      	nop
 8000240:	20000400 	.word	0x20000400

08000244 <WR_Interrupt_Service>:

void WR_Interrupt_Service(void)
{
 8000244:	b580      	push	{r7, lr}
 8000246:	af00      	add	r7, sp, #0
	//send(0, (uint8_t *)"WR ",strlen("WR "));
	WR_Counts++;
 8000248:	4b24      	ldr	r3, [pc, #144]	; (80002dc <WR_Interrupt_Service+0x98>)
 800024a:	681b      	ldr	r3, [r3, #0]
 800024c:	3301      	adds	r3, #1
 800024e:	4a23      	ldr	r2, [pc, #140]	; (80002dc <WR_Interrupt_Service+0x98>)
 8000250:	6013      	str	r3, [r2, #0]
	if(Lt_Rt_flag==0)
 8000252:	4b23      	ldr	r3, [pc, #140]	; (80002e0 <WR_Interrupt_Service+0x9c>)
 8000254:	881b      	ldrh	r3, [r3, #0]
 8000256:	2b00      	cmp	r3, #0
 8000258:	d12e      	bne.n	80002b8 <WR_Interrupt_Service+0x74>
	{
		switch(WR_Counts)
 800025a:	4b20      	ldr	r3, [pc, #128]	; (80002dc <WR_Interrupt_Service+0x98>)
 800025c:	681b      	ldr	r3, [r3, #0]
 800025e:	2b01      	cmp	r3, #1
 8000260:	d002      	beq.n	8000268 <WR_Interrupt_Service+0x24>
 8000262:	2b02      	cmp	r3, #2
 8000264:	d012      	beq.n	800028c <WR_Interrupt_Service+0x48>
 8000266:	e028      	b.n	80002ba <WR_Interrupt_Service+0x76>
		{
		case(1):
				send(0, (uint8_t *)INIT_CMD,strlen(INIT_CMD));
 8000268:	2206      	movs	r2, #6
 800026a:	491e      	ldr	r1, [pc, #120]	; (80002e4 <WR_Interrupt_Service+0xa0>)
 800026c:	2000      	movs	r0, #0
 800026e:	f001 fa49 	bl	8001704 <send>
		        Timer2_Start();
 8000272:	f000 fb2b 	bl	80008cc <Timer2_Start>
				WR_Instant=Timer2_GetTimer();
 8000276:	f000 fb33 	bl	80008e0 <Timer2_GetTimer>
 800027a:	4603      	mov	r3, r0
 800027c:	461a      	mov	r2, r3
 800027e:	4b1a      	ldr	r3, [pc, #104]	; (80002e8 <WR_Interrupt_Service+0xa4>)
 8000280:	601a      	str	r2, [r3, #0]
				RingWriteElement(&WR_Ring,&WR_Instant);
 8000282:	4919      	ldr	r1, [pc, #100]	; (80002e8 <WR_Interrupt_Service+0xa4>)
 8000284:	4819      	ldr	r0, [pc, #100]	; (80002ec <WR_Interrupt_Service+0xa8>)
 8000286:	f000 ff49 	bl	800111c <RingWriteElement>
				break;
 800028a:	e016      	b.n	80002ba <WR_Interrupt_Service+0x76>
		case(2):
				send(0, (uint8_t *)GRAB_START_CMD,strlen(GRAB_START_CMD));
 800028c:	220b      	movs	r2, #11
 800028e:	4918      	ldr	r1, [pc, #96]	; (80002f0 <WR_Interrupt_Service+0xac>)
 8000290:	2000      	movs	r0, #0
 8000292:	f001 fa37 	bl	8001704 <send>
				Entry_flag=1;
 8000296:	4b17      	ldr	r3, [pc, #92]	; (80002f4 <WR_Interrupt_Service+0xb0>)
 8000298:	2201      	movs	r2, #1
 800029a:	801a      	strh	r2, [r3, #0]
				Rt_Lt_flag=1;
 800029c:	4b16      	ldr	r3, [pc, #88]	; (80002f8 <WR_Interrupt_Service+0xb4>)
 800029e:	2201      	movs	r2, #1
 80002a0:	801a      	strh	r2, [r3, #0]
				WR_Instant=Timer2_GetTimer();
 80002a2:	f000 fb1d 	bl	80008e0 <Timer2_GetTimer>
 80002a6:	4603      	mov	r3, r0
 80002a8:	461a      	mov	r2, r3
 80002aa:	4b0f      	ldr	r3, [pc, #60]	; (80002e8 <WR_Interrupt_Service+0xa4>)
 80002ac:	601a      	str	r2, [r3, #0]
				RingWriteElement(&WR_Ring,&WR_Instant);
 80002ae:	490e      	ldr	r1, [pc, #56]	; (80002e8 <WR_Interrupt_Service+0xa4>)
 80002b0:	480e      	ldr	r0, [pc, #56]	; (80002ec <WR_Interrupt_Service+0xa8>)
 80002b2:	f000 ff33 	bl	800111c <RingWriteElement>
				break;
 80002b6:	e000      	b.n	80002ba <WR_Interrupt_Service+0x76>
		}

	}
 80002b8:	bf00      	nop

	if(Entry_flag==1)
 80002ba:	4b0e      	ldr	r3, [pc, #56]	; (80002f4 <WR_Interrupt_Service+0xb0>)
 80002bc:	881b      	ldrh	r3, [r3, #0]
 80002be:	2b01      	cmp	r3, #1
 80002c0:	d109      	bne.n	80002d6 <WR_Interrupt_Service+0x92>
	{
		WR_Instant=Timer2_GetTimer();
 80002c2:	f000 fb0d 	bl	80008e0 <Timer2_GetTimer>
 80002c6:	4603      	mov	r3, r0
 80002c8:	461a      	mov	r2, r3
 80002ca:	4b07      	ldr	r3, [pc, #28]	; (80002e8 <WR_Interrupt_Service+0xa4>)
 80002cc:	601a      	str	r2, [r3, #0]
		RingWriteElement(&WR_Ring,&WR_Instant);
 80002ce:	4906      	ldr	r1, [pc, #24]	; (80002e8 <WR_Interrupt_Service+0xa4>)
 80002d0:	4806      	ldr	r0, [pc, #24]	; (80002ec <WR_Interrupt_Service+0xa8>)
 80002d2:	f000 ff23 	bl	800111c <RingWriteElement>
	}
}
 80002d6:	bf00      	nop
 80002d8:	bd80      	pop	{r7, pc}
 80002da:	bf00      	nop
 80002dc:	20000878 	.word	0x20000878
 80002e0:	200003d8 	.word	0x200003d8
 80002e4:	08006c08 	.word	0x08006c08
 80002e8:	20000088 	.word	0x20000088
 80002ec:	20000500 	.word	0x20000500
 80002f0:	08006c10 	.word	0x08006c10
 80002f4:	20000bda 	.word	0x20000bda
 80002f8:	20000b9c 	.word	0x20000b9c

080002fc <FCT_Interrupt_Service>:


void FCT_Interrupt_Service(void)
{
 80002fc:	b580      	push	{r7, lr}
 80002fe:	af00      	add	r7, sp, #0
	//send(0, (uint8_t *)"FCT ",strlen("FCT "));
	FCT_Counts++;
 8000300:	4b11      	ldr	r3, [pc, #68]	; (8000348 <FCT_Interrupt_Service+0x4c>)
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	3301      	adds	r3, #1
 8000306:	4a10      	ldr	r2, [pc, #64]	; (8000348 <FCT_Interrupt_Service+0x4c>)
 8000308:	6013      	str	r3, [r2, #0]
	if(Lt_Rt_flag==1)
 800030a:	4b10      	ldr	r3, [pc, #64]	; (800034c <FCT_Interrupt_Service+0x50>)
 800030c:	881b      	ldrh	r3, [r3, #0]
 800030e:	2b01      	cmp	r3, #1
 8000310:	d10a      	bne.n	8000328 <FCT_Interrupt_Service+0x2c>
	{
		FCT_Instant=Timer2_GetTimer();
 8000312:	f000 fae5 	bl	80008e0 <Timer2_GetTimer>
 8000316:	4603      	mov	r3, r0
 8000318:	461a      	mov	r2, r3
 800031a:	4b0d      	ldr	r3, [pc, #52]	; (8000350 <FCT_Interrupt_Service+0x54>)
 800031c:	601a      	str	r2, [r3, #0]
		RingWriteElement(&FCT_Ring,&FCT_Instant);
 800031e:	490c      	ldr	r1, [pc, #48]	; (8000350 <FCT_Interrupt_Service+0x54>)
 8000320:	480c      	ldr	r0, [pc, #48]	; (8000354 <FCT_Interrupt_Service+0x58>)
 8000322:	f000 fefb 	bl	800111c <RingWriteElement>
//		HAL_GPIO_WritePin(GPIOB,CA_OP_Pin,GPIO_PIN_SET);
//		HAL_GPIO_WritePin(GPIOA,CA_OP1_Pin,GPIO_PIN_SET);
		//send(0, (uint8_t *)"TL2 ",strlen("TL2 "));
	}
	//send(0, (uint8_t *)"TLout ",strlen("TLout "));
}
 8000326:	e00d      	b.n	8000344 <FCT_Interrupt_Service+0x48>
	else if(Rt_Lt_flag==1)
 8000328:	4b0b      	ldr	r3, [pc, #44]	; (8000358 <FCT_Interrupt_Service+0x5c>)
 800032a:	881b      	ldrh	r3, [r3, #0]
 800032c:	2b01      	cmp	r3, #1
 800032e:	d109      	bne.n	8000344 <FCT_Interrupt_Service+0x48>
		FCT_Instant=Timer2_GetTimer();
 8000330:	f000 fad6 	bl	80008e0 <Timer2_GetTimer>
 8000334:	4603      	mov	r3, r0
 8000336:	461a      	mov	r2, r3
 8000338:	4b05      	ldr	r3, [pc, #20]	; (8000350 <FCT_Interrupt_Service+0x54>)
 800033a:	601a      	str	r2, [r3, #0]
		RingWriteElement(&FCT_Ring,&FCT_Instant);
 800033c:	4904      	ldr	r1, [pc, #16]	; (8000350 <FCT_Interrupt_Service+0x54>)
 800033e:	4805      	ldr	r0, [pc, #20]	; (8000354 <FCT_Interrupt_Service+0x58>)
 8000340:	f000 feec 	bl	800111c <RingWriteElement>
}
 8000344:	bf00      	nop
 8000346:	bd80      	pop	{r7, pc}
 8000348:	20000524 	.word	0x20000524
 800034c:	200003d8 	.word	0x200003d8
 8000350:	200003f4 	.word	0x200003f4
 8000354:	20000858 	.word	0x20000858
 8000358:	20000b9c 	.word	0x20000b9c

0800035c <WL_Interrupt_Service>:

void WL_Interrupt_Service(void)
{
 800035c:	b580      	push	{r7, lr}
 800035e:	af00      	add	r7, sp, #0
	//send(0, (uint8_t *)"WL ",strlen("WL "));
	WL_Counts++;
 8000360:	4b24      	ldr	r3, [pc, #144]	; (80003f4 <WL_Interrupt_Service+0x98>)
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	3301      	adds	r3, #1
 8000366:	4a23      	ldr	r2, [pc, #140]	; (80003f4 <WL_Interrupt_Service+0x98>)
 8000368:	6013      	str	r3, [r2, #0]
	if(Rt_Lt_flag==0)
 800036a:	4b23      	ldr	r3, [pc, #140]	; (80003f8 <WL_Interrupt_Service+0x9c>)
 800036c:	881b      	ldrh	r3, [r3, #0]
 800036e:	2b00      	cmp	r3, #0
 8000370:	d12e      	bne.n	80003d0 <WL_Interrupt_Service+0x74>
	{
		switch(WL_Counts)
 8000372:	4b20      	ldr	r3, [pc, #128]	; (80003f4 <WL_Interrupt_Service+0x98>)
 8000374:	681b      	ldr	r3, [r3, #0]
 8000376:	2b01      	cmp	r3, #1
 8000378:	d002      	beq.n	8000380 <WL_Interrupt_Service+0x24>
 800037a:	2b02      	cmp	r3, #2
 800037c:	d012      	beq.n	80003a4 <WL_Interrupt_Service+0x48>
 800037e:	e028      	b.n	80003d2 <WL_Interrupt_Service+0x76>
		{
		case(1):
				send(0, (uint8_t *)INIT_CMD,strlen(INIT_CMD));
 8000380:	2206      	movs	r2, #6
 8000382:	491e      	ldr	r1, [pc, #120]	; (80003fc <WL_Interrupt_Service+0xa0>)
 8000384:	2000      	movs	r0, #0
 8000386:	f001 f9bd 	bl	8001704 <send>
				Timer2_Start();
 800038a:	f000 fa9f 	bl	80008cc <Timer2_Start>
				WL_Instant=Timer2_GetTimer();
 800038e:	f000 faa7 	bl	80008e0 <Timer2_GetTimer>
 8000392:	4603      	mov	r3, r0
 8000394:	461a      	mov	r2, r3
 8000396:	4b1a      	ldr	r3, [pc, #104]	; (8000400 <WL_Interrupt_Service+0xa4>)
 8000398:	601a      	str	r2, [r3, #0]
				RingWriteElement(&WL_Ring,&WL_Instant);
 800039a:	4919      	ldr	r1, [pc, #100]	; (8000400 <WL_Interrupt_Service+0xa4>)
 800039c:	4819      	ldr	r0, [pc, #100]	; (8000404 <WL_Interrupt_Service+0xa8>)
 800039e:	f000 febd 	bl	800111c <RingWriteElement>
				break;
 80003a2:	e016      	b.n	80003d2 <WL_Interrupt_Service+0x76>

		case(2):
				send(0, (uint8_t *)GRAB_START_CMD,strlen(GRAB_START_CMD));
 80003a4:	220b      	movs	r2, #11
 80003a6:	4918      	ldr	r1, [pc, #96]	; (8000408 <WL_Interrupt_Service+0xac>)
 80003a8:	2000      	movs	r0, #0
 80003aa:	f001 f9ab 	bl	8001704 <send>
				Entry_flag=1;
 80003ae:	4b17      	ldr	r3, [pc, #92]	; (800040c <WL_Interrupt_Service+0xb0>)
 80003b0:	2201      	movs	r2, #1
 80003b2:	801a      	strh	r2, [r3, #0]
				Lt_Rt_flag=1;
 80003b4:	4b16      	ldr	r3, [pc, #88]	; (8000410 <WL_Interrupt_Service+0xb4>)
 80003b6:	2201      	movs	r2, #1
 80003b8:	801a      	strh	r2, [r3, #0]
				WL_Instant=Timer2_GetTimer();
 80003ba:	f000 fa91 	bl	80008e0 <Timer2_GetTimer>
 80003be:	4603      	mov	r3, r0
 80003c0:	461a      	mov	r2, r3
 80003c2:	4b0f      	ldr	r3, [pc, #60]	; (8000400 <WL_Interrupt_Service+0xa4>)
 80003c4:	601a      	str	r2, [r3, #0]
				RingWriteElement(&WL_Ring,&WL_Instant);
 80003c6:	490e      	ldr	r1, [pc, #56]	; (8000400 <WL_Interrupt_Service+0xa4>)
 80003c8:	480e      	ldr	r0, [pc, #56]	; (8000404 <WL_Interrupt_Service+0xa8>)
 80003ca:	f000 fea7 	bl	800111c <RingWriteElement>
				break;
 80003ce:	e000      	b.n	80003d2 <WL_Interrupt_Service+0x76>
		}

	}
 80003d0:	bf00      	nop

	if(Entry_flag==1)
 80003d2:	4b0e      	ldr	r3, [pc, #56]	; (800040c <WL_Interrupt_Service+0xb0>)
 80003d4:	881b      	ldrh	r3, [r3, #0]
 80003d6:	2b01      	cmp	r3, #1
 80003d8:	d109      	bne.n	80003ee <WL_Interrupt_Service+0x92>
	{
		WL_Instant=Timer2_GetTimer();
 80003da:	f000 fa81 	bl	80008e0 <Timer2_GetTimer>
 80003de:	4603      	mov	r3, r0
 80003e0:	461a      	mov	r2, r3
 80003e2:	4b07      	ldr	r3, [pc, #28]	; (8000400 <WL_Interrupt_Service+0xa4>)
 80003e4:	601a      	str	r2, [r3, #0]
		RingWriteElement(&WL_Ring,&WL_Instant);
 80003e6:	4906      	ldr	r1, [pc, #24]	; (8000400 <WL_Interrupt_Service+0xa4>)
 80003e8:	4806      	ldr	r0, [pc, #24]	; (8000404 <WL_Interrupt_Service+0xa8>)
 80003ea:	f000 fe97 	bl	800111c <RingWriteElement>
	}
}
 80003ee:	bf00      	nop
 80003f0:	bd80      	pop	{r7, pc}
 80003f2:	bf00      	nop
 80003f4:	200003fc 	.word	0x200003fc
 80003f8:	20000b9c 	.word	0x20000b9c
 80003fc:	08006c08 	.word	0x08006c08
 8000400:	20000bdc 	.word	0x20000bdc
 8000404:	2000008c 	.word	0x2000008c
 8000408:	08006c10 	.word	0x08006c10
 800040c:	20000bda 	.word	0x20000bda
 8000410:	200003d8 	.word	0x200003d8

08000414 <Send_WR_Samples>:
#include "Save_Data.h"

void Send_WR_Samples()
{
 8000414:	b590      	push	{r4, r7, lr}
 8000416:	b083      	sub	sp, #12
 8000418:	af00      	add	r7, sp, #0
	WR_Roller = (BUFFERSIZE-1)-(WR_Ring.place + 1);
 800041a:	4b1a      	ldr	r3, [pc, #104]	; (8000484 <Send_WR_Samples+0x70>)
 800041c:	699b      	ldr	r3, [r3, #24]
 800041e:	b2da      	uxtb	r2, r3
 8000420:	f06f 0339 	mvn.w	r3, #57	; 0x39
 8000424:	1a9b      	subs	r3, r3, r2
 8000426:	b2da      	uxtb	r2, r3
 8000428:	4b17      	ldr	r3, [pc, #92]	; (8000488 <Send_WR_Samples+0x74>)
 800042a:	701a      	strb	r2, [r3, #0]
	for(int Iter=0;Iter<=WR_Roller;Iter++)
 800042c:	2300      	movs	r3, #0
 800042e:	607b      	str	r3, [r7, #4]
 8000430:	e01c      	b.n	800046c <Send_WR_Samples+0x58>
	{
		RingReadElement(&WR_Ring,&WR_Ring_Unit);
 8000432:	4916      	ldr	r1, [pc, #88]	; (800048c <Send_WR_Samples+0x78>)
 8000434:	4813      	ldr	r0, [pc, #76]	; (8000484 <Send_WR_Samples+0x70>)
 8000436:	f000 fec1 	bl	80011bc <RingReadElement>
		itoa(WR_Ring_Unit,WR_Ring_Bulletin,10);
 800043a:	4b14      	ldr	r3, [pc, #80]	; (800048c <Send_WR_Samples+0x78>)
 800043c:	681b      	ldr	r3, [r3, #0]
 800043e:	220a      	movs	r2, #10
 8000440:	4913      	ldr	r1, [pc, #76]	; (8000490 <Send_WR_Samples+0x7c>)
 8000442:	4618      	mov	r0, r3
 8000444:	f006 fb6a 	bl	8006b1c <itoa>
		send(0, (buff_size *)strcat(LOG_WRITE_CMD,WR_Ring_Bulletin),strlen(WR_Ring_Bulletin));
 8000448:	4911      	ldr	r1, [pc, #68]	; (8000490 <Send_WR_Samples+0x7c>)
 800044a:	4812      	ldr	r0, [pc, #72]	; (8000494 <Send_WR_Samples+0x80>)
 800044c:	f006 fb7e 	bl	8006b4c <strcat>
 8000450:	4604      	mov	r4, r0
 8000452:	480f      	ldr	r0, [pc, #60]	; (8000490 <Send_WR_Samples+0x7c>)
 8000454:	f7ff feb8 	bl	80001c8 <strlen>
 8000458:	4603      	mov	r3, r0
 800045a:	b29b      	uxth	r3, r3
 800045c:	461a      	mov	r2, r3
 800045e:	4621      	mov	r1, r4
 8000460:	2000      	movs	r0, #0
 8000462:	f001 f94f 	bl	8001704 <send>
	for(int Iter=0;Iter<=WR_Roller;Iter++)
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	3301      	adds	r3, #1
 800046a:	607b      	str	r3, [r7, #4]
 800046c:	4b06      	ldr	r3, [pc, #24]	; (8000488 <Send_WR_Samples+0x74>)
 800046e:	781b      	ldrb	r3, [r3, #0]
 8000470:	461a      	mov	r2, r3
 8000472:	687b      	ldr	r3, [r7, #4]
 8000474:	4293      	cmp	r3, r2
 8000476:	dddc      	ble.n	8000432 <Send_WR_Samples+0x1e>
		//HAL_Delay(100);
	}
}
 8000478:	bf00      	nop
 800047a:	bf00      	nop
 800047c:	370c      	adds	r7, #12
 800047e:	46bd      	mov	sp, r7
 8000480:	bd90      	pop	{r4, r7, pc}
 8000482:	bf00      	nop
 8000484:	20000500 	.word	0x20000500
 8000488:	20000bd8 	.word	0x20000bd8
 800048c:	200003f8 	.word	0x200003f8
 8000490:	20000bac 	.word	0x20000bac
 8000494:	08006c1c 	.word	0x08006c1c

08000498 <Send_FCT_Samples>:

void Send_FCT_Samples()
{
 8000498:	b590      	push	{r4, r7, lr}
 800049a:	b083      	sub	sp, #12
 800049c:	af00      	add	r7, sp, #0
	FCT_Roller = (BUFFERSIZE-1)-(FCT_Ring.place + 1);
 800049e:	4b1b      	ldr	r3, [pc, #108]	; (800050c <Send_FCT_Samples+0x74>)
 80004a0:	699b      	ldr	r3, [r3, #24]
 80004a2:	b2da      	uxtb	r2, r3
 80004a4:	f06f 0339 	mvn.w	r3, #57	; 0x39
 80004a8:	1a9b      	subs	r3, r3, r2
 80004aa:	b2da      	uxtb	r2, r3
 80004ac:	4b18      	ldr	r3, [pc, #96]	; (8000510 <Send_FCT_Samples+0x78>)
 80004ae:	701a      	strb	r2, [r3, #0]
	for(int Iter=0;Iter<=FCT_Roller;Iter++)
 80004b0:	2300      	movs	r3, #0
 80004b2:	607b      	str	r3, [r7, #4]
 80004b4:	e01f      	b.n	80004f6 <Send_FCT_Samples+0x5e>
	{
		RingReadElement(&FCT_Ring,&FCT_Ring_Unit);
 80004b6:	4917      	ldr	r1, [pc, #92]	; (8000514 <Send_FCT_Samples+0x7c>)
 80004b8:	4814      	ldr	r0, [pc, #80]	; (800050c <Send_FCT_Samples+0x74>)
 80004ba:	f000 fe7f 	bl	80011bc <RingReadElement>
		itoa(FCT_Ring_Unit,FCT_Ring_Bulletin,10);
 80004be:	4b15      	ldr	r3, [pc, #84]	; (8000514 <Send_FCT_Samples+0x7c>)
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	220a      	movs	r2, #10
 80004c4:	4914      	ldr	r1, [pc, #80]	; (8000518 <Send_FCT_Samples+0x80>)
 80004c6:	4618      	mov	r0, r3
 80004c8:	f006 fb28 	bl	8006b1c <itoa>
		//send(0, (buff_size *)FCT_Ring_Bulletin,strlen(FCT_Ring_Bulletin));
		send(0, (buff_size *)strcat(LOG_WRITE_CMD,FCT_Ring_Bulletin),strlen(FCT_Ring_Bulletin));
 80004cc:	4912      	ldr	r1, [pc, #72]	; (8000518 <Send_FCT_Samples+0x80>)
 80004ce:	4813      	ldr	r0, [pc, #76]	; (800051c <Send_FCT_Samples+0x84>)
 80004d0:	f006 fb3c 	bl	8006b4c <strcat>
 80004d4:	4604      	mov	r4, r0
 80004d6:	4810      	ldr	r0, [pc, #64]	; (8000518 <Send_FCT_Samples+0x80>)
 80004d8:	f7ff fe76 	bl	80001c8 <strlen>
 80004dc:	4603      	mov	r3, r0
 80004de:	b29b      	uxth	r3, r3
 80004e0:	461a      	mov	r2, r3
 80004e2:	4621      	mov	r1, r4
 80004e4:	2000      	movs	r0, #0
 80004e6:	f001 f90d 	bl	8001704 <send>
		HAL_Delay(100);
 80004ea:	2064      	movs	r0, #100	; 0x64
 80004ec:	f002 fd1c 	bl	8002f28 <HAL_Delay>
	for(int Iter=0;Iter<=FCT_Roller;Iter++)
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	3301      	adds	r3, #1
 80004f4:	607b      	str	r3, [r7, #4]
 80004f6:	4b06      	ldr	r3, [pc, #24]	; (8000510 <Send_FCT_Samples+0x78>)
 80004f8:	781b      	ldrb	r3, [r3, #0]
 80004fa:	461a      	mov	r2, r3
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	4293      	cmp	r3, r2
 8000500:	ddd9      	ble.n	80004b6 <Send_FCT_Samples+0x1e>
	}
}
 8000502:	bf00      	nop
 8000504:	bf00      	nop
 8000506:	370c      	adds	r7, #12
 8000508:	46bd      	mov	sp, r7
 800050a:	bd90      	pop	{r4, r7, pc}
 800050c:	20000858 	.word	0x20000858
 8000510:	20000b9e 	.word	0x20000b9e
 8000514:	20000520 	.word	0x20000520
 8000518:	20000848 	.word	0x20000848
 800051c:	08006c1c 	.word	0x08006c1c

08000520 <Send_WL_Samples>:


void Send_WL_Samples()
{
 8000520:	b590      	push	{r4, r7, lr}
 8000522:	b083      	sub	sp, #12
 8000524:	af00      	add	r7, sp, #0
	WL_Roller = (BUFFERSIZE-1)-(WL_Ring.place + 1);
 8000526:	4b1b      	ldr	r3, [pc, #108]	; (8000594 <Send_WL_Samples+0x74>)
 8000528:	699b      	ldr	r3, [r3, #24]
 800052a:	b2da      	uxtb	r2, r3
 800052c:	f06f 0339 	mvn.w	r3, #57	; 0x39
 8000530:	1a9b      	subs	r3, r3, r2
 8000532:	b2da      	uxtb	r2, r3
 8000534:	4b18      	ldr	r3, [pc, #96]	; (8000598 <Send_WL_Samples+0x78>)
 8000536:	701a      	strb	r2, [r3, #0]
	for(int Iter=0;Iter<=WL_Roller;Iter++)
 8000538:	2300      	movs	r3, #0
 800053a:	607b      	str	r3, [r7, #4]
 800053c:	e01f      	b.n	800057e <Send_WL_Samples+0x5e>
	{
		RingReadElement(&WL_Ring,&WL_Ring_Unit);
 800053e:	4917      	ldr	r1, [pc, #92]	; (800059c <Send_WL_Samples+0x7c>)
 8000540:	4814      	ldr	r0, [pc, #80]	; (8000594 <Send_WL_Samples+0x74>)
 8000542:	f000 fe3b 	bl	80011bc <RingReadElement>
		itoa(WL_Ring_Unit,WL_Ring_Bulletin,10);
 8000546:	4b15      	ldr	r3, [pc, #84]	; (800059c <Send_WL_Samples+0x7c>)
 8000548:	681b      	ldr	r3, [r3, #0]
 800054a:	220a      	movs	r2, #10
 800054c:	4914      	ldr	r1, [pc, #80]	; (80005a0 <Send_WL_Samples+0x80>)
 800054e:	4618      	mov	r0, r3
 8000550:	f006 fae4 	bl	8006b1c <itoa>
		send(0, (buff_size *)strcat(LOG_WRITE_CMD,WL_Ring_Bulletin),strlen(WL_Ring_Bulletin));
 8000554:	4912      	ldr	r1, [pc, #72]	; (80005a0 <Send_WL_Samples+0x80>)
 8000556:	4813      	ldr	r0, [pc, #76]	; (80005a4 <Send_WL_Samples+0x84>)
 8000558:	f006 faf8 	bl	8006b4c <strcat>
 800055c:	4604      	mov	r4, r0
 800055e:	4810      	ldr	r0, [pc, #64]	; (80005a0 <Send_WL_Samples+0x80>)
 8000560:	f7ff fe32 	bl	80001c8 <strlen>
 8000564:	4603      	mov	r3, r0
 8000566:	b29b      	uxth	r3, r3
 8000568:	461a      	mov	r2, r3
 800056a:	4621      	mov	r1, r4
 800056c:	2000      	movs	r0, #0
 800056e:	f001 f8c9 	bl	8001704 <send>
		HAL_Delay(100);
 8000572:	2064      	movs	r0, #100	; 0x64
 8000574:	f002 fcd8 	bl	8002f28 <HAL_Delay>
	for(int Iter=0;Iter<=WL_Roller;Iter++)
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	3301      	adds	r3, #1
 800057c:	607b      	str	r3, [r7, #4]
 800057e:	4b06      	ldr	r3, [pc, #24]	; (8000598 <Send_WL_Samples+0x78>)
 8000580:	781b      	ldrb	r3, [r3, #0]
 8000582:	461a      	mov	r2, r3
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	4293      	cmp	r3, r2
 8000588:	ddd9      	ble.n	800053e <Send_WL_Samples+0x1e>
	}
}
 800058a:	bf00      	nop
 800058c:	bf00      	nop
 800058e:	370c      	adds	r7, #12
 8000590:	46bd      	mov	sp, r7
 8000592:	bd90      	pop	{r4, r7, pc}
 8000594:	2000008c 	.word	0x2000008c
 8000598:	20000be0 	.word	0x20000be0
 800059c:	20000854 	.word	0x20000854
 80005a0:	20000ba0 	.word	0x20000ba0
 80005a4:	08006c1c 	.word	0x08006c1c

080005a8 <Send_Data>:

void Send_Data()
{
 80005a8:	b580      	push	{r7, lr}
 80005aa:	af00      	add	r7, sp, #0
	send(0, (uint8_t *)GRAB_STOP_CMD,strlen(GRAB_STOP_CMD));
 80005ac:	220a      	movs	r2, #10
 80005ae:	4932      	ldr	r1, [pc, #200]	; (8000678 <Send_Data+0xd0>)
 80005b0:	2000      	movs	r0, #0
 80005b2:	f001 f8a7 	bl	8001704 <send>
	HAL_Delay(500);
 80005b6:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80005ba:	f002 fcb5 	bl	8002f28 <HAL_Delay>
	send(0, (uint8_t *)LOG_START_CMD,strlen(LOG_START_CMD));
 80005be:	220a      	movs	r2, #10
 80005c0:	492e      	ldr	r1, [pc, #184]	; (800067c <Send_Data+0xd4>)
 80005c2:	2000      	movs	r0, #0
 80005c4:	f001 f89e 	bl	8001704 <send>
	HAL_Delay(500);
 80005c8:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80005cc:	f002 fcac 	bl	8002f28 <HAL_Delay>

	send(0, (uint8_t *)LOG_WR_CMD,strlen(LOG_WR_CMD));
 80005d0:	220d      	movs	r2, #13
 80005d2:	492b      	ldr	r1, [pc, #172]	; (8000680 <Send_Data+0xd8>)
 80005d4:	2000      	movs	r0, #0
 80005d6:	f001 f895 	bl	8001704 <send>
	HAL_Delay(500);
 80005da:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80005de:	f002 fca3 	bl	8002f28 <HAL_Delay>

	Send_WR_Samples();//send WR Samples
 80005e2:	f7ff ff17 	bl	8000414 <Send_WR_Samples>
	HAL_Delay(500);
 80005e6:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80005ea:	f002 fc9d 	bl	8002f28 <HAL_Delay>
	send(0, (uint8_t *)LOG_END_WRITE_CMD,strlen(LOG_END_WRITE_CMD));
 80005ee:	220c      	movs	r2, #12
 80005f0:	4924      	ldr	r1, [pc, #144]	; (8000684 <Send_Data+0xdc>)
 80005f2:	2000      	movs	r0, #0
 80005f4:	f001 f886 	bl	8001704 <send>
	HAL_Delay(500);
 80005f8:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80005fc:	f002 fc94 	bl	8002f28 <HAL_Delay>

	send(0, (uint8_t *)LOG_FCT_CMD,strlen(LOG_FCT_CMD));
 8000600:	220e      	movs	r2, #14
 8000602:	4921      	ldr	r1, [pc, #132]	; (8000688 <Send_Data+0xe0>)
 8000604:	2000      	movs	r0, #0
 8000606:	f001 f87d 	bl	8001704 <send>
	HAL_Delay(500);
 800060a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800060e:	f002 fc8b 	bl	8002f28 <HAL_Delay>

	Send_FCT_Samples();//send  Samples
 8000612:	f7ff ff41 	bl	8000498 <Send_FCT_Samples>
	HAL_Delay(500);
 8000616:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800061a:	f002 fc85 	bl	8002f28 <HAL_Delay>
	send(0, (uint8_t *)LOG_END_WRITE_CMD,strlen(LOG_END_WRITE_CMD));
 800061e:	220c      	movs	r2, #12
 8000620:	4918      	ldr	r1, [pc, #96]	; (8000684 <Send_Data+0xdc>)
 8000622:	2000      	movs	r0, #0
 8000624:	f001 f86e 	bl	8001704 <send>
	HAL_Delay(500);
 8000628:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800062c:	f002 fc7c 	bl	8002f28 <HAL_Delay>

	send(0, (uint8_t *)LOG_WL_CMD,strlen(LOG_WL_CMD));
 8000630:	220d      	movs	r2, #13
 8000632:	4916      	ldr	r1, [pc, #88]	; (800068c <Send_Data+0xe4>)
 8000634:	2000      	movs	r0, #0
 8000636:	f001 f865 	bl	8001704 <send>
	HAL_Delay(500);
 800063a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800063e:	f002 fc73 	bl	8002f28 <HAL_Delay>

	Send_WL_Samples();
 8000642:	f7ff ff6d 	bl	8000520 <Send_WL_Samples>
	HAL_Delay(500);
 8000646:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800064a:	f002 fc6d 	bl	8002f28 <HAL_Delay>
	send(0, (uint8_t *)LOG_END_WRITE_CMD,strlen(LOG_END_WRITE_CMD));
 800064e:	220c      	movs	r2, #12
 8000650:	490c      	ldr	r1, [pc, #48]	; (8000684 <Send_Data+0xdc>)
 8000652:	2000      	movs	r0, #0
 8000654:	f001 f856 	bl	8001704 <send>
	HAL_Delay(500);
 8000658:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800065c:	f002 fc64 	bl	8002f28 <HAL_Delay>
//
//	HAL_Delay(500);
//	itoa(WL_Counts,WL_Count_Bulletin,10);
//	send(0, (buff_size *)strcat(WL_Count_Bulletin,","),strlen(WL_Count_Bulletin));

	HAL_Delay(500);
 8000660:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000664:	f002 fc60 	bl	8002f28 <HAL_Delay>
	send(0, (uint8_t *)LOG_STOP_CMD,strlen(LOG_STOP_CMD));
 8000668:	2209      	movs	r2, #9
 800066a:	4909      	ldr	r1, [pc, #36]	; (8000690 <Send_Data+0xe8>)
 800066c:	2000      	movs	r0, #0
 800066e:	f001 f849 	bl	8001704 <send>
}
 8000672:	bf00      	nop
 8000674:	bd80      	pop	{r7, pc}
 8000676:	bf00      	nop
 8000678:	08006c28 	.word	0x08006c28
 800067c:	08006c34 	.word	0x08006c34
 8000680:	08006c40 	.word	0x08006c40
 8000684:	08006c50 	.word	0x08006c50
 8000688:	08006c60 	.word	0x08006c60
 800068c:	08006c70 	.word	0x08006c70
 8000690:	08006c80 	.word	0x08006c80

08000694 <cs_sel>:
uint8_t  IntStatus;
uint8_t  Sock_Rx_Flag;
uint8_t  Sock_Disconnect_Flag;

void cs_sel(void)
{
 8000694:	b580      	push	{r7, lr}
 8000696:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LAN_CS_GPIO_Port, LAN_CS_Pin, GPIO_PIN_RESET); //CS LOW
 8000698:	2200      	movs	r2, #0
 800069a:	2101      	movs	r1, #1
 800069c:	4802      	ldr	r0, [pc, #8]	; (80006a8 <cs_sel+0x14>)
 800069e:	f002 feeb 	bl	8003478 <HAL_GPIO_WritePin>
}
 80006a2:	bf00      	nop
 80006a4:	bd80      	pop	{r7, pc}
 80006a6:	bf00      	nop
 80006a8:	48000400 	.word	0x48000400

080006ac <cs_desel>:

void cs_desel(void)
{
 80006ac:	b580      	push	{r7, lr}
 80006ae:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LAN_CS_GPIO_Port, LAN_CS_Pin, GPIO_PIN_SET); //CS HIGH
 80006b0:	2201      	movs	r2, #1
 80006b2:	2101      	movs	r1, #1
 80006b4:	4802      	ldr	r0, [pc, #8]	; (80006c0 <cs_desel+0x14>)
 80006b6:	f002 fedf 	bl	8003478 <HAL_GPIO_WritePin>
}
 80006ba:	bf00      	nop
 80006bc:	bd80      	pop	{r7, pc}
 80006be:	bf00      	nop
 80006c0:	48000400 	.word	0x48000400

080006c4 <Init_Ethernet>:


void Init_Ethernet(void)
{
 80006c4:	b580      	push	{r7, lr}
 80006c6:	b088      	sub	sp, #32
 80006c8:	af00      	add	r7, sp, #0
	uint8_t bufSize[] = {2, 2, 2, 2};
 80006ca:	f04f 3302 	mov.w	r3, #33686018	; 0x2020202
 80006ce:	61fb      	str	r3, [r7, #28]

	reg_wizchip_cs_cbfunc(cs_sel, cs_desel);
 80006d0:	4922      	ldr	r1, [pc, #136]	; (800075c <Init_Ethernet+0x98>)
 80006d2:	4823      	ldr	r0, [pc, #140]	; (8000760 <Init_Ethernet+0x9c>)
 80006d4:	f001 ff2e 	bl	8002534 <reg_wizchip_cs_cbfunc>
	reg_wizchip_spi_cbfunc(spi_rb, spi_wb);
 80006d8:	4922      	ldr	r1, [pc, #136]	; (8000764 <Init_Ethernet+0xa0>)
 80006da:	4823      	ldr	r0, [pc, #140]	; (8000768 <Init_Ethernet+0xa4>)
 80006dc:	f001 ff50 	bl	8002580 <reg_wizchip_spi_cbfunc>

	wizchip_init(bufSize, bufSize);
 80006e0:	f107 021c 	add.w	r2, r7, #28
 80006e4:	f107 031c 	add.w	r3, r7, #28
 80006e8:	4611      	mov	r1, r2
 80006ea:	4618      	mov	r0, r3
 80006ec:	f002 f89e 	bl	800282c <wizchip_init>
	wiz_NetInfo netInfo = { .mac = {0x00, 0x08, 0xdc, 0xab, 0xcd, 0xef}, // Mac address
 80006f0:	1d3b      	adds	r3, r7, #4
 80006f2:	2200      	movs	r2, #0
 80006f4:	601a      	str	r2, [r3, #0]
 80006f6:	605a      	str	r2, [r3, #4]
 80006f8:	609a      	str	r2, [r3, #8]
 80006fa:	60da      	str	r2, [r3, #12]
 80006fc:	611a      	str	r2, [r3, #16]
 80006fe:	f8c3 2013 	str.w	r2, [r3, #19]
 8000702:	4a1a      	ldr	r2, [pc, #104]	; (800076c <Init_Ethernet+0xa8>)
 8000704:	1d3b      	adds	r3, r7, #4
 8000706:	e892 0003 	ldmia.w	r2, {r0, r1}
 800070a:	6018      	str	r0, [r3, #0]
 800070c:	3304      	adds	r3, #4
 800070e:	8019      	strh	r1, [r3, #0]
 8000710:	4a17      	ldr	r2, [pc, #92]	; (8000770 <Init_Ethernet+0xac>)
 8000712:	f107 030a 	add.w	r3, r7, #10
 8000716:	6810      	ldr	r0, [r2, #0]
 8000718:	6018      	str	r0, [r3, #0]
 800071a:	4a16      	ldr	r2, [pc, #88]	; (8000774 <Init_Ethernet+0xb0>)
 800071c:	f107 030e 	add.w	r3, r7, #14
 8000720:	6810      	ldr	r0, [r2, #0]
 8000722:	6018      	str	r0, [r3, #0]
 8000724:	4a14      	ldr	r2, [pc, #80]	; (8000778 <Init_Ethernet+0xb4>)
 8000726:	f107 0312 	add.w	r3, r7, #18
 800072a:	6810      	ldr	r0, [r2, #0]
 800072c:	6018      	str	r0, [r3, #0]
	 .ip = {192, 168, 1, 204},    // IP address
	 .sn = {255, 255, 255, 0},    // Subnet mask
	 .gw = {192, 168, 1, 1}};    // Gateway address

	wizchip_setnetinfo(&netInfo);
 800072e:	1d3b      	adds	r3, r7, #4
 8000730:	4618      	mov	r0, r3
 8000732:	f002 fae9 	bl	8002d08 <wizchip_setnetinfo>
	wizchip_getnetinfo(&netInfo);
 8000736:	1d3b      	adds	r3, r7, #4
 8000738:	4618      	mov	r0, r3
 800073a:	f002 fb25 	bl	8002d88 <wizchip_getnetinfo>

	setSn_IMR(0, 0x06);
 800073e:	2106      	movs	r1, #6
 8000740:	f642 4008 	movw	r0, #11272	; 0x2c08
 8000744:	f001 fc4e 	bl	8001fe4 <WIZCHIP_WRITE>
	WIZCHIP_WRITE(SIMR,0x01);
 8000748:	2101      	movs	r1, #1
 800074a:	f44f 50c0 	mov.w	r0, #6144	; 0x1800
 800074e:	f001 fc49 	bl	8001fe4 <WIZCHIP_WRITE>
}
 8000752:	bf00      	nop
 8000754:	3720      	adds	r7, #32
 8000756:	46bd      	mov	sp, r7
 8000758:	bd80      	pop	{r7, pc}
 800075a:	bf00      	nop
 800075c:	080006ad 	.word	0x080006ad
 8000760:	08000695 	.word	0x08000695
 8000764:	0800086d 	.word	0x0800086d
 8000768:	08000849 	.word	0x08000849
 800076c:	08006c8c 	.word	0x08006c8c
 8000770:	08006c94 	.word	0x08006c94
 8000774:	08006c98 	.word	0x08006c98
 8000778:	08006c9c 	.word	0x08006c9c

0800077c <Ethernet_Connect>:

void Ethernet_Connect(void)
{
 800077c:	b580      	push	{r7, lr}
 800077e:	af00      	add	r7, sp, #0
	Init_Ethernet();
 8000780:	f7ff ffa0 	bl	80006c4 <Init_Ethernet>


	while(Connect_Reply !=SOCK_OK)
 8000784:	e012      	b.n	80007ac <Ethernet_Connect+0x30>
	{
		socket(0, Sn_MR_TCP, PORT_ADDR, SF_TCP_NODELAY);
 8000786:	2320      	movs	r3, #32
 8000788:	f242 328b 	movw	r2, #9099	; 0x238b
 800078c:	2101      	movs	r1, #1
 800078e:	2000      	movs	r0, #0
 8000790:	f000 fd58 	bl	8001244 <socket>
		Refresh_Watchdog();
 8000794:	f000 f822 	bl	80007dc <Refresh_Watchdog>
		Connect_Reply = connect(0,server_Add,PORT_ADDR);
 8000798:	f242 328b 	movw	r2, #9099	; 0x238b
 800079c:	490d      	ldr	r1, [pc, #52]	; (80007d4 <Ethernet_Connect+0x58>)
 800079e:	2000      	movs	r0, #0
 80007a0:	f000 fed4 	bl	800154c <connect>
 80007a4:	4603      	mov	r3, r0
 80007a6:	b2da      	uxtb	r2, r3
 80007a8:	4b0b      	ldr	r3, [pc, #44]	; (80007d8 <Ethernet_Connect+0x5c>)
 80007aa:	701a      	strb	r2, [r3, #0]
	while(Connect_Reply !=SOCK_OK)
 80007ac:	4b0a      	ldr	r3, [pc, #40]	; (80007d8 <Ethernet_Connect+0x5c>)
 80007ae:	781b      	ldrb	r3, [r3, #0]
 80007b0:	2b01      	cmp	r3, #1
 80007b2:	d1e8      	bne.n	8000786 <Ethernet_Connect+0xa>
	}

	if(Connect_Reply == 1)
 80007b4:	4b08      	ldr	r3, [pc, #32]	; (80007d8 <Ethernet_Connect+0x5c>)
 80007b6:	781b      	ldrb	r3, [r3, #0]
 80007b8:	2b01      	cmp	r3, #1
 80007ba:	d102      	bne.n	80007c2 <Ethernet_Connect+0x46>
	{
		Connect_Reply = 0;
 80007bc:	4b06      	ldr	r3, [pc, #24]	; (80007d8 <Ethernet_Connect+0x5c>)
 80007be:	2200      	movs	r2, #0
 80007c0:	701a      	strb	r2, [r3, #0]
		//sprintf((char*)msg, IP_MSG, server_IP[0], server_IP[1], server_IP[2], server_IP[3]);
		//HAL_UART_Transmit(&huart2, (uint8_t*)"Connection Established with Server ", 35, 100);
		//HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen((const char*)msg), 100);
	}
	HAL_Delay(500);
 80007c2:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80007c6:	f002 fbaf 	bl	8002f28 <HAL_Delay>
	Refresh_Watchdog();
 80007ca:	f000 f807 	bl	80007dc <Refresh_Watchdog>

}
 80007ce:	bf00      	nop
 80007d0:	bd80      	pop	{r7, pc}
 80007d2:	bf00      	nop
 80007d4:	20000000 	.word	0x20000000
 80007d8:	200013e6 	.word	0x200013e6

080007dc <Refresh_Watchdog>:

void Refresh_Watchdog(void)
{
 80007dc:	b480      	push	{r7}
 80007de:	af00      	add	r7, sp, #0
	IWDG->KR  = 0x0000AAAA;
 80007e0:	4b04      	ldr	r3, [pc, #16]	; (80007f4 <Refresh_Watchdog+0x18>)
 80007e2:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 80007e6:	601a      	str	r2, [r3, #0]
}
 80007e8:	bf00      	nop
 80007ea:	46bd      	mov	sp, r7
 80007ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007f0:	4770      	bx	lr
 80007f2:	bf00      	nop
 80007f4:	40003000 	.word	0x40003000

080007f8 <Get_event>:
 80007f8:	b480      	push	{r7}
 80007fa:	af00      	add	r7, sp, #0
 80007fc:	4b03      	ldr	r3, [pc, #12]	; (800080c <Get_event+0x14>)
 80007fe:	785b      	ldrb	r3, [r3, #1]
 8000800:	4618      	mov	r0, r3
 8000802:	46bd      	mov	sp, r7
 8000804:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000808:	4770      	bx	lr
 800080a:	bf00      	nop
 800080c:	20000060 	.word	0x20000060

08000810 <Set_event>:
 8000810:	b480      	push	{r7}
 8000812:	b083      	sub	sp, #12
 8000814:	af00      	add	r7, sp, #0
 8000816:	4603      	mov	r3, r0
 8000818:	71fb      	strb	r3, [r7, #7]
 800081a:	4a04      	ldr	r2, [pc, #16]	; (800082c <Set_event+0x1c>)
 800081c:	79fb      	ldrb	r3, [r7, #7]
 800081e:	7053      	strb	r3, [r2, #1]
 8000820:	bf00      	nop
 8000822:	370c      	adds	r7, #12
 8000824:	46bd      	mov	sp, r7
 8000826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800082a:	4770      	bx	lr
 800082c:	20000060 	.word	0x20000060

08000830 <Reset_event>:
 8000830:	b480      	push	{r7}
 8000832:	af00      	add	r7, sp, #0
 8000834:	4b03      	ldr	r3, [pc, #12]	; (8000844 <Reset_event+0x14>)
 8000836:	2200      	movs	r2, #0
 8000838:	705a      	strb	r2, [r3, #1]
 800083a:	bf00      	nop
 800083c:	46bd      	mov	sp, r7
 800083e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000842:	4770      	bx	lr
 8000844:	20000060 	.word	0x20000060

08000848 <spi_rb>:
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
uint8_t spi_rb(void)
{
 8000848:	b580      	push	{r7, lr}
 800084a:	b082      	sub	sp, #8
 800084c:	af00      	add	r7, sp, #0
	uint8_t rbuf;
	HAL_SPI_Receive(&hspi3, &rbuf, 1, 0xffffffff);
 800084e:	1df9      	adds	r1, r7, #7
 8000850:	f04f 33ff 	mov.w	r3, #4294967295
 8000854:	2201      	movs	r2, #1
 8000856:	4804      	ldr	r0, [pc, #16]	; (8000868 <spi_rb+0x20>)
 8000858:	f004 fd92 	bl	8005380 <HAL_SPI_Receive>
	return rbuf;
 800085c:	79fb      	ldrb	r3, [r7, #7]
}
 800085e:	4618      	mov	r0, r3
 8000860:	3708      	adds	r7, #8
 8000862:	46bd      	mov	sp, r7
 8000864:	bd80      	pop	{r7, pc}
 8000866:	bf00      	nop
 8000868:	2000144c 	.word	0x2000144c

0800086c <spi_wb>:

void spi_wb(uint8_t b)
{
 800086c:	b580      	push	{r7, lr}
 800086e:	b082      	sub	sp, #8
 8000870:	af00      	add	r7, sp, #0
 8000872:	4603      	mov	r3, r0
 8000874:	71fb      	strb	r3, [r7, #7]
	HAL_SPI_Transmit(&hspi3, &b, 1, 0xffffffff);
 8000876:	1df9      	adds	r1, r7, #7
 8000878:	f04f 33ff 	mov.w	r3, #4294967295
 800087c:	2201      	movs	r2, #1
 800087e:	4803      	ldr	r0, [pc, #12]	; (800088c <spi_wb+0x20>)
 8000880:	f004 fc10 	bl	80050a4 <HAL_SPI_Transmit>
}
 8000884:	bf00      	nop
 8000886:	3708      	adds	r7, #8
 8000888:	46bd      	mov	sp, r7
 800088a:	bd80      	pop	{r7, pc}
 800088c:	2000144c 	.word	0x2000144c

08000890 <Timer2_Stop>:

void Timer2_Stop()
{
 8000890:	b580      	push	{r7, lr}
 8000892:	af00      	add	r7, sp, #0
	HAL_TIM_Base_Stop(&htim2);
 8000894:	4802      	ldr	r0, [pc, #8]	; (80008a0 <Timer2_Stop+0x10>)
 8000896:	f005 fb73 	bl	8005f80 <HAL_TIM_Base_Stop>
}
 800089a:	bf00      	nop
 800089c:	bd80      	pop	{r7, pc}
 800089e:	bf00      	nop
 80008a0:	200014d0 	.word	0x200014d0

080008a4 <Timer2_DeInitilized>:

void Timer2_DeInitilized()
{
 80008a4:	b580      	push	{r7, lr}
 80008a6:	af00      	add	r7, sp, #0
	HAL_TIM_Base_DeInit(&htim2);
 80008a8:	4802      	ldr	r0, [pc, #8]	; (80008b4 <Timer2_DeInitilized+0x10>)
 80008aa:	f005 fac0 	bl	8005e2e <HAL_TIM_Base_DeInit>
}
 80008ae:	bf00      	nop
 80008b0:	bd80      	pop	{r7, pc}
 80008b2:	bf00      	nop
 80008b4:	200014d0 	.word	0x200014d0

080008b8 <Timer2_Initilized>:

void Timer2_Initilized()
{
 80008b8:	b580      	push	{r7, lr}
 80008ba:	af00      	add	r7, sp, #0
	HAL_TIM_Base_Init(&htim2);
 80008bc:	4802      	ldr	r0, [pc, #8]	; (80008c8 <Timer2_Initilized+0x10>)
 80008be:	f005 fa5f 	bl	8005d80 <HAL_TIM_Base_Init>
}
 80008c2:	bf00      	nop
 80008c4:	bd80      	pop	{r7, pc}
 80008c6:	bf00      	nop
 80008c8:	200014d0 	.word	0x200014d0

080008cc <Timer2_Start>:

void Timer2_Start()
{
 80008cc:	b580      	push	{r7, lr}
 80008ce:	af00      	add	r7, sp, #0
	HAL_TIM_Base_Start(&htim2);
 80008d0:	4802      	ldr	r0, [pc, #8]	; (80008dc <Timer2_Start+0x10>)
 80008d2:	f005 fb09 	bl	8005ee8 <HAL_TIM_Base_Start>
}
 80008d6:	bf00      	nop
 80008d8:	bd80      	pop	{r7, pc}
 80008da:	bf00      	nop
 80008dc:	200014d0 	.word	0x200014d0

080008e0 <Timer2_GetTimer>:

int Timer2_GetTimer()
{
 80008e0:	b480      	push	{r7}
 80008e2:	b083      	sub	sp, #12
 80008e4:	af00      	add	r7, sp, #0
	uint32_t Tim_val = __HAL_TIM_GetCounter(&htim2);
 80008e6:	4b05      	ldr	r3, [pc, #20]	; (80008fc <Timer2_GetTimer+0x1c>)
 80008e8:	681b      	ldr	r3, [r3, #0]
 80008ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80008ec:	607b      	str	r3, [r7, #4]
	return Tim_val;
 80008ee:	687b      	ldr	r3, [r7, #4]
}
 80008f0:	4618      	mov	r0, r3
 80008f2:	370c      	adds	r7, #12
 80008f4:	46bd      	mov	sp, r7
 80008f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008fa:	4770      	bx	lr
 80008fc:	200014d0 	.word	0x200014d0

08000900 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000900:	b580      	push	{r7, lr}
 8000902:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000904:	f002 faaa 	bl	8002e5c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000908:	f000 f88e 	bl	8000a28 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800090c:	f000 fa4c 	bl	8000da8 <MX_GPIO_Init>
  MX_RTC_Init();
 8000910:	f000 f8f2 	bl	8000af8 <MX_RTC_Init>
  MX_SPI2_Init();
 8000914:	f000 f94a 	bl	8000bac <MX_SPI2_Init>
  MX_SPI3_Init();
 8000918:	f000 f986 	bl	8000c28 <MX_SPI3_Init>
  MX_TIM2_Init();
 800091c:	f000 f9c2 	bl	8000ca4 <MX_TIM2_Init>
  MX_USART2_UART_Init();
 8000920:	f000 fa0e 	bl	8000d40 <MX_USART2_UART_Init>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  switch(Get_state())
 8000924:	f001 f89e 	bl	8001a64 <Get_state>
 8000928:	4603      	mov	r3, r0
 800092a:	3b01      	subs	r3, #1
 800092c:	2b06      	cmp	r3, #6
 800092e:	d8f9      	bhi.n	8000924 <main+0x24>
 8000930:	a201      	add	r2, pc, #4	; (adr r2, 8000938 <main+0x38>)
 8000932:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000936:	bf00      	nop
 8000938:	08000955 	.word	0x08000955
 800093c:	08000969 	.word	0x08000969
 8000940:	08000979 	.word	0x08000979
 8000944:	080009c9 	.word	0x080009c9
 8000948:	080009d9 	.word	0x080009d9
 800094c:	080009e9 	.word	0x080009e9
 8000950:	080009f9 	.word	0x080009f9
	  	  {
	  	  case Initilisation_State:
	  		  Initilisation_State_Handler();
 8000954:	f001 f8a2 	bl	8001a9c <Initilisation_State_Handler>

	  		  if(Get_event()==Reset_Event)
 8000958:	f7ff ff4e 	bl	80007f8 <Get_event>
 800095c:	4603      	mov	r3, r0
 800095e:	2b01      	cmp	r3, #1
 8000960:	d152      	bne.n	8000a08 <main+0x108>
	  		  {
	  			  Reset_State_Handler();
 8000962:	f001 f8c9 	bl	8001af8 <Reset_State_Handler>
	  		  }
	  		  break;
 8000966:	e04f      	b.n	8000a08 <main+0x108>

	  	  case Reset_State:
	  		  if(Get_event()==Idle_Event)
 8000968:	f7ff ff46 	bl	80007f8 <Get_event>
 800096c:	4603      	mov	r3, r0
 800096e:	2b02      	cmp	r3, #2
 8000970:	d14c      	bne.n	8000a0c <main+0x10c>
	  		  {
	  			  Idle_State_Handler();
 8000972:	f001 f901 	bl	8001b78 <Idle_State_Handler>
	  		  }
	  		  break;
 8000976:	e049      	b.n	8000a0c <main+0x10c>

	  	  case Idle_State:
	  		  if(Get_event()==WRSide_Train_Detect_Event)
 8000978:	f7ff ff3e 	bl	80007f8 <Get_event>
 800097c:	4603      	mov	r3, r0
 800097e:	2b03      	cmp	r3, #3
 8000980:	d102      	bne.n	8000988 <main+0x88>
	  			  //Nothing should happen in the idle state! It only polls for a change in state. Event setting and getting and state change happens WRT ISR
	  		  {
	  			  WRSide_Train_Presence_State_Handler();
 8000982:	f001 f903 	bl	8001b8c <WRSide_Train_Presence_State_Handler>
 8000986:	e006      	b.n	8000996 <main+0x96>
	  		  }
	  		  else if (Get_event()==WLSide_Train_Detect_Event)
 8000988:	f7ff ff36 	bl	80007f8 <Get_event>
 800098c:	4603      	mov	r3, r0
 800098e:	2b04      	cmp	r3, #4
 8000990:	d101      	bne.n	8000996 <main+0x96>
	  		  {
	  			  WLSide_Train_Presence_State_Handler();
 8000992:	f001 f909 	bl	8001ba8 <WLSide_Train_Presence_State_Handler>
	  		  }

	  		  // Check for physical connection.
	  		  ctlwizchip(CW_GET_PHYLINK, (void*) &Phy_TCP_IP); // gets physical status of the TCPIP
 8000996:	4923      	ldr	r1, [pc, #140]	; (8000a24 <main+0x124>)
 8000998:	200f      	movs	r0, #15
 800099a:	f001 fe1d 	bl	80025d8 <ctlwizchip>

	  		  //if phy connection NOK, set state to initialization state
	  		  if(Phy_TCP_IP==PHY_LINK_OFF)
 800099e:	4b21      	ldr	r3, [pc, #132]	; (8000a24 <main+0x124>)
 80009a0:	781b      	ldrb	r3, [r3, #0]
 80009a2:	2b00      	cmp	r3, #0
 80009a4:	d103      	bne.n	80009ae <main+0xae>
	  		  {
					//Save the status in the flash memory with date and time stamp+++++++++++++++++++++
	  			  Set_state(Initilisation_State);
 80009a6:	2001      	movs	r0, #1
 80009a8:	f001 f868 	bl	8001a7c <Set_state>
	  			  HAL_Delay(500);
	  			  HAL_Delay(500);
	  			  //send(0, (uint8_t *)PING_CMD,strlen(PING_CMD));
	  		  }

	  		  break;
 80009ac:	e030      	b.n	8000a10 <main+0x110>
	  		  else if(Phy_TCP_IP==PHY_LINK_ON)
 80009ae:	4b1d      	ldr	r3, [pc, #116]	; (8000a24 <main+0x124>)
 80009b0:	781b      	ldrb	r3, [r3, #0]
 80009b2:	2b01      	cmp	r3, #1
 80009b4:	d12c      	bne.n	8000a10 <main+0x110>
	  			  HAL_Delay(500);
 80009b6:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80009ba:	f002 fab5 	bl	8002f28 <HAL_Delay>
	  			  HAL_Delay(500);
 80009be:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80009c2:	f002 fab1 	bl	8002f28 <HAL_Delay>
	  		  break;
 80009c6:	e023      	b.n	8000a10 <main+0x110>

	  	  case WRSide_Train_Presence_State:
	  		  if(Get_event()==Train_Exit_Event)
 80009c8:	f7ff ff16 	bl	80007f8 <Get_event>
 80009cc:	4603      	mov	r3, r0
 80009ce:	2b05      	cmp	r3, #5
 80009d0:	d120      	bne.n	8000a14 <main+0x114>
	  		  {
	  			  Train_Exit_State_Handler();
 80009d2:	f001 f8f7 	bl	8001bc4 <Train_Exit_State_Handler>
	  		  }
	  		  break;
 80009d6:	e01d      	b.n	8000a14 <main+0x114>

	  	  case WLSide_Train_Presence_State:
	  		  if(Get_event()==Train_Exit_Event)
 80009d8:	f7ff ff0e 	bl	80007f8 <Get_event>
 80009dc:	4603      	mov	r3, r0
 80009de:	2b05      	cmp	r3, #5
 80009e0:	d11a      	bne.n	8000a18 <main+0x118>
	  		  {
	  			  Train_Exit_State_Handler();
 80009e2:	f001 f8ef 	bl	8001bc4 <Train_Exit_State_Handler>
	  		  }
	  		  break;
 80009e6:	e017      	b.n	8000a18 <main+0x118>

	  	  case Train_Exit_State:
	  		  if(Get_event()==Log_Data_Event)
 80009e8:	f7ff ff06 	bl	80007f8 <Get_event>
 80009ec:	4603      	mov	r3, r0
 80009ee:	2b06      	cmp	r3, #6
 80009f0:	d114      	bne.n	8000a1c <main+0x11c>
	  		  {
	  			  Log_Data_State_Handler();
 80009f2:	f001 f8f3 	bl	8001bdc <Log_Data_State_Handler>
	  		  }
	  		  break;
 80009f6:	e011      	b.n	8000a1c <main+0x11c>

	  	  case Log_Data_State:
	  		  if(Get_event()==Reset_Event)
 80009f8:	f7ff fefe 	bl	80007f8 <Get_event>
 80009fc:	4603      	mov	r3, r0
 80009fe:	2b01      	cmp	r3, #1
 8000a00:	d10e      	bne.n	8000a20 <main+0x120>
	  		  {
	  			  Reset_State_Handler();
 8000a02:	f001 f879 	bl	8001af8 <Reset_State_Handler>
	  		  }
	  		  break;
 8000a06:	e00b      	b.n	8000a20 <main+0x120>
	  		  break;
 8000a08:	bf00      	nop
 8000a0a:	e78b      	b.n	8000924 <main+0x24>
	  		  break;
 8000a0c:	bf00      	nop
 8000a0e:	e789      	b.n	8000924 <main+0x24>
	  		  break;
 8000a10:	bf00      	nop
 8000a12:	e787      	b.n	8000924 <main+0x24>
	  		  break;
 8000a14:	bf00      	nop
 8000a16:	e785      	b.n	8000924 <main+0x24>
	  		  break;
 8000a18:	bf00      	nop
 8000a1a:	e783      	b.n	8000924 <main+0x24>
	  		  break;
 8000a1c:	bf00      	nop
 8000a1e:	e781      	b.n	8000924 <main+0x24>
	  		  break;
 8000a20:	bf00      	nop
	  switch(Get_state())
 8000a22:	e77f      	b.n	8000924 <main+0x24>
 8000a24:	20000bd9 	.word	0x20000bd9

08000a28 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000a28:	b580      	push	{r7, lr}
 8000a2a:	b09c      	sub	sp, #112	; 0x70
 8000a2c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000a2e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8000a32:	2228      	movs	r2, #40	; 0x28
 8000a34:	2100      	movs	r1, #0
 8000a36:	4618      	mov	r0, r3
 8000a38:	f006 f880 	bl	8006b3c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000a3c:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8000a40:	2200      	movs	r2, #0
 8000a42:	601a      	str	r2, [r3, #0]
 8000a44:	605a      	str	r2, [r3, #4]
 8000a46:	609a      	str	r2, [r3, #8]
 8000a48:	60da      	str	r2, [r3, #12]
 8000a4a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000a4c:	1d3b      	adds	r3, r7, #4
 8000a4e:	2230      	movs	r2, #48	; 0x30
 8000a50:	2100      	movs	r1, #0
 8000a52:	4618      	mov	r0, r3
 8000a54:	f006 f872 	bl	8006b3c <memset>

  /** Configure LSE Drive Capability
  */
  HAL_PWR_EnableBkUpAccess();
 8000a58:	f002 fd3e 	bl	80034d8 <HAL_PWR_EnableBkUpAccess>
  __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 8000a5c:	4b25      	ldr	r3, [pc, #148]	; (8000af4 <SystemClock_Config+0xcc>)
 8000a5e:	6a1b      	ldr	r3, [r3, #32]
 8000a60:	4a24      	ldr	r2, [pc, #144]	; (8000af4 <SystemClock_Config+0xcc>)
 8000a62:	f023 0318 	bic.w	r3, r3, #24
 8000a66:	6213      	str	r3, [r2, #32]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE|RCC_OSCILLATORTYPE_LSE;
 8000a68:	2305      	movs	r3, #5
 8000a6a:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000a6c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000a70:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV5;
 8000a72:	2304      	movs	r3, #4
 8000a74:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 8000a76:	2301      	movs	r3, #1
 8000a78:	657b      	str	r3, [r7, #84]	; 0x54
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000a7a:	2301      	movs	r3, #1
 8000a7c:	65bb      	str	r3, [r7, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000a7e:	2302      	movs	r3, #2
 8000a80:	667b      	str	r3, [r7, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000a82:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000a86:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL14;
 8000a88:	f44f 1340 	mov.w	r3, #3145728	; 0x300000
 8000a8c:	66fb      	str	r3, [r7, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000a8e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8000a92:	4618      	mov	r0, r3
 8000a94:	f002 fd30 	bl	80034f8 <HAL_RCC_OscConfig>
 8000a98:	4603      	mov	r3, r0
 8000a9a:	2b00      	cmp	r3, #0
 8000a9c:	d001      	beq.n	8000aa2 <SystemClock_Config+0x7a>
  {
    Error_Handler();
 8000a9e:	f000 fae9 	bl	8001074 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000aa2:	230f      	movs	r3, #15
 8000aa4:	637b      	str	r3, [r7, #52]	; 0x34
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000aa6:	2302      	movs	r3, #2
 8000aa8:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000aaa:	2300      	movs	r3, #0
 8000aac:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000aae:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000ab2:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000ab4:	2300      	movs	r3, #0
 8000ab6:	647b      	str	r3, [r7, #68]	; 0x44

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000ab8:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8000abc:	2102      	movs	r1, #2
 8000abe:	4618      	mov	r0, r3
 8000ac0:	f003 fc22 	bl	8004308 <HAL_RCC_ClockConfig>
 8000ac4:	4603      	mov	r3, r0
 8000ac6:	2b00      	cmp	r3, #0
 8000ac8:	d001      	beq.n	8000ace <SystemClock_Config+0xa6>
  {
    Error_Handler();
 8000aca:	f000 fad3 	bl	8001074 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 8000ace:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000ad2:	607b      	str	r3, [r7, #4]
  PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 8000ad4:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000ad8:	60bb      	str	r3, [r7, #8]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000ada:	1d3b      	adds	r3, r7, #4
 8000adc:	4618      	mov	r0, r3
 8000ade:	f003 fe4b 	bl	8004778 <HAL_RCCEx_PeriphCLKConfig>
 8000ae2:	4603      	mov	r3, r0
 8000ae4:	2b00      	cmp	r3, #0
 8000ae6:	d001      	beq.n	8000aec <SystemClock_Config+0xc4>
  {
    Error_Handler();
 8000ae8:	f000 fac4 	bl	8001074 <Error_Handler>
  }
}
 8000aec:	bf00      	nop
 8000aee:	3770      	adds	r7, #112	; 0x70
 8000af0:	46bd      	mov	sp, r7
 8000af2:	bd80      	pop	{r7, pc}
 8000af4:	40021000 	.word	0x40021000

08000af8 <MX_RTC_Init>:
  * @brief RTC Initialization Function
  * @param None
  * @retval None
  */
static void MX_RTC_Init(void)
{
 8000af8:	b580      	push	{r7, lr}
 8000afa:	b086      	sub	sp, #24
 8000afc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN RTC_Init 0 */

  /* USER CODE END RTC_Init 0 */

  RTC_TimeTypeDef sTime = {0};
 8000afe:	1d3b      	adds	r3, r7, #4
 8000b00:	2200      	movs	r2, #0
 8000b02:	601a      	str	r2, [r3, #0]
 8000b04:	605a      	str	r2, [r3, #4]
 8000b06:	609a      	str	r2, [r3, #8]
 8000b08:	60da      	str	r2, [r3, #12]
 8000b0a:	611a      	str	r2, [r3, #16]
  RTC_DateTypeDef sDate = {0};
 8000b0c:	2300      	movs	r3, #0
 8000b0e:	603b      	str	r3, [r7, #0]
  /* USER CODE BEGIN RTC_Init 1 */

  /* USER CODE END RTC_Init 1 */
  /** Initialize RTC Only
  */
  hrtc.Instance = RTC;
 8000b10:	4b24      	ldr	r3, [pc, #144]	; (8000ba4 <MX_RTC_Init+0xac>)
 8000b12:	4a25      	ldr	r2, [pc, #148]	; (8000ba8 <MX_RTC_Init+0xb0>)
 8000b14:	601a      	str	r2, [r3, #0]
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 8000b16:	4b23      	ldr	r3, [pc, #140]	; (8000ba4 <MX_RTC_Init+0xac>)
 8000b18:	2200      	movs	r2, #0
 8000b1a:	605a      	str	r2, [r3, #4]
  hrtc.Init.AsynchPrediv = 127;
 8000b1c:	4b21      	ldr	r3, [pc, #132]	; (8000ba4 <MX_RTC_Init+0xac>)
 8000b1e:	227f      	movs	r2, #127	; 0x7f
 8000b20:	609a      	str	r2, [r3, #8]
  hrtc.Init.SynchPrediv = 255;
 8000b22:	4b20      	ldr	r3, [pc, #128]	; (8000ba4 <MX_RTC_Init+0xac>)
 8000b24:	22ff      	movs	r2, #255	; 0xff
 8000b26:	60da      	str	r2, [r3, #12]
  hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 8000b28:	4b1e      	ldr	r3, [pc, #120]	; (8000ba4 <MX_RTC_Init+0xac>)
 8000b2a:	2200      	movs	r2, #0
 8000b2c:	611a      	str	r2, [r3, #16]
  hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 8000b2e:	4b1d      	ldr	r3, [pc, #116]	; (8000ba4 <MX_RTC_Init+0xac>)
 8000b30:	2200      	movs	r2, #0
 8000b32:	615a      	str	r2, [r3, #20]
  hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 8000b34:	4b1b      	ldr	r3, [pc, #108]	; (8000ba4 <MX_RTC_Init+0xac>)
 8000b36:	2200      	movs	r2, #0
 8000b38:	619a      	str	r2, [r3, #24]
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 8000b3a:	481a      	ldr	r0, [pc, #104]	; (8000ba4 <MX_RTC_Init+0xac>)
 8000b3c:	f003 ffa0 	bl	8004a80 <HAL_RTC_Init>
 8000b40:	4603      	mov	r3, r0
 8000b42:	2b00      	cmp	r3, #0
 8000b44:	d001      	beq.n	8000b4a <MX_RTC_Init+0x52>
  {
    Error_Handler();
 8000b46:	f000 fa95 	bl	8001074 <Error_Handler>

  /* USER CODE END Check_RTC_BKUP */

  /** Initialize RTC and set the Time and Date
  */
  sTime.Hours = 0x0;
 8000b4a:	2300      	movs	r3, #0
 8000b4c:	713b      	strb	r3, [r7, #4]
  sTime.Minutes = 0x0;
 8000b4e:	2300      	movs	r3, #0
 8000b50:	717b      	strb	r3, [r7, #5]
  sTime.Seconds = 0x0;
 8000b52:	2300      	movs	r3, #0
 8000b54:	71bb      	strb	r3, [r7, #6]
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 8000b56:	2300      	movs	r3, #0
 8000b58:	613b      	str	r3, [r7, #16]
  sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 8000b5a:	2300      	movs	r3, #0
 8000b5c:	617b      	str	r3, [r7, #20]
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 8000b5e:	1d3b      	adds	r3, r7, #4
 8000b60:	2201      	movs	r2, #1
 8000b62:	4619      	mov	r1, r3
 8000b64:	480f      	ldr	r0, [pc, #60]	; (8000ba4 <MX_RTC_Init+0xac>)
 8000b66:	f004 f81c 	bl	8004ba2 <HAL_RTC_SetTime>
 8000b6a:	4603      	mov	r3, r0
 8000b6c:	2b00      	cmp	r3, #0
 8000b6e:	d001      	beq.n	8000b74 <MX_RTC_Init+0x7c>
  {
    Error_Handler();
 8000b70:	f000 fa80 	bl	8001074 <Error_Handler>
  }
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 8000b74:	2301      	movs	r3, #1
 8000b76:	703b      	strb	r3, [r7, #0]
  sDate.Month = RTC_MONTH_MAY;
 8000b78:	2305      	movs	r3, #5
 8000b7a:	707b      	strb	r3, [r7, #1]
  sDate.Date = 0x25;
 8000b7c:	2325      	movs	r3, #37	; 0x25
 8000b7e:	70bb      	strb	r3, [r7, #2]
  sDate.Year = 0x22;
 8000b80:	2322      	movs	r3, #34	; 0x22
 8000b82:	70fb      	strb	r3, [r7, #3]

  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 8000b84:	463b      	mov	r3, r7
 8000b86:	2201      	movs	r2, #1
 8000b88:	4619      	mov	r1, r3
 8000b8a:	4806      	ldr	r0, [pc, #24]	; (8000ba4 <MX_RTC_Init+0xac>)
 8000b8c:	f004 f8c6 	bl	8004d1c <HAL_RTC_SetDate>
 8000b90:	4603      	mov	r3, r0
 8000b92:	2b00      	cmp	r3, #0
 8000b94:	d001      	beq.n	8000b9a <MX_RTC_Init+0xa2>
  {
    Error_Handler();
 8000b96:	f000 fa6d 	bl	8001074 <Error_Handler>
  }
  /* USER CODE BEGIN RTC_Init 2 */

  /* USER CODE END RTC_Init 2 */

}
 8000b9a:	bf00      	nop
 8000b9c:	3718      	adds	r7, #24
 8000b9e:	46bd      	mov	sp, r7
 8000ba0:	bd80      	pop	{r7, pc}
 8000ba2:	bf00      	nop
 8000ba4:	200014b0 	.word	0x200014b0
 8000ba8:	40002800 	.word	0x40002800

08000bac <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8000bac:	b580      	push	{r7, lr}
 8000bae:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8000bb0:	4b1b      	ldr	r3, [pc, #108]	; (8000c20 <MX_SPI2_Init+0x74>)
 8000bb2:	4a1c      	ldr	r2, [pc, #112]	; (8000c24 <MX_SPI2_Init+0x78>)
 8000bb4:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8000bb6:	4b1a      	ldr	r3, [pc, #104]	; (8000c20 <MX_SPI2_Init+0x74>)
 8000bb8:	f44f 7282 	mov.w	r2, #260	; 0x104
 8000bbc:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8000bbe:	4b18      	ldr	r3, [pc, #96]	; (8000c20 <MX_SPI2_Init+0x74>)
 8000bc0:	2200      	movs	r2, #0
 8000bc2:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8000bc4:	4b16      	ldr	r3, [pc, #88]	; (8000c20 <MX_SPI2_Init+0x74>)
 8000bc6:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8000bca:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000bcc:	4b14      	ldr	r3, [pc, #80]	; (8000c20 <MX_SPI2_Init+0x74>)
 8000bce:	2200      	movs	r2, #0
 8000bd0:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000bd2:	4b13      	ldr	r3, [pc, #76]	; (8000c20 <MX_SPI2_Init+0x74>)
 8000bd4:	2200      	movs	r2, #0
 8000bd6:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8000bd8:	4b11      	ldr	r3, [pc, #68]	; (8000c20 <MX_SPI2_Init+0x74>)
 8000bda:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000bde:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000be0:	4b0f      	ldr	r3, [pc, #60]	; (8000c20 <MX_SPI2_Init+0x74>)
 8000be2:	2200      	movs	r2, #0
 8000be4:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000be6:	4b0e      	ldr	r3, [pc, #56]	; (8000c20 <MX_SPI2_Init+0x74>)
 8000be8:	2200      	movs	r2, #0
 8000bea:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8000bec:	4b0c      	ldr	r3, [pc, #48]	; (8000c20 <MX_SPI2_Init+0x74>)
 8000bee:	2200      	movs	r2, #0
 8000bf0:	625a      	str	r2, [r3, #36]	; 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000bf2:	4b0b      	ldr	r3, [pc, #44]	; (8000c20 <MX_SPI2_Init+0x74>)
 8000bf4:	2200      	movs	r2, #0
 8000bf6:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 7;
 8000bf8:	4b09      	ldr	r3, [pc, #36]	; (8000c20 <MX_SPI2_Init+0x74>)
 8000bfa:	2207      	movs	r2, #7
 8000bfc:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8000bfe:	4b08      	ldr	r3, [pc, #32]	; (8000c20 <MX_SPI2_Init+0x74>)
 8000c00:	2200      	movs	r2, #0
 8000c02:	631a      	str	r2, [r3, #48]	; 0x30
  hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8000c04:	4b06      	ldr	r3, [pc, #24]	; (8000c20 <MX_SPI2_Init+0x74>)
 8000c06:	2208      	movs	r2, #8
 8000c08:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8000c0a:	4805      	ldr	r0, [pc, #20]	; (8000c20 <MX_SPI2_Init+0x74>)
 8000c0c:	f004 f99f 	bl	8004f4e <HAL_SPI_Init>
 8000c10:	4603      	mov	r3, r0
 8000c12:	2b00      	cmp	r3, #0
 8000c14:	d001      	beq.n	8000c1a <MX_SPI2_Init+0x6e>
  {
    Error_Handler();
 8000c16:	f000 fa2d 	bl	8001074 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8000c1a:	bf00      	nop
 8000c1c:	bd80      	pop	{r7, pc}
 8000c1e:	bf00      	nop
 8000c20:	200013e8 	.word	0x200013e8
 8000c24:	40003800 	.word	0x40003800

08000c28 <MX_SPI3_Init>:
  * @brief SPI3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI3_Init(void)
{
 8000c28:	b580      	push	{r7, lr}
 8000c2a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI3_Init 1 */

  /* USER CODE END SPI3_Init 1 */
  /* SPI3 parameter configuration*/
  hspi3.Instance = SPI3;
 8000c2c:	4b1b      	ldr	r3, [pc, #108]	; (8000c9c <MX_SPI3_Init+0x74>)
 8000c2e:	4a1c      	ldr	r2, [pc, #112]	; (8000ca0 <MX_SPI3_Init+0x78>)
 8000c30:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 8000c32:	4b1a      	ldr	r3, [pc, #104]	; (8000c9c <MX_SPI3_Init+0x74>)
 8000c34:	f44f 7282 	mov.w	r2, #260	; 0x104
 8000c38:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 8000c3a:	4b18      	ldr	r3, [pc, #96]	; (8000c9c <MX_SPI3_Init+0x74>)
 8000c3c:	2200      	movs	r2, #0
 8000c3e:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 8000c40:	4b16      	ldr	r3, [pc, #88]	; (8000c9c <MX_SPI3_Init+0x74>)
 8000c42:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8000c46:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000c48:	4b14      	ldr	r3, [pc, #80]	; (8000c9c <MX_SPI3_Init+0x74>)
 8000c4a:	2200      	movs	r2, #0
 8000c4c:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000c4e:	4b13      	ldr	r3, [pc, #76]	; (8000c9c <MX_SPI3_Init+0x74>)
 8000c50:	2200      	movs	r2, #0
 8000c52:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 8000c54:	4b11      	ldr	r3, [pc, #68]	; (8000c9c <MX_SPI3_Init+0x74>)
 8000c56:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000c5a:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000c5c:	4b0f      	ldr	r3, [pc, #60]	; (8000c9c <MX_SPI3_Init+0x74>)
 8000c5e:	2200      	movs	r2, #0
 8000c60:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000c62:	4b0e      	ldr	r3, [pc, #56]	; (8000c9c <MX_SPI3_Init+0x74>)
 8000c64:	2200      	movs	r2, #0
 8000c66:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 8000c68:	4b0c      	ldr	r3, [pc, #48]	; (8000c9c <MX_SPI3_Init+0x74>)
 8000c6a:	2200      	movs	r2, #0
 8000c6c:	625a      	str	r2, [r3, #36]	; 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000c6e:	4b0b      	ldr	r3, [pc, #44]	; (8000c9c <MX_SPI3_Init+0x74>)
 8000c70:	2200      	movs	r2, #0
 8000c72:	629a      	str	r2, [r3, #40]	; 0x28
  hspi3.Init.CRCPolynomial = 7;
 8000c74:	4b09      	ldr	r3, [pc, #36]	; (8000c9c <MX_SPI3_Init+0x74>)
 8000c76:	2207      	movs	r2, #7
 8000c78:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi3.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8000c7a:	4b08      	ldr	r3, [pc, #32]	; (8000c9c <MX_SPI3_Init+0x74>)
 8000c7c:	2200      	movs	r2, #0
 8000c7e:	631a      	str	r2, [r3, #48]	; 0x30
  hspi3.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8000c80:	4b06      	ldr	r3, [pc, #24]	; (8000c9c <MX_SPI3_Init+0x74>)
 8000c82:	2208      	movs	r2, #8
 8000c84:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 8000c86:	4805      	ldr	r0, [pc, #20]	; (8000c9c <MX_SPI3_Init+0x74>)
 8000c88:	f004 f961 	bl	8004f4e <HAL_SPI_Init>
 8000c8c:	4603      	mov	r3, r0
 8000c8e:	2b00      	cmp	r3, #0
 8000c90:	d001      	beq.n	8000c96 <MX_SPI3_Init+0x6e>
  {
    Error_Handler();
 8000c92:	f000 f9ef 	bl	8001074 <Error_Handler>
  }
  /* USER CODE BEGIN SPI3_Init 2 */

  /* USER CODE END SPI3_Init 2 */

}
 8000c96:	bf00      	nop
 8000c98:	bd80      	pop	{r7, pc}
 8000c9a:	bf00      	nop
 8000c9c:	2000144c 	.word	0x2000144c
 8000ca0:	40003c00 	.word	0x40003c00

08000ca4 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000ca4:	b580      	push	{r7, lr}
 8000ca6:	b088      	sub	sp, #32
 8000ca8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000caa:	f107 0310 	add.w	r3, r7, #16
 8000cae:	2200      	movs	r2, #0
 8000cb0:	601a      	str	r2, [r3, #0]
 8000cb2:	605a      	str	r2, [r3, #4]
 8000cb4:	609a      	str	r2, [r3, #8]
 8000cb6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000cb8:	1d3b      	adds	r3, r7, #4
 8000cba:	2200      	movs	r2, #0
 8000cbc:	601a      	str	r2, [r3, #0]
 8000cbe:	605a      	str	r2, [r3, #4]
 8000cc0:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000cc2:	4b1e      	ldr	r3, [pc, #120]	; (8000d3c <MX_TIM2_Init+0x98>)
 8000cc4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000cc8:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 70-1;
 8000cca:	4b1c      	ldr	r3, [pc, #112]	; (8000d3c <MX_TIM2_Init+0x98>)
 8000ccc:	2245      	movs	r2, #69	; 0x45
 8000cce:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000cd0:	4b1a      	ldr	r3, [pc, #104]	; (8000d3c <MX_TIM2_Init+0x98>)
 8000cd2:	2200      	movs	r2, #0
 8000cd4:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 0xFFFFFFFF-1;
 8000cd6:	4b19      	ldr	r3, [pc, #100]	; (8000d3c <MX_TIM2_Init+0x98>)
 8000cd8:	f06f 0201 	mvn.w	r2, #1
 8000cdc:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000cde:	4b17      	ldr	r3, [pc, #92]	; (8000d3c <MX_TIM2_Init+0x98>)
 8000ce0:	2200      	movs	r2, #0
 8000ce2:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000ce4:	4b15      	ldr	r3, [pc, #84]	; (8000d3c <MX_TIM2_Init+0x98>)
 8000ce6:	2200      	movs	r2, #0
 8000ce8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000cea:	4814      	ldr	r0, [pc, #80]	; (8000d3c <MX_TIM2_Init+0x98>)
 8000cec:	f005 f848 	bl	8005d80 <HAL_TIM_Base_Init>
 8000cf0:	4603      	mov	r3, r0
 8000cf2:	2b00      	cmp	r3, #0
 8000cf4:	d001      	beq.n	8000cfa <MX_TIM2_Init+0x56>
  {
    Error_Handler();
 8000cf6:	f000 f9bd 	bl	8001074 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000cfa:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000cfe:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000d00:	f107 0310 	add.w	r3, r7, #16
 8000d04:	4619      	mov	r1, r3
 8000d06:	480d      	ldr	r0, [pc, #52]	; (8000d3c <MX_TIM2_Init+0x98>)
 8000d08:	f005 f961 	bl	8005fce <HAL_TIM_ConfigClockSource>
 8000d0c:	4603      	mov	r3, r0
 8000d0e:	2b00      	cmp	r3, #0
 8000d10:	d001      	beq.n	8000d16 <MX_TIM2_Init+0x72>
  {
    Error_Handler();
 8000d12:	f000 f9af 	bl	8001074 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000d16:	2300      	movs	r3, #0
 8000d18:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000d1a:	2300      	movs	r3, #0
 8000d1c:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000d1e:	1d3b      	adds	r3, r7, #4
 8000d20:	4619      	mov	r1, r3
 8000d22:	4806      	ldr	r0, [pc, #24]	; (8000d3c <MX_TIM2_Init+0x98>)
 8000d24:	f005 fb24 	bl	8006370 <HAL_TIMEx_MasterConfigSynchronization>
 8000d28:	4603      	mov	r3, r0
 8000d2a:	2b00      	cmp	r3, #0
 8000d2c:	d001      	beq.n	8000d32 <MX_TIM2_Init+0x8e>
  {
    Error_Handler();
 8000d2e:	f000 f9a1 	bl	8001074 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000d32:	bf00      	nop
 8000d34:	3720      	adds	r7, #32
 8000d36:	46bd      	mov	sp, r7
 8000d38:	bd80      	pop	{r7, pc}
 8000d3a:	bf00      	nop
 8000d3c:	200014d0 	.word	0x200014d0

08000d40 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000d40:	b580      	push	{r7, lr}
 8000d42:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000d44:	4b16      	ldr	r3, [pc, #88]	; (8000da0 <MX_USART2_UART_Init+0x60>)
 8000d46:	4a17      	ldr	r2, [pc, #92]	; (8000da4 <MX_USART2_UART_Init+0x64>)
 8000d48:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 8000d4a:	4b15      	ldr	r3, [pc, #84]	; (8000da0 <MX_USART2_UART_Init+0x60>)
 8000d4c:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8000d50:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000d52:	4b13      	ldr	r3, [pc, #76]	; (8000da0 <MX_USART2_UART_Init+0x60>)
 8000d54:	2200      	movs	r2, #0
 8000d56:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000d58:	4b11      	ldr	r3, [pc, #68]	; (8000da0 <MX_USART2_UART_Init+0x60>)
 8000d5a:	2200      	movs	r2, #0
 8000d5c:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000d5e:	4b10      	ldr	r3, [pc, #64]	; (8000da0 <MX_USART2_UART_Init+0x60>)
 8000d60:	2200      	movs	r2, #0
 8000d62:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000d64:	4b0e      	ldr	r3, [pc, #56]	; (8000da0 <MX_USART2_UART_Init+0x60>)
 8000d66:	220c      	movs	r2, #12
 8000d68:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000d6a:	4b0d      	ldr	r3, [pc, #52]	; (8000da0 <MX_USART2_UART_Init+0x60>)
 8000d6c:	2200      	movs	r2, #0
 8000d6e:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000d70:	4b0b      	ldr	r3, [pc, #44]	; (8000da0 <MX_USART2_UART_Init+0x60>)
 8000d72:	2200      	movs	r2, #0
 8000d74:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8000d76:	4b0a      	ldr	r3, [pc, #40]	; (8000da0 <MX_USART2_UART_Init+0x60>)
 8000d78:	2200      	movs	r2, #0
 8000d7a:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_RXOVERRUNDISABLE_INIT;
 8000d7c:	4b08      	ldr	r3, [pc, #32]	; (8000da0 <MX_USART2_UART_Init+0x60>)
 8000d7e:	2210      	movs	r2, #16
 8000d80:	625a      	str	r2, [r3, #36]	; 0x24
  huart2.AdvancedInit.OverrunDisable = UART_ADVFEATURE_OVERRUN_DISABLE;
 8000d82:	4b07      	ldr	r3, [pc, #28]	; (8000da0 <MX_USART2_UART_Init+0x60>)
 8000d84:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000d88:	639a      	str	r2, [r3, #56]	; 0x38
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8000d8a:	4805      	ldr	r0, [pc, #20]	; (8000da0 <MX_USART2_UART_Init+0x60>)
 8000d8c:	f005 fb56 	bl	800643c <HAL_UART_Init>
 8000d90:	4603      	mov	r3, r0
 8000d92:	2b00      	cmp	r3, #0
 8000d94:	d001      	beq.n	8000d9a <MX_USART2_UART_Init+0x5a>
  {
    Error_Handler();
 8000d96:	f000 f96d 	bl	8001074 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8000d9a:	bf00      	nop
 8000d9c:	bd80      	pop	{r7, pc}
 8000d9e:	bf00      	nop
 8000da0:	2000151c 	.word	0x2000151c
 8000da4:	40004400 	.word	0x40004400

08000da8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000da8:	b580      	push	{r7, lr}
 8000daa:	b08a      	sub	sp, #40	; 0x28
 8000dac:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000dae:	f107 0314 	add.w	r3, r7, #20
 8000db2:	2200      	movs	r2, #0
 8000db4:	601a      	str	r2, [r3, #0]
 8000db6:	605a      	str	r2, [r3, #4]
 8000db8:	609a      	str	r2, [r3, #8]
 8000dba:	60da      	str	r2, [r3, #12]
 8000dbc:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000dbe:	4b56      	ldr	r3, [pc, #344]	; (8000f18 <MX_GPIO_Init+0x170>)
 8000dc0:	695b      	ldr	r3, [r3, #20]
 8000dc2:	4a55      	ldr	r2, [pc, #340]	; (8000f18 <MX_GPIO_Init+0x170>)
 8000dc4:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8000dc8:	6153      	str	r3, [r2, #20]
 8000dca:	4b53      	ldr	r3, [pc, #332]	; (8000f18 <MX_GPIO_Init+0x170>)
 8000dcc:	695b      	ldr	r3, [r3, #20]
 8000dce:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8000dd2:	613b      	str	r3, [r7, #16]
 8000dd4:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000dd6:	4b50      	ldr	r3, [pc, #320]	; (8000f18 <MX_GPIO_Init+0x170>)
 8000dd8:	695b      	ldr	r3, [r3, #20]
 8000dda:	4a4f      	ldr	r2, [pc, #316]	; (8000f18 <MX_GPIO_Init+0x170>)
 8000ddc:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000de0:	6153      	str	r3, [r2, #20]
 8000de2:	4b4d      	ldr	r3, [pc, #308]	; (8000f18 <MX_GPIO_Init+0x170>)
 8000de4:	695b      	ldr	r3, [r3, #20]
 8000de6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8000dea:	60fb      	str	r3, [r7, #12]
 8000dec:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000dee:	4b4a      	ldr	r3, [pc, #296]	; (8000f18 <MX_GPIO_Init+0x170>)
 8000df0:	695b      	ldr	r3, [r3, #20]
 8000df2:	4a49      	ldr	r2, [pc, #292]	; (8000f18 <MX_GPIO_Init+0x170>)
 8000df4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000df8:	6153      	str	r3, [r2, #20]
 8000dfa:	4b47      	ldr	r3, [pc, #284]	; (8000f18 <MX_GPIO_Init+0x170>)
 8000dfc:	695b      	ldr	r3, [r3, #20]
 8000dfe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000e02:	60bb      	str	r3, [r7, #8]
 8000e04:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000e06:	4b44      	ldr	r3, [pc, #272]	; (8000f18 <MX_GPIO_Init+0x170>)
 8000e08:	695b      	ldr	r3, [r3, #20]
 8000e0a:	4a43      	ldr	r2, [pc, #268]	; (8000f18 <MX_GPIO_Init+0x170>)
 8000e0c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8000e10:	6153      	str	r3, [r2, #20]
 8000e12:	4b41      	ldr	r3, [pc, #260]	; (8000f18 <MX_GPIO_Init+0x170>)
 8000e14:	695b      	ldr	r3, [r3, #20]
 8000e16:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8000e1a:	607b      	str	r3, [r7, #4]
 8000e1c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LAN_CS_GPIO_Port, LAN_CS_Pin, GPIO_PIN_SET);
 8000e1e:	2201      	movs	r2, #1
 8000e20:	2101      	movs	r1, #1
 8000e22:	483e      	ldr	r0, [pc, #248]	; (8000f1c <MX_GPIO_Init+0x174>)
 8000e24:	f002 fb28 	bl	8003478 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12|CA_OP_Pin|LA_OP_Pin, GPIO_PIN_RESET);
 8000e28:	2200      	movs	r2, #0
 8000e2a:	f44f 5198 	mov.w	r1, #4864	; 0x1300
 8000e2e:	483b      	ldr	r0, [pc, #236]	; (8000f1c <MX_GPIO_Init+0x174>)
 8000e30:	f002 fb22 	bl	8003478 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, CA_OP1_Pin|LA_OP1_Pin, GPIO_PIN_RESET);
 8000e34:	2200      	movs	r2, #0
 8000e36:	f44f 7140 	mov.w	r1, #768	; 0x300
 8000e3a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000e3e:	f002 fb1b 	bl	8003478 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LAN_RESET_GPIO_Port, LAN_RESET_Pin, GPIO_PIN_SET);
 8000e42:	2201      	movs	r2, #1
 8000e44:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000e48:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000e4c:	f002 fb14 	bl	8003478 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : WR_IP_Pin WL_IP_Pin F_IP_Pin */
  GPIO_InitStruct.Pin = WR_IP_Pin|WL_IP_Pin|F_IP_Pin;
 8000e50:	2323      	movs	r3, #35	; 0x23
 8000e52:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000e54:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8000e58:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000e5a:	2301      	movs	r3, #1
 8000e5c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000e5e:	f107 0314 	add.w	r3, r7, #20
 8000e62:	4619      	mov	r1, r3
 8000e64:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000e68:	f002 f994 	bl	8003194 <HAL_GPIO_Init>

  /*Configure GPIO pin : LAN_CS_Pin */
  GPIO_InitStruct.Pin = LAN_CS_Pin;
 8000e6c:	2301      	movs	r3, #1
 8000e6e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e70:	2301      	movs	r3, #1
 8000e72:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000e74:	2301      	movs	r3, #1
 8000e76:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e78:	2300      	movs	r3, #0
 8000e7a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LAN_CS_GPIO_Port, &GPIO_InitStruct);
 8000e7c:	f107 0314 	add.w	r3, r7, #20
 8000e80:	4619      	mov	r1, r3
 8000e82:	4826      	ldr	r0, [pc, #152]	; (8000f1c <MX_GPIO_Init+0x174>)
 8000e84:	f002 f986 	bl	8003194 <HAL_GPIO_Init>

  /*Configure GPIO pin : LAN_INT_Pin */
  GPIO_InitStruct.Pin = LAN_INT_Pin;
 8000e88:	2304      	movs	r3, #4
 8000e8a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000e8c:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8000e90:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000e92:	2301      	movs	r3, #1
 8000e94:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LAN_INT_GPIO_Port, &GPIO_InitStruct);
 8000e96:	f107 0314 	add.w	r3, r7, #20
 8000e9a:	4619      	mov	r1, r3
 8000e9c:	481f      	ldr	r0, [pc, #124]	; (8000f1c <MX_GPIO_Init+0x174>)
 8000e9e:	f002 f979 	bl	8003194 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB12 CA_OP_Pin LA_OP_Pin */
  GPIO_InitStruct.Pin = GPIO_PIN_12|CA_OP_Pin|LA_OP_Pin;
 8000ea2:	f44f 5398 	mov.w	r3, #4864	; 0x1300
 8000ea6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ea8:	2301      	movs	r3, #1
 8000eaa:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000eac:	2300      	movs	r3, #0
 8000eae:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000eb0:	2300      	movs	r3, #0
 8000eb2:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000eb4:	f107 0314 	add.w	r3, r7, #20
 8000eb8:	4619      	mov	r1, r3
 8000eba:	4818      	ldr	r0, [pc, #96]	; (8000f1c <MX_GPIO_Init+0x174>)
 8000ebc:	f002 f96a 	bl	8003194 <HAL_GPIO_Init>

  /*Configure GPIO pins : CA_OP1_Pin LA_OP1_Pin LAN_RESET_Pin */
  GPIO_InitStruct.Pin = CA_OP1_Pin|LA_OP1_Pin|LAN_RESET_Pin;
 8000ec0:	f44f 4303 	mov.w	r3, #33536	; 0x8300
 8000ec4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ec6:	2301      	movs	r3, #1
 8000ec8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000eca:	2300      	movs	r3, #0
 8000ecc:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ece:	2300      	movs	r3, #0
 8000ed0:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000ed2:	f107 0314 	add.w	r3, r7, #20
 8000ed6:	4619      	mov	r1, r3
 8000ed8:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000edc:	f002 f95a 	bl	8003194 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 8000ee0:	2200      	movs	r2, #0
 8000ee2:	2100      	movs	r1, #0
 8000ee4:	2006      	movs	r0, #6
 8000ee6:	f002 f91e 	bl	8003126 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 8000eea:	2006      	movs	r0, #6
 8000eec:	f002 f937 	bl	800315e <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI1_IRQn, 0, 0);
 8000ef0:	2200      	movs	r2, #0
 8000ef2:	2100      	movs	r1, #0
 8000ef4:	2007      	movs	r0, #7
 8000ef6:	f002 f916 	bl	8003126 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 8000efa:	2007      	movs	r0, #7
 8000efc:	f002 f92f 	bl	800315e <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8000f00:	2200      	movs	r2, #0
 8000f02:	2100      	movs	r1, #0
 8000f04:	2017      	movs	r0, #23
 8000f06:	f002 f90e 	bl	8003126 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8000f0a:	2017      	movs	r0, #23
 8000f0c:	f002 f927 	bl	800315e <HAL_NVIC_EnableIRQ>

}
 8000f10:	bf00      	nop
 8000f12:	3728      	adds	r7, #40	; 0x28
 8000f14:	46bd      	mov	sp, r7
 8000f16:	bd80      	pop	{r7, pc}
 8000f18:	40021000 	.word	0x40021000
 8000f1c:	48000400 	.word	0x48000400

08000f20 <HAL_GPIO_EXTI_Callback>:

/* USER CODE BEGIN 4 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8000f20:	b580      	push	{r7, lr}
 8000f22:	b082      	sub	sp, #8
 8000f24:	af00      	add	r7, sp, #0
 8000f26:	4603      	mov	r3, r0
 8000f28:	80fb      	strh	r3, [r7, #6]
  UNUSED(GPIO_Pin);

  /* NOTE: This function should not be modified, when the callback is needed
   */

  switch(GPIO_Pin)
 8000f2a:	88fb      	ldrh	r3, [r7, #6]
 8000f2c:	3b01      	subs	r3, #1
 8000f2e:	2b1f      	cmp	r3, #31
 8000f30:	f200 8097 	bhi.w	8001062 <HAL_GPIO_EXTI_Callback+0x142>
 8000f34:	a201      	add	r2, pc, #4	; (adr r2, 8000f3c <HAL_GPIO_EXTI_Callback+0x1c>)
 8000f36:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000f3a:	bf00      	nop
 8000f3c:	08000fbd 	.word	0x08000fbd
 8000f40:	08000ffb 	.word	0x08000ffb
 8000f44:	08001063 	.word	0x08001063
 8000f48:	08001057 	.word	0x08001057
 8000f4c:	08001063 	.word	0x08001063
 8000f50:	08001063 	.word	0x08001063
 8000f54:	08001063 	.word	0x08001063
 8000f58:	08001063 	.word	0x08001063
 8000f5c:	08001063 	.word	0x08001063
 8000f60:	08001063 	.word	0x08001063
 8000f64:	08001063 	.word	0x08001063
 8000f68:	08001063 	.word	0x08001063
 8000f6c:	08001063 	.word	0x08001063
 8000f70:	08001063 	.word	0x08001063
 8000f74:	08001063 	.word	0x08001063
 8000f78:	08001063 	.word	0x08001063
 8000f7c:	08001063 	.word	0x08001063
 8000f80:	08001063 	.word	0x08001063
 8000f84:	08001063 	.word	0x08001063
 8000f88:	08001063 	.word	0x08001063
 8000f8c:	08001063 	.word	0x08001063
 8000f90:	08001063 	.word	0x08001063
 8000f94:	08001063 	.word	0x08001063
 8000f98:	08001063 	.word	0x08001063
 8000f9c:	08001063 	.word	0x08001063
 8000fa0:	08001063 	.word	0x08001063
 8000fa4:	08001063 	.word	0x08001063
 8000fa8:	08001063 	.word	0x08001063
 8000fac:	08001063 	.word	0x08001063
 8000fb0:	08001063 	.word	0x08001063
 8000fb4:	08001063 	.word	0x08001063
 8000fb8:	08001039 	.word	0x08001039
  {
  case WR_IP_Pin:
	  switch(Get_state()){
 8000fbc:	f000 fd52 	bl	8001a64 <Get_state>
 8000fc0:	4603      	mov	r3, r0
 8000fc2:	2b05      	cmp	r3, #5
 8000fc4:	d00c      	beq.n	8000fe0 <HAL_GPIO_EXTI_Callback+0xc0>
 8000fc6:	2b05      	cmp	r3, #5
 8000fc8:	dc0d      	bgt.n	8000fe6 <HAL_GPIO_EXTI_Callback+0xc6>
 8000fca:	2b03      	cmp	r3, #3
 8000fcc:	d002      	beq.n	8000fd4 <HAL_GPIO_EXTI_Callback+0xb4>
 8000fce:	2b04      	cmp	r3, #4
 8000fd0:	d003      	beq.n	8000fda <HAL_GPIO_EXTI_Callback+0xba>
 8000fd2:	e008      	b.n	8000fe6 <HAL_GPIO_EXTI_Callback+0xc6>
	  case Idle_State:
		  Set_event(WRSide_Train_Detect_Event);
 8000fd4:	2003      	movs	r0, #3
 8000fd6:	f7ff fc1b 	bl	8000810 <Set_event>
	  case WRSide_Train_Presence_State:
		  WR_Interrupt_Service();
 8000fda:	f7ff f933 	bl	8000244 <WR_Interrupt_Service>
		  break;
 8000fde:	e002      	b.n	8000fe6 <HAL_GPIO_EXTI_Callback+0xc6>
	  case WLSide_Train_Presence_State:
		  WR_Interrupt_Service();
 8000fe0:	f7ff f930 	bl	8000244 <WR_Interrupt_Service>
		  break;
 8000fe4:	bf00      	nop
	  }

	  if (WR_Counts==WL_Counts)//(Counts of WL_Counts==WR_Counts)
 8000fe6:	4b21      	ldr	r3, [pc, #132]	; (800106c <HAL_GPIO_EXTI_Callback+0x14c>)
 8000fe8:	681a      	ldr	r2, [r3, #0]
 8000fea:	4b21      	ldr	r3, [pc, #132]	; (8001070 <HAL_GPIO_EXTI_Callback+0x150>)
 8000fec:	681b      	ldr	r3, [r3, #0]
 8000fee:	429a      	cmp	r2, r3
 8000ff0:	d134      	bne.n	800105c <HAL_GPIO_EXTI_Callback+0x13c>
	  {
		  Set_event(Train_Exit_Event);
 8000ff2:	2005      	movs	r0, #5
 8000ff4:	f7ff fc0c 	bl	8000810 <Set_event>
	  }
	  break;
 8000ff8:	e030      	b.n	800105c <HAL_GPIO_EXTI_Callback+0x13c>

  case WL_IP_Pin:

	  switch(Get_state()){
 8000ffa:	f000 fd33 	bl	8001a64 <Get_state>
 8000ffe:	4603      	mov	r3, r0
 8001000:	2b05      	cmp	r3, #5
 8001002:	d00c      	beq.n	800101e <HAL_GPIO_EXTI_Callback+0xfe>
 8001004:	2b05      	cmp	r3, #5
 8001006:	dc0d      	bgt.n	8001024 <HAL_GPIO_EXTI_Callback+0x104>
 8001008:	2b03      	cmp	r3, #3
 800100a:	d002      	beq.n	8001012 <HAL_GPIO_EXTI_Callback+0xf2>
 800100c:	2b04      	cmp	r3, #4
 800100e:	d003      	beq.n	8001018 <HAL_GPIO_EXTI_Callback+0xf8>
 8001010:	e008      	b.n	8001024 <HAL_GPIO_EXTI_Callback+0x104>
	  case Idle_State:
		  Set_event(WLSide_Train_Detect_Event);
 8001012:	2004      	movs	r0, #4
 8001014:	f7ff fbfc 	bl	8000810 <Set_event>
	  case WRSide_Train_Presence_State:
		  WL_Interrupt_Service();
 8001018:	f7ff f9a0 	bl	800035c <WL_Interrupt_Service>
		  break;
 800101c:	e002      	b.n	8001024 <HAL_GPIO_EXTI_Callback+0x104>
	  case WLSide_Train_Presence_State:
		  WL_Interrupt_Service();
 800101e:	f7ff f99d 	bl	800035c <WL_Interrupt_Service>
		  break;
 8001022:	bf00      	nop
	  }

	  if (WR_Counts==WL_Counts)
 8001024:	4b11      	ldr	r3, [pc, #68]	; (800106c <HAL_GPIO_EXTI_Callback+0x14c>)
 8001026:	681a      	ldr	r2, [r3, #0]
 8001028:	4b11      	ldr	r3, [pc, #68]	; (8001070 <HAL_GPIO_EXTI_Callback+0x150>)
 800102a:	681b      	ldr	r3, [r3, #0]
 800102c:	429a      	cmp	r2, r3
 800102e:	d117      	bne.n	8001060 <HAL_GPIO_EXTI_Callback+0x140>
	  {
		  Set_event(Train_Exit_Event);
 8001030:	2005      	movs	r0, #5
 8001032:	f7ff fbed 	bl	8000810 <Set_event>
	  }

	  break;
 8001036:	e013      	b.n	8001060 <HAL_GPIO_EXTI_Callback+0x140>


  case F_IP_Pin:

	  switch(Get_state())
 8001038:	f000 fd14 	bl	8001a64 <Get_state>
 800103c:	4603      	mov	r3, r0
 800103e:	2b04      	cmp	r3, #4
 8001040:	d002      	beq.n	8001048 <HAL_GPIO_EXTI_Callback+0x128>
 8001042:	2b05      	cmp	r3, #5
 8001044:	d003      	beq.n	800104e <HAL_GPIO_EXTI_Callback+0x12e>
		  break;
	  case WLSide_Train_Presence_State:
		  FCT_Interrupt_Service();
		  break;
	  }
	  break;
 8001046:	e00c      	b.n	8001062 <HAL_GPIO_EXTI_Callback+0x142>
		  FCT_Interrupt_Service();
 8001048:	f7ff f958 	bl	80002fc <FCT_Interrupt_Service>
		  break;
 800104c:	e002      	b.n	8001054 <HAL_GPIO_EXTI_Callback+0x134>
		  FCT_Interrupt_Service();
 800104e:	f7ff f955 	bl	80002fc <FCT_Interrupt_Service>
		  break;
 8001052:	bf00      	nop
	  break;
 8001054:	e005      	b.n	8001062 <HAL_GPIO_EXTI_Callback+0x142>

  case LAN_INT_Pin:

	  Lan_Interrupt_Service();
 8001056:	f7ff f8bf 	bl	80001d8 <Lan_Interrupt_Service>
	  break;
 800105a:	e002      	b.n	8001062 <HAL_GPIO_EXTI_Callback+0x142>
	  break;
 800105c:	bf00      	nop
 800105e:	e000      	b.n	8001062 <HAL_GPIO_EXTI_Callback+0x142>
	  break;
 8001060:	bf00      	nop
  }
}
 8001062:	bf00      	nop
 8001064:	3708      	adds	r7, #8
 8001066:	46bd      	mov	sp, r7
 8001068:	bd80      	pop	{r7, pc}
 800106a:	bf00      	nop
 800106c:	20000878 	.word	0x20000878
 8001070:	200003fc 	.word	0x200003fc

08001074 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001074:	b480      	push	{r7}
 8001076:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001078:	bf00      	nop
 800107a:	46bd      	mov	sp, r7
 800107c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001080:	4770      	bx	lr

08001082 <RingInit>:
 8001082:	b580      	push	{r7, lr}
 8001084:	b084      	sub	sp, #16
 8001086:	af00      	add	r7, sp, #0
 8001088:	60f8      	str	r0, [r7, #12]
 800108a:	60b9      	str	r1, [r7, #8]
 800108c:	607a      	str	r2, [r7, #4]
 800108e:	603b      	str	r3, [r7, #0]
 8001090:	68fb      	ldr	r3, [r7, #12]
 8001092:	2b00      	cmp	r3, #0
 8001094:	d102      	bne.n	800109c <RingInit+0x1a>
 8001096:	f06f 0302 	mvn.w	r3, #2
 800109a:	e03b      	b.n	8001114 <RingInit+0x92>
 800109c:	68bb      	ldr	r3, [r7, #8]
 800109e:	2b00      	cmp	r3, #0
 80010a0:	d102      	bne.n	80010a8 <RingInit+0x26>
 80010a2:	f06f 0302 	mvn.w	r3, #2
 80010a6:	e035      	b.n	8001114 <RingInit+0x92>
 80010a8:	2220      	movs	r2, #32
 80010aa:	2100      	movs	r1, #0
 80010ac:	68f8      	ldr	r0, [r7, #12]
 80010ae:	f005 fd45 	bl	8006b3c <memset>
 80010b2:	68bb      	ldr	r3, [r7, #8]
 80010b4:	2b00      	cmp	r3, #0
 80010b6:	d102      	bne.n	80010be <RingInit+0x3c>
 80010b8:	f06f 0302 	mvn.w	r3, #2
 80010bc:	e02a      	b.n	8001114 <RingInit+0x92>
 80010be:	687b      	ldr	r3, [r7, #4]
 80010c0:	2b00      	cmp	r3, #0
 80010c2:	d102      	bne.n	80010ca <RingInit+0x48>
 80010c4:	f06f 0301 	mvn.w	r3, #1
 80010c8:	e024      	b.n	8001114 <RingInit+0x92>
 80010ca:	68fb      	ldr	r3, [r7, #12]
 80010cc:	68ba      	ldr	r2, [r7, #8]
 80010ce:	61da      	str	r2, [r3, #28]
 80010d0:	68fb      	ldr	r3, [r7, #12]
 80010d2:	687a      	ldr	r2, [r7, #4]
 80010d4:	601a      	str	r2, [r3, #0]
 80010d6:	68fb      	ldr	r3, [r7, #12]
 80010d8:	681b      	ldr	r3, [r3, #0]
 80010da:	1e5a      	subs	r2, r3, #1
 80010dc:	68fb      	ldr	r3, [r7, #12]
 80010de:	619a      	str	r2, [r3, #24]
 80010e0:	68fb      	ldr	r3, [r7, #12]
 80010e2:	2200      	movs	r2, #0
 80010e4:	611a      	str	r2, [r3, #16]
 80010e6:	68fb      	ldr	r3, [r7, #12]
 80010e8:	2200      	movs	r2, #0
 80010ea:	615a      	str	r2, [r3, #20]
 80010ec:	68fb      	ldr	r3, [r7, #12]
 80010ee:	683a      	ldr	r2, [r7, #0]
 80010f0:	605a      	str	r2, [r3, #4]
 80010f2:	68fb      	ldr	r3, [r7, #12]
 80010f4:	685b      	ldr	r3, [r3, #4]
 80010f6:	68fa      	ldr	r2, [r7, #12]
 80010f8:	6812      	ldr	r2, [r2, #0]
 80010fa:	fb02 f203 	mul.w	r2, r2, r3
 80010fe:	68fb      	ldr	r3, [r7, #12]
 8001100:	609a      	str	r2, [r3, #8]
 8001102:	68fb      	ldr	r3, [r7, #12]
 8001104:	69d8      	ldr	r0, [r3, #28]
 8001106:	68fb      	ldr	r3, [r7, #12]
 8001108:	689b      	ldr	r3, [r3, #8]
 800110a:	461a      	mov	r2, r3
 800110c:	2100      	movs	r1, #0
 800110e:	f005 fd15 	bl	8006b3c <memset>
 8001112:	2301      	movs	r3, #1
 8001114:	4618      	mov	r0, r3
 8001116:	3710      	adds	r7, #16
 8001118:	46bd      	mov	sp, r7
 800111a:	bd80      	pop	{r7, pc}

0800111c <RingWriteElement>:
 800111c:	b580      	push	{r7, lr}
 800111e:	b088      	sub	sp, #32
 8001120:	af00      	add	r7, sp, #0
 8001122:	6078      	str	r0, [r7, #4]
 8001124:	6039      	str	r1, [r7, #0]
 8001126:	2301      	movs	r3, #1
 8001128:	77fb      	strb	r3, [r7, #31]
 800112a:	687b      	ldr	r3, [r7, #4]
 800112c:	2b00      	cmp	r3, #0
 800112e:	d102      	bne.n	8001136 <RingWriteElement+0x1a>
 8001130:	f06f 0302 	mvn.w	r3, #2
 8001134:	e03e      	b.n	80011b4 <RingWriteElement+0x98>
 8001136:	683b      	ldr	r3, [r7, #0]
 8001138:	2b00      	cmp	r3, #0
 800113a:	d102      	bne.n	8001142 <RingWriteElement+0x26>
 800113c:	f06f 0302 	mvn.w	r3, #2
 8001140:	e038      	b.n	80011b4 <RingWriteElement+0x98>
 8001142:	687b      	ldr	r3, [r7, #4]
 8001144:	69db      	ldr	r3, [r3, #28]
 8001146:	2b00      	cmp	r3, #0
 8001148:	d102      	bne.n	8001150 <RingWriteElement+0x34>
 800114a:	f06f 0302 	mvn.w	r3, #2
 800114e:	e031      	b.n	80011b4 <RingWriteElement+0x98>
 8001150:	687b      	ldr	r3, [r7, #4]
 8001152:	691b      	ldr	r3, [r3, #16]
 8001154:	61bb      	str	r3, [r7, #24]
 8001156:	687b      	ldr	r3, [r7, #4]
 8001158:	695b      	ldr	r3, [r3, #20]
 800115a:	617b      	str	r3, [r7, #20]
 800115c:	687b      	ldr	r3, [r7, #4]
 800115e:	685b      	ldr	r3, [r3, #4]
 8001160:	613b      	str	r3, [r7, #16]
 8001162:	687b      	ldr	r3, [r7, #4]
 8001164:	689b      	ldr	r3, [r3, #8]
 8001166:	60fb      	str	r3, [r7, #12]
 8001168:	687b      	ldr	r3, [r7, #4]
 800116a:	69da      	ldr	r2, [r3, #28]
 800116c:	69bb      	ldr	r3, [r7, #24]
 800116e:	4413      	add	r3, r2
 8001170:	60bb      	str	r3, [r7, #8]
 8001172:	69ba      	ldr	r2, [r7, #24]
 8001174:	693b      	ldr	r3, [r7, #16]
 8001176:	4413      	add	r3, r2
 8001178:	68fa      	ldr	r2, [r7, #12]
 800117a:	fbb3 f2f2 	udiv	r2, r3, r2
 800117e:	68f9      	ldr	r1, [r7, #12]
 8001180:	fb01 f202 	mul.w	r2, r1, r2
 8001184:	1a9b      	subs	r3, r3, r2
 8001186:	61bb      	str	r3, [r7, #24]
 8001188:	69ba      	ldr	r2, [r7, #24]
 800118a:	697b      	ldr	r3, [r7, #20]
 800118c:	429a      	cmp	r2, r3
 800118e:	d00d      	beq.n	80011ac <RingWriteElement+0x90>
 8001190:	693a      	ldr	r2, [r7, #16]
 8001192:	6839      	ldr	r1, [r7, #0]
 8001194:	68b8      	ldr	r0, [r7, #8]
 8001196:	f005 fcc3 	bl	8006b20 <memcpy>
 800119a:	687b      	ldr	r3, [r7, #4]
 800119c:	69ba      	ldr	r2, [r7, #24]
 800119e:	611a      	str	r2, [r3, #16]
 80011a0:	687b      	ldr	r3, [r7, #4]
 80011a2:	699b      	ldr	r3, [r3, #24]
 80011a4:	1e5a      	subs	r2, r3, #1
 80011a6:	687b      	ldr	r3, [r7, #4]
 80011a8:	619a      	str	r2, [r3, #24]
 80011aa:	e001      	b.n	80011b0 <RingWriteElement+0x94>
 80011ac:	23ff      	movs	r3, #255	; 0xff
 80011ae:	77fb      	strb	r3, [r7, #31]
 80011b0:	f997 301f 	ldrsb.w	r3, [r7, #31]
 80011b4:	4618      	mov	r0, r3
 80011b6:	3720      	adds	r7, #32
 80011b8:	46bd      	mov	sp, r7
 80011ba:	bd80      	pop	{r7, pc}

080011bc <RingReadElement>:
 80011bc:	b580      	push	{r7, lr}
 80011be:	b08a      	sub	sp, #40	; 0x28
 80011c0:	af00      	add	r7, sp, #0
 80011c2:	6078      	str	r0, [r7, #4]
 80011c4:	6039      	str	r1, [r7, #0]
 80011c6:	2301      	movs	r3, #1
 80011c8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80011cc:	687b      	ldr	r3, [r7, #4]
 80011ce:	691b      	ldr	r3, [r3, #16]
 80011d0:	623b      	str	r3, [r7, #32]
 80011d2:	687b      	ldr	r3, [r7, #4]
 80011d4:	695b      	ldr	r3, [r3, #20]
 80011d6:	61fb      	str	r3, [r7, #28]
 80011d8:	687b      	ldr	r3, [r7, #4]
 80011da:	699b      	ldr	r3, [r3, #24]
 80011dc:	61bb      	str	r3, [r7, #24]
 80011de:	687b      	ldr	r3, [r7, #4]
 80011e0:	689b      	ldr	r3, [r3, #8]
 80011e2:	617b      	str	r3, [r7, #20]
 80011e4:	687b      	ldr	r3, [r7, #4]
 80011e6:	685b      	ldr	r3, [r3, #4]
 80011e8:	613b      	str	r3, [r7, #16]
 80011ea:	687b      	ldr	r3, [r7, #4]
 80011ec:	69da      	ldr	r2, [r3, #28]
 80011ee:	69fb      	ldr	r3, [r7, #28]
 80011f0:	4413      	add	r3, r2
 80011f2:	60fb      	str	r3, [r7, #12]
 80011f4:	6a3a      	ldr	r2, [r7, #32]
 80011f6:	69fb      	ldr	r3, [r7, #28]
 80011f8:	429a      	cmp	r2, r3
 80011fa:	d019      	beq.n	8001230 <RingReadElement+0x74>
 80011fc:	693a      	ldr	r2, [r7, #16]
 80011fe:	68f9      	ldr	r1, [r7, #12]
 8001200:	6838      	ldr	r0, [r7, #0]
 8001202:	f005 fc8d 	bl	8006b20 <memcpy>
 8001206:	69fa      	ldr	r2, [r7, #28]
 8001208:	693b      	ldr	r3, [r7, #16]
 800120a:	4413      	add	r3, r2
 800120c:	697a      	ldr	r2, [r7, #20]
 800120e:	fbb3 f2f2 	udiv	r2, r3, r2
 8001212:	6979      	ldr	r1, [r7, #20]
 8001214:	fb01 f202 	mul.w	r2, r1, r2
 8001218:	1a9b      	subs	r3, r3, r2
 800121a:	61fb      	str	r3, [r7, #28]
 800121c:	69bb      	ldr	r3, [r7, #24]
 800121e:	3301      	adds	r3, #1
 8001220:	61bb      	str	r3, [r7, #24]
 8001222:	687b      	ldr	r3, [r7, #4]
 8001224:	69fa      	ldr	r2, [r7, #28]
 8001226:	615a      	str	r2, [r3, #20]
 8001228:	687b      	ldr	r3, [r7, #4]
 800122a:	69ba      	ldr	r2, [r7, #24]
 800122c:	619a      	str	r2, [r3, #24]
 800122e:	e002      	b.n	8001236 <RingReadElement+0x7a>
 8001230:	23fe      	movs	r3, #254	; 0xfe
 8001232:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8001236:	f997 3027 	ldrsb.w	r3, [r7, #39]	; 0x27
 800123a:	4618      	mov	r0, r3
 800123c:	3728      	adds	r7, #40	; 0x28
 800123e:	46bd      	mov	sp, r7
 8001240:	bd80      	pop	{r7, pc}
	...

08001244 <socket>:
 8001244:	b590      	push	{r4, r7, lr}
 8001246:	b085      	sub	sp, #20
 8001248:	af00      	add	r7, sp, #0
 800124a:	4604      	mov	r4, r0
 800124c:	4608      	mov	r0, r1
 800124e:	4611      	mov	r1, r2
 8001250:	461a      	mov	r2, r3
 8001252:	4623      	mov	r3, r4
 8001254:	71fb      	strb	r3, [r7, #7]
 8001256:	4603      	mov	r3, r0
 8001258:	71bb      	strb	r3, [r7, #6]
 800125a:	460b      	mov	r3, r1
 800125c:	80bb      	strh	r3, [r7, #4]
 800125e:	4613      	mov	r3, r2
 8001260:	70fb      	strb	r3, [r7, #3]
 8001262:	79fb      	ldrb	r3, [r7, #7]
 8001264:	2b08      	cmp	r3, #8
 8001266:	d902      	bls.n	800126e <socket+0x2a>
 8001268:	f04f 33ff 	mov.w	r3, #4294967295
 800126c:	e0f2      	b.n	8001454 <socket+0x210>
 800126e:	79bb      	ldrb	r3, [r7, #6]
 8001270:	2b01      	cmp	r3, #1
 8001272:	d005      	beq.n	8001280 <socket+0x3c>
 8001274:	2b00      	cmp	r3, #0
 8001276:	dd11      	ble.n	800129c <socket+0x58>
 8001278:	3b02      	subs	r3, #2
 800127a:	2b02      	cmp	r3, #2
 800127c:	d80e      	bhi.n	800129c <socket+0x58>
 800127e:	e011      	b.n	80012a4 <socket+0x60>
 8001280:	f107 030c 	add.w	r3, r7, #12
 8001284:	2204      	movs	r2, #4
 8001286:	4619      	mov	r1, r3
 8001288:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 800128c:	f000 fef8 	bl	8002080 <WIZCHIP_READ_BUF>
 8001290:	68fb      	ldr	r3, [r7, #12]
 8001292:	2b00      	cmp	r3, #0
 8001294:	d105      	bne.n	80012a2 <socket+0x5e>
 8001296:	f06f 0302 	mvn.w	r3, #2
 800129a:	e0db      	b.n	8001454 <socket+0x210>
 800129c:	f06f 0304 	mvn.w	r3, #4
 80012a0:	e0d8      	b.n	8001454 <socket+0x210>
 80012a2:	bf00      	nop
 80012a4:	78fb      	ldrb	r3, [r7, #3]
 80012a6:	f003 0304 	and.w	r3, r3, #4
 80012aa:	2b00      	cmp	r3, #0
 80012ac:	d002      	beq.n	80012b4 <socket+0x70>
 80012ae:	f06f 0305 	mvn.w	r3, #5
 80012b2:	e0cf      	b.n	8001454 <socket+0x210>
 80012b4:	78fb      	ldrb	r3, [r7, #3]
 80012b6:	2b00      	cmp	r3, #0
 80012b8:	d025      	beq.n	8001306 <socket+0xc2>
 80012ba:	79bb      	ldrb	r3, [r7, #6]
 80012bc:	2b01      	cmp	r3, #1
 80012be:	d002      	beq.n	80012c6 <socket+0x82>
 80012c0:	2b02      	cmp	r3, #2
 80012c2:	d008      	beq.n	80012d6 <socket+0x92>
 80012c4:	e024      	b.n	8001310 <socket+0xcc>
 80012c6:	78fb      	ldrb	r3, [r7, #3]
 80012c8:	f003 0321 	and.w	r3, r3, #33	; 0x21
 80012cc:	2b00      	cmp	r3, #0
 80012ce:	d11c      	bne.n	800130a <socket+0xc6>
 80012d0:	f06f 0305 	mvn.w	r3, #5
 80012d4:	e0be      	b.n	8001454 <socket+0x210>
 80012d6:	78fb      	ldrb	r3, [r7, #3]
 80012d8:	f003 0320 	and.w	r3, r3, #32
 80012dc:	2b00      	cmp	r3, #0
 80012de:	d006      	beq.n	80012ee <socket+0xaa>
 80012e0:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80012e4:	2b00      	cmp	r3, #0
 80012e6:	db02      	blt.n	80012ee <socket+0xaa>
 80012e8:	f06f 0305 	mvn.w	r3, #5
 80012ec:	e0b2      	b.n	8001454 <socket+0x210>
 80012ee:	78fb      	ldrb	r3, [r7, #3]
 80012f0:	f003 0310 	and.w	r3, r3, #16
 80012f4:	2b00      	cmp	r3, #0
 80012f6:	d00a      	beq.n	800130e <socket+0xca>
 80012f8:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80012fc:	2b00      	cmp	r3, #0
 80012fe:	db06      	blt.n	800130e <socket+0xca>
 8001300:	f06f 0305 	mvn.w	r3, #5
 8001304:	e0a6      	b.n	8001454 <socket+0x210>
 8001306:	bf00      	nop
 8001308:	e002      	b.n	8001310 <socket+0xcc>
 800130a:	bf00      	nop
 800130c:	e000      	b.n	8001310 <socket+0xcc>
 800130e:	bf00      	nop
 8001310:	79fb      	ldrb	r3, [r7, #7]
 8001312:	4618      	mov	r0, r3
 8001314:	f000 f8ac 	bl	8001470 <close>
 8001318:	79fb      	ldrb	r3, [r7, #7]
 800131a:	009b      	lsls	r3, r3, #2
 800131c:	3301      	adds	r3, #1
 800131e:	00db      	lsls	r3, r3, #3
 8001320:	4618      	mov	r0, r3
 8001322:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8001326:	f023 030f 	bic.w	r3, r3, #15
 800132a:	b25a      	sxtb	r2, r3
 800132c:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8001330:	4313      	orrs	r3, r2
 8001332:	b25b      	sxtb	r3, r3
 8001334:	b2db      	uxtb	r3, r3
 8001336:	4619      	mov	r1, r3
 8001338:	f000 fe54 	bl	8001fe4 <WIZCHIP_WRITE>
 800133c:	88bb      	ldrh	r3, [r7, #4]
 800133e:	2b00      	cmp	r3, #0
 8001340:	d110      	bne.n	8001364 <socket+0x120>
 8001342:	4b46      	ldr	r3, [pc, #280]	; (800145c <socket+0x218>)
 8001344:	881b      	ldrh	r3, [r3, #0]
 8001346:	1c5a      	adds	r2, r3, #1
 8001348:	b291      	uxth	r1, r2
 800134a:	4a44      	ldr	r2, [pc, #272]	; (800145c <socket+0x218>)
 800134c:	8011      	strh	r1, [r2, #0]
 800134e:	80bb      	strh	r3, [r7, #4]
 8001350:	4b42      	ldr	r3, [pc, #264]	; (800145c <socket+0x218>)
 8001352:	881b      	ldrh	r3, [r3, #0]
 8001354:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 8001358:	4293      	cmp	r3, r2
 800135a:	d103      	bne.n	8001364 <socket+0x120>
 800135c:	4b3f      	ldr	r3, [pc, #252]	; (800145c <socket+0x218>)
 800135e:	f44f 4240 	mov.w	r2, #49152	; 0xc000
 8001362:	801a      	strh	r2, [r3, #0]
 8001364:	79fb      	ldrb	r3, [r7, #7]
 8001366:	009b      	lsls	r3, r3, #2
 8001368:	3301      	adds	r3, #1
 800136a:	00db      	lsls	r3, r3, #3
 800136c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001370:	461a      	mov	r2, r3
 8001372:	88bb      	ldrh	r3, [r7, #4]
 8001374:	0a1b      	lsrs	r3, r3, #8
 8001376:	b29b      	uxth	r3, r3
 8001378:	b2db      	uxtb	r3, r3
 800137a:	4619      	mov	r1, r3
 800137c:	4610      	mov	r0, r2
 800137e:	f000 fe31 	bl	8001fe4 <WIZCHIP_WRITE>
 8001382:	79fb      	ldrb	r3, [r7, #7]
 8001384:	009b      	lsls	r3, r3, #2
 8001386:	3301      	adds	r3, #1
 8001388:	00db      	lsls	r3, r3, #3
 800138a:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 800138e:	461a      	mov	r2, r3
 8001390:	88bb      	ldrh	r3, [r7, #4]
 8001392:	b2db      	uxtb	r3, r3
 8001394:	4619      	mov	r1, r3
 8001396:	4610      	mov	r0, r2
 8001398:	f000 fe24 	bl	8001fe4 <WIZCHIP_WRITE>
 800139c:	79fb      	ldrb	r3, [r7, #7]
 800139e:	009b      	lsls	r3, r3, #2
 80013a0:	3301      	adds	r3, #1
 80013a2:	00db      	lsls	r3, r3, #3
 80013a4:	f503 7380 	add.w	r3, r3, #256	; 0x100
 80013a8:	2101      	movs	r1, #1
 80013aa:	4618      	mov	r0, r3
 80013ac:	f000 fe1a 	bl	8001fe4 <WIZCHIP_WRITE>
 80013b0:	bf00      	nop
 80013b2:	79fb      	ldrb	r3, [r7, #7]
 80013b4:	009b      	lsls	r3, r3, #2
 80013b6:	3301      	adds	r3, #1
 80013b8:	00db      	lsls	r3, r3, #3
 80013ba:	f503 7380 	add.w	r3, r3, #256	; 0x100
 80013be:	4618      	mov	r0, r3
 80013c0:	f000 fdc4 	bl	8001f4c <WIZCHIP_READ>
 80013c4:	4603      	mov	r3, r0
 80013c6:	2b00      	cmp	r3, #0
 80013c8:	d1f3      	bne.n	80013b2 <socket+0x16e>
 80013ca:	79fb      	ldrb	r3, [r7, #7]
 80013cc:	2201      	movs	r2, #1
 80013ce:	fa02 f303 	lsl.w	r3, r2, r3
 80013d2:	b21b      	sxth	r3, r3
 80013d4:	43db      	mvns	r3, r3
 80013d6:	b21a      	sxth	r2, r3
 80013d8:	4b21      	ldr	r3, [pc, #132]	; (8001460 <socket+0x21c>)
 80013da:	881b      	ldrh	r3, [r3, #0]
 80013dc:	b21b      	sxth	r3, r3
 80013de:	4013      	ands	r3, r2
 80013e0:	b21b      	sxth	r3, r3
 80013e2:	b29a      	uxth	r2, r3
 80013e4:	4b1e      	ldr	r3, [pc, #120]	; (8001460 <socket+0x21c>)
 80013e6:	801a      	strh	r2, [r3, #0]
 80013e8:	78fb      	ldrb	r3, [r7, #3]
 80013ea:	f003 0201 	and.w	r2, r3, #1
 80013ee:	79fb      	ldrb	r3, [r7, #7]
 80013f0:	fa02 f303 	lsl.w	r3, r2, r3
 80013f4:	b21a      	sxth	r2, r3
 80013f6:	4b1a      	ldr	r3, [pc, #104]	; (8001460 <socket+0x21c>)
 80013f8:	881b      	ldrh	r3, [r3, #0]
 80013fa:	b21b      	sxth	r3, r3
 80013fc:	4313      	orrs	r3, r2
 80013fe:	b21b      	sxth	r3, r3
 8001400:	b29a      	uxth	r2, r3
 8001402:	4b17      	ldr	r3, [pc, #92]	; (8001460 <socket+0x21c>)
 8001404:	801a      	strh	r2, [r3, #0]
 8001406:	79fb      	ldrb	r3, [r7, #7]
 8001408:	2201      	movs	r2, #1
 800140a:	fa02 f303 	lsl.w	r3, r2, r3
 800140e:	b21b      	sxth	r3, r3
 8001410:	43db      	mvns	r3, r3
 8001412:	b21a      	sxth	r2, r3
 8001414:	4b13      	ldr	r3, [pc, #76]	; (8001464 <socket+0x220>)
 8001416:	881b      	ldrh	r3, [r3, #0]
 8001418:	b21b      	sxth	r3, r3
 800141a:	4013      	ands	r3, r2
 800141c:	b21b      	sxth	r3, r3
 800141e:	b29a      	uxth	r2, r3
 8001420:	4b10      	ldr	r3, [pc, #64]	; (8001464 <socket+0x220>)
 8001422:	801a      	strh	r2, [r3, #0]
 8001424:	79fb      	ldrb	r3, [r7, #7]
 8001426:	4a10      	ldr	r2, [pc, #64]	; (8001468 <socket+0x224>)
 8001428:	2100      	movs	r1, #0
 800142a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800142e:	79fb      	ldrb	r3, [r7, #7]
 8001430:	4a0e      	ldr	r2, [pc, #56]	; (800146c <socket+0x228>)
 8001432:	2100      	movs	r1, #0
 8001434:	54d1      	strb	r1, [r2, r3]
 8001436:	bf00      	nop
 8001438:	79fb      	ldrb	r3, [r7, #7]
 800143a:	009b      	lsls	r3, r3, #2
 800143c:	3301      	adds	r3, #1
 800143e:	00db      	lsls	r3, r3, #3
 8001440:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8001444:	4618      	mov	r0, r3
 8001446:	f000 fd81 	bl	8001f4c <WIZCHIP_READ>
 800144a:	4603      	mov	r3, r0
 800144c:	2b00      	cmp	r3, #0
 800144e:	d0f3      	beq.n	8001438 <socket+0x1f4>
 8001450:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001454:	4618      	mov	r0, r3
 8001456:	3714      	adds	r7, #20
 8001458:	46bd      	mov	sp, r7
 800145a:	bd90      	pop	{r4, r7, pc}
 800145c:	20000004 	.word	0x20000004
 8001460:	20000062 	.word	0x20000062
 8001464:	20000064 	.word	0x20000064
 8001468:	20000068 	.word	0x20000068
 800146c:	20000078 	.word	0x20000078

08001470 <close>:
 8001470:	b580      	push	{r7, lr}
 8001472:	b082      	sub	sp, #8
 8001474:	af00      	add	r7, sp, #0
 8001476:	4603      	mov	r3, r0
 8001478:	71fb      	strb	r3, [r7, #7]
 800147a:	79fb      	ldrb	r3, [r7, #7]
 800147c:	2b08      	cmp	r3, #8
 800147e:	d902      	bls.n	8001486 <close+0x16>
 8001480:	f04f 33ff 	mov.w	r3, #4294967295
 8001484:	e055      	b.n	8001532 <close+0xc2>
 8001486:	79fb      	ldrb	r3, [r7, #7]
 8001488:	009b      	lsls	r3, r3, #2
 800148a:	3301      	adds	r3, #1
 800148c:	00db      	lsls	r3, r3, #3
 800148e:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8001492:	2110      	movs	r1, #16
 8001494:	4618      	mov	r0, r3
 8001496:	f000 fda5 	bl	8001fe4 <WIZCHIP_WRITE>
 800149a:	bf00      	nop
 800149c:	79fb      	ldrb	r3, [r7, #7]
 800149e:	009b      	lsls	r3, r3, #2
 80014a0:	3301      	adds	r3, #1
 80014a2:	00db      	lsls	r3, r3, #3
 80014a4:	f503 7380 	add.w	r3, r3, #256	; 0x100
 80014a8:	4618      	mov	r0, r3
 80014aa:	f000 fd4f 	bl	8001f4c <WIZCHIP_READ>
 80014ae:	4603      	mov	r3, r0
 80014b0:	2b00      	cmp	r3, #0
 80014b2:	d1f3      	bne.n	800149c <close+0x2c>
 80014b4:	79fb      	ldrb	r3, [r7, #7]
 80014b6:	009b      	lsls	r3, r3, #2
 80014b8:	3301      	adds	r3, #1
 80014ba:	00db      	lsls	r3, r3, #3
 80014bc:	f503 7300 	add.w	r3, r3, #512	; 0x200
 80014c0:	211f      	movs	r1, #31
 80014c2:	4618      	mov	r0, r3
 80014c4:	f000 fd8e 	bl	8001fe4 <WIZCHIP_WRITE>
 80014c8:	79fb      	ldrb	r3, [r7, #7]
 80014ca:	2201      	movs	r2, #1
 80014cc:	fa02 f303 	lsl.w	r3, r2, r3
 80014d0:	b21b      	sxth	r3, r3
 80014d2:	43db      	mvns	r3, r3
 80014d4:	b21a      	sxth	r2, r3
 80014d6:	4b19      	ldr	r3, [pc, #100]	; (800153c <close+0xcc>)
 80014d8:	881b      	ldrh	r3, [r3, #0]
 80014da:	b21b      	sxth	r3, r3
 80014dc:	4013      	ands	r3, r2
 80014de:	b21b      	sxth	r3, r3
 80014e0:	b29a      	uxth	r2, r3
 80014e2:	4b16      	ldr	r3, [pc, #88]	; (800153c <close+0xcc>)
 80014e4:	801a      	strh	r2, [r3, #0]
 80014e6:	79fb      	ldrb	r3, [r7, #7]
 80014e8:	2201      	movs	r2, #1
 80014ea:	fa02 f303 	lsl.w	r3, r2, r3
 80014ee:	b21b      	sxth	r3, r3
 80014f0:	43db      	mvns	r3, r3
 80014f2:	b21a      	sxth	r2, r3
 80014f4:	4b12      	ldr	r3, [pc, #72]	; (8001540 <close+0xd0>)
 80014f6:	881b      	ldrh	r3, [r3, #0]
 80014f8:	b21b      	sxth	r3, r3
 80014fa:	4013      	ands	r3, r2
 80014fc:	b21b      	sxth	r3, r3
 80014fe:	b29a      	uxth	r2, r3
 8001500:	4b0f      	ldr	r3, [pc, #60]	; (8001540 <close+0xd0>)
 8001502:	801a      	strh	r2, [r3, #0]
 8001504:	79fb      	ldrb	r3, [r7, #7]
 8001506:	4a0f      	ldr	r2, [pc, #60]	; (8001544 <close+0xd4>)
 8001508:	2100      	movs	r1, #0
 800150a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800150e:	79fb      	ldrb	r3, [r7, #7]
 8001510:	4a0d      	ldr	r2, [pc, #52]	; (8001548 <close+0xd8>)
 8001512:	2100      	movs	r1, #0
 8001514:	54d1      	strb	r1, [r2, r3]
 8001516:	bf00      	nop
 8001518:	79fb      	ldrb	r3, [r7, #7]
 800151a:	009b      	lsls	r3, r3, #2
 800151c:	3301      	adds	r3, #1
 800151e:	00db      	lsls	r3, r3, #3
 8001520:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8001524:	4618      	mov	r0, r3
 8001526:	f000 fd11 	bl	8001f4c <WIZCHIP_READ>
 800152a:	4603      	mov	r3, r0
 800152c:	2b00      	cmp	r3, #0
 800152e:	d1f3      	bne.n	8001518 <close+0xa8>
 8001530:	2301      	movs	r3, #1
 8001532:	4618      	mov	r0, r3
 8001534:	3708      	adds	r7, #8
 8001536:	46bd      	mov	sp, r7
 8001538:	bd80      	pop	{r7, pc}
 800153a:	bf00      	nop
 800153c:	20000062 	.word	0x20000062
 8001540:	20000064 	.word	0x20000064
 8001544:	20000068 	.word	0x20000068
 8001548:	20000078 	.word	0x20000078

0800154c <connect>:
 800154c:	b580      	push	{r7, lr}
 800154e:	b084      	sub	sp, #16
 8001550:	af00      	add	r7, sp, #0
 8001552:	4603      	mov	r3, r0
 8001554:	6039      	str	r1, [r7, #0]
 8001556:	71fb      	strb	r3, [r7, #7]
 8001558:	4613      	mov	r3, r2
 800155a:	80bb      	strh	r3, [r7, #4]
 800155c:	79fb      	ldrb	r3, [r7, #7]
 800155e:	2b08      	cmp	r3, #8
 8001560:	d902      	bls.n	8001568 <connect+0x1c>
 8001562:	f04f 33ff 	mov.w	r3, #4294967295
 8001566:	e0c6      	b.n	80016f6 <connect+0x1aa>
 8001568:	79fb      	ldrb	r3, [r7, #7]
 800156a:	009b      	lsls	r3, r3, #2
 800156c:	3301      	adds	r3, #1
 800156e:	00db      	lsls	r3, r3, #3
 8001570:	4618      	mov	r0, r3
 8001572:	f000 fceb 	bl	8001f4c <WIZCHIP_READ>
 8001576:	4603      	mov	r3, r0
 8001578:	f003 030f 	and.w	r3, r3, #15
 800157c:	2b01      	cmp	r3, #1
 800157e:	d002      	beq.n	8001586 <connect+0x3a>
 8001580:	f06f 0304 	mvn.w	r3, #4
 8001584:	e0b7      	b.n	80016f6 <connect+0x1aa>
 8001586:	79fb      	ldrb	r3, [r7, #7]
 8001588:	009b      	lsls	r3, r3, #2
 800158a:	3301      	adds	r3, #1
 800158c:	00db      	lsls	r3, r3, #3
 800158e:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8001592:	4618      	mov	r0, r3
 8001594:	f000 fcda 	bl	8001f4c <WIZCHIP_READ>
 8001598:	4603      	mov	r3, r0
 800159a:	2b13      	cmp	r3, #19
 800159c:	d002      	beq.n	80015a4 <connect+0x58>
 800159e:	f06f 0302 	mvn.w	r3, #2
 80015a2:	e0a8      	b.n	80016f6 <connect+0x1aa>
 80015a4:	683b      	ldr	r3, [r7, #0]
 80015a6:	781b      	ldrb	r3, [r3, #0]
 80015a8:	60fb      	str	r3, [r7, #12]
 80015aa:	68fb      	ldr	r3, [r7, #12]
 80015ac:	021b      	lsls	r3, r3, #8
 80015ae:	683a      	ldr	r2, [r7, #0]
 80015b0:	3201      	adds	r2, #1
 80015b2:	7812      	ldrb	r2, [r2, #0]
 80015b4:	4413      	add	r3, r2
 80015b6:	60fb      	str	r3, [r7, #12]
 80015b8:	68fb      	ldr	r3, [r7, #12]
 80015ba:	021b      	lsls	r3, r3, #8
 80015bc:	683a      	ldr	r2, [r7, #0]
 80015be:	3202      	adds	r2, #2
 80015c0:	7812      	ldrb	r2, [r2, #0]
 80015c2:	4413      	add	r3, r2
 80015c4:	60fb      	str	r3, [r7, #12]
 80015c6:	68fb      	ldr	r3, [r7, #12]
 80015c8:	021b      	lsls	r3, r3, #8
 80015ca:	683a      	ldr	r2, [r7, #0]
 80015cc:	3203      	adds	r2, #3
 80015ce:	7812      	ldrb	r2, [r2, #0]
 80015d0:	4413      	add	r3, r2
 80015d2:	60fb      	str	r3, [r7, #12]
 80015d4:	68fb      	ldr	r3, [r7, #12]
 80015d6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80015da:	d002      	beq.n	80015e2 <connect+0x96>
 80015dc:	68fb      	ldr	r3, [r7, #12]
 80015de:	2b00      	cmp	r3, #0
 80015e0:	d102      	bne.n	80015e8 <connect+0x9c>
 80015e2:	f06f 030b 	mvn.w	r3, #11
 80015e6:	e086      	b.n	80016f6 <connect+0x1aa>
 80015e8:	88bb      	ldrh	r3, [r7, #4]
 80015ea:	2b00      	cmp	r3, #0
 80015ec:	d102      	bne.n	80015f4 <connect+0xa8>
 80015ee:	f06f 030a 	mvn.w	r3, #10
 80015f2:	e080      	b.n	80016f6 <connect+0x1aa>
 80015f4:	79fb      	ldrb	r3, [r7, #7]
 80015f6:	009b      	lsls	r3, r3, #2
 80015f8:	3301      	adds	r3, #1
 80015fa:	00db      	lsls	r3, r3, #3
 80015fc:	f503 6340 	add.w	r3, r3, #3072	; 0xc00
 8001600:	2204      	movs	r2, #4
 8001602:	6839      	ldr	r1, [r7, #0]
 8001604:	4618      	mov	r0, r3
 8001606:	f000 fd9b 	bl	8002140 <WIZCHIP_WRITE_BUF>
 800160a:	79fb      	ldrb	r3, [r7, #7]
 800160c:	009b      	lsls	r3, r3, #2
 800160e:	3301      	adds	r3, #1
 8001610:	00db      	lsls	r3, r3, #3
 8001612:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8001616:	461a      	mov	r2, r3
 8001618:	88bb      	ldrh	r3, [r7, #4]
 800161a:	0a1b      	lsrs	r3, r3, #8
 800161c:	b29b      	uxth	r3, r3
 800161e:	b2db      	uxtb	r3, r3
 8001620:	4619      	mov	r1, r3
 8001622:	4610      	mov	r0, r2
 8001624:	f000 fcde 	bl	8001fe4 <WIZCHIP_WRITE>
 8001628:	79fb      	ldrb	r3, [r7, #7]
 800162a:	009b      	lsls	r3, r3, #2
 800162c:	3301      	adds	r3, #1
 800162e:	00db      	lsls	r3, r3, #3
 8001630:	f503 5388 	add.w	r3, r3, #4352	; 0x1100
 8001634:	461a      	mov	r2, r3
 8001636:	88bb      	ldrh	r3, [r7, #4]
 8001638:	b2db      	uxtb	r3, r3
 800163a:	4619      	mov	r1, r3
 800163c:	4610      	mov	r0, r2
 800163e:	f000 fcd1 	bl	8001fe4 <WIZCHIP_WRITE>
 8001642:	79fb      	ldrb	r3, [r7, #7]
 8001644:	009b      	lsls	r3, r3, #2
 8001646:	3301      	adds	r3, #1
 8001648:	00db      	lsls	r3, r3, #3
 800164a:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800164e:	2104      	movs	r1, #4
 8001650:	4618      	mov	r0, r3
 8001652:	f000 fcc7 	bl	8001fe4 <WIZCHIP_WRITE>
 8001656:	bf00      	nop
 8001658:	79fb      	ldrb	r3, [r7, #7]
 800165a:	009b      	lsls	r3, r3, #2
 800165c:	3301      	adds	r3, #1
 800165e:	00db      	lsls	r3, r3, #3
 8001660:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8001664:	4618      	mov	r0, r3
 8001666:	f000 fc71 	bl	8001f4c <WIZCHIP_READ>
 800166a:	4603      	mov	r3, r0
 800166c:	2b00      	cmp	r3, #0
 800166e:	d1f3      	bne.n	8001658 <connect+0x10c>
 8001670:	4b23      	ldr	r3, [pc, #140]	; (8001700 <connect+0x1b4>)
 8001672:	881b      	ldrh	r3, [r3, #0]
 8001674:	461a      	mov	r2, r3
 8001676:	79fb      	ldrb	r3, [r7, #7]
 8001678:	fa42 f303 	asr.w	r3, r2, r3
 800167c:	f003 0301 	and.w	r3, r3, #1
 8001680:	2b00      	cmp	r3, #0
 8001682:	d02b      	beq.n	80016dc <connect+0x190>
 8001684:	2300      	movs	r3, #0
 8001686:	e036      	b.n	80016f6 <connect+0x1aa>
 8001688:	79fb      	ldrb	r3, [r7, #7]
 800168a:	009b      	lsls	r3, r3, #2
 800168c:	3301      	adds	r3, #1
 800168e:	00db      	lsls	r3, r3, #3
 8001690:	f503 7300 	add.w	r3, r3, #512	; 0x200
 8001694:	4618      	mov	r0, r3
 8001696:	f000 fc59 	bl	8001f4c <WIZCHIP_READ>
 800169a:	4603      	mov	r3, r0
 800169c:	f003 0308 	and.w	r3, r3, #8
 80016a0:	2b00      	cmp	r3, #0
 80016a2:	d00c      	beq.n	80016be <connect+0x172>
 80016a4:	79fb      	ldrb	r3, [r7, #7]
 80016a6:	009b      	lsls	r3, r3, #2
 80016a8:	3301      	adds	r3, #1
 80016aa:	00db      	lsls	r3, r3, #3
 80016ac:	f503 7300 	add.w	r3, r3, #512	; 0x200
 80016b0:	2108      	movs	r1, #8
 80016b2:	4618      	mov	r0, r3
 80016b4:	f000 fc96 	bl	8001fe4 <WIZCHIP_WRITE>
 80016b8:	f06f 030c 	mvn.w	r3, #12
 80016bc:	e01b      	b.n	80016f6 <connect+0x1aa>
 80016be:	79fb      	ldrb	r3, [r7, #7]
 80016c0:	009b      	lsls	r3, r3, #2
 80016c2:	3301      	adds	r3, #1
 80016c4:	00db      	lsls	r3, r3, #3
 80016c6:	f503 7340 	add.w	r3, r3, #768	; 0x300
 80016ca:	4618      	mov	r0, r3
 80016cc:	f000 fc3e 	bl	8001f4c <WIZCHIP_READ>
 80016d0:	4603      	mov	r3, r0
 80016d2:	2b00      	cmp	r3, #0
 80016d4:	d102      	bne.n	80016dc <connect+0x190>
 80016d6:	f06f 0303 	mvn.w	r3, #3
 80016da:	e00c      	b.n	80016f6 <connect+0x1aa>
 80016dc:	79fb      	ldrb	r3, [r7, #7]
 80016de:	009b      	lsls	r3, r3, #2
 80016e0:	3301      	adds	r3, #1
 80016e2:	00db      	lsls	r3, r3, #3
 80016e4:	f503 7340 	add.w	r3, r3, #768	; 0x300
 80016e8:	4618      	mov	r0, r3
 80016ea:	f000 fc2f 	bl	8001f4c <WIZCHIP_READ>
 80016ee:	4603      	mov	r3, r0
 80016f0:	2b17      	cmp	r3, #23
 80016f2:	d1c9      	bne.n	8001688 <connect+0x13c>
 80016f4:	2301      	movs	r3, #1
 80016f6:	4618      	mov	r0, r3
 80016f8:	3710      	adds	r7, #16
 80016fa:	46bd      	mov	sp, r7
 80016fc:	bd80      	pop	{r7, pc}
 80016fe:	bf00      	nop
 8001700:	20000062 	.word	0x20000062

08001704 <send>:
 8001704:	b580      	push	{r7, lr}
 8001706:	b084      	sub	sp, #16
 8001708:	af00      	add	r7, sp, #0
 800170a:	4603      	mov	r3, r0
 800170c:	6039      	str	r1, [r7, #0]
 800170e:	71fb      	strb	r3, [r7, #7]
 8001710:	4613      	mov	r3, r2
 8001712:	80bb      	strh	r3, [r7, #4]
 8001714:	2300      	movs	r3, #0
 8001716:	73fb      	strb	r3, [r7, #15]
 8001718:	2300      	movs	r3, #0
 800171a:	81bb      	strh	r3, [r7, #12]
 800171c:	79fb      	ldrb	r3, [r7, #7]
 800171e:	2b08      	cmp	r3, #8
 8001720:	d902      	bls.n	8001728 <send+0x24>
 8001722:	f04f 33ff 	mov.w	r3, #4294967295
 8001726:	e0de      	b.n	80018e6 <send+0x1e2>
 8001728:	79fb      	ldrb	r3, [r7, #7]
 800172a:	009b      	lsls	r3, r3, #2
 800172c:	3301      	adds	r3, #1
 800172e:	00db      	lsls	r3, r3, #3
 8001730:	4618      	mov	r0, r3
 8001732:	f000 fc0b 	bl	8001f4c <WIZCHIP_READ>
 8001736:	4603      	mov	r3, r0
 8001738:	f003 030f 	and.w	r3, r3, #15
 800173c:	2b01      	cmp	r3, #1
 800173e:	d002      	beq.n	8001746 <send+0x42>
 8001740:	f06f 0304 	mvn.w	r3, #4
 8001744:	e0cf      	b.n	80018e6 <send+0x1e2>
 8001746:	88bb      	ldrh	r3, [r7, #4]
 8001748:	2b00      	cmp	r3, #0
 800174a:	d102      	bne.n	8001752 <send+0x4e>
 800174c:	f06f 030d 	mvn.w	r3, #13
 8001750:	e0c9      	b.n	80018e6 <send+0x1e2>
 8001752:	79fb      	ldrb	r3, [r7, #7]
 8001754:	009b      	lsls	r3, r3, #2
 8001756:	3301      	adds	r3, #1
 8001758:	00db      	lsls	r3, r3, #3
 800175a:	f503 7340 	add.w	r3, r3, #768	; 0x300
 800175e:	4618      	mov	r0, r3
 8001760:	f000 fbf4 	bl	8001f4c <WIZCHIP_READ>
 8001764:	4603      	mov	r3, r0
 8001766:	73fb      	strb	r3, [r7, #15]
 8001768:	7bfb      	ldrb	r3, [r7, #15]
 800176a:	2b17      	cmp	r3, #23
 800176c:	d005      	beq.n	800177a <send+0x76>
 800176e:	7bfb      	ldrb	r3, [r7, #15]
 8001770:	2b1c      	cmp	r3, #28
 8001772:	d002      	beq.n	800177a <send+0x76>
 8001774:	f06f 0306 	mvn.w	r3, #6
 8001778:	e0b5      	b.n	80018e6 <send+0x1e2>
 800177a:	4b5d      	ldr	r3, [pc, #372]	; (80018f0 <send+0x1ec>)
 800177c:	881b      	ldrh	r3, [r3, #0]
 800177e:	461a      	mov	r2, r3
 8001780:	79fb      	ldrb	r3, [r7, #7]
 8001782:	fa42 f303 	asr.w	r3, r2, r3
 8001786:	f003 0301 	and.w	r3, r3, #1
 800178a:	2b00      	cmp	r3, #0
 800178c:	d039      	beq.n	8001802 <send+0xfe>
 800178e:	79fb      	ldrb	r3, [r7, #7]
 8001790:	009b      	lsls	r3, r3, #2
 8001792:	3301      	adds	r3, #1
 8001794:	00db      	lsls	r3, r3, #3
 8001796:	f503 7300 	add.w	r3, r3, #512	; 0x200
 800179a:	4618      	mov	r0, r3
 800179c:	f000 fbd6 	bl	8001f4c <WIZCHIP_READ>
 80017a0:	4603      	mov	r3, r0
 80017a2:	f003 031f 	and.w	r3, r3, #31
 80017a6:	73fb      	strb	r3, [r7, #15]
 80017a8:	7bfb      	ldrb	r3, [r7, #15]
 80017aa:	f003 0310 	and.w	r3, r3, #16
 80017ae:	2b00      	cmp	r3, #0
 80017b0:	d019      	beq.n	80017e6 <send+0xe2>
 80017b2:	79fb      	ldrb	r3, [r7, #7]
 80017b4:	009b      	lsls	r3, r3, #2
 80017b6:	3301      	adds	r3, #1
 80017b8:	00db      	lsls	r3, r3, #3
 80017ba:	f503 7300 	add.w	r3, r3, #512	; 0x200
 80017be:	2110      	movs	r1, #16
 80017c0:	4618      	mov	r0, r3
 80017c2:	f000 fc0f 	bl	8001fe4 <WIZCHIP_WRITE>
 80017c6:	79fb      	ldrb	r3, [r7, #7]
 80017c8:	2201      	movs	r2, #1
 80017ca:	fa02 f303 	lsl.w	r3, r2, r3
 80017ce:	b21b      	sxth	r3, r3
 80017d0:	43db      	mvns	r3, r3
 80017d2:	b21a      	sxth	r2, r3
 80017d4:	4b46      	ldr	r3, [pc, #280]	; (80018f0 <send+0x1ec>)
 80017d6:	881b      	ldrh	r3, [r3, #0]
 80017d8:	b21b      	sxth	r3, r3
 80017da:	4013      	ands	r3, r2
 80017dc:	b21b      	sxth	r3, r3
 80017de:	b29a      	uxth	r2, r3
 80017e0:	4b43      	ldr	r3, [pc, #268]	; (80018f0 <send+0x1ec>)
 80017e2:	801a      	strh	r2, [r3, #0]
 80017e4:	e00d      	b.n	8001802 <send+0xfe>
 80017e6:	7bfb      	ldrb	r3, [r7, #15]
 80017e8:	f003 0308 	and.w	r3, r3, #8
 80017ec:	2b00      	cmp	r3, #0
 80017ee:	d006      	beq.n	80017fe <send+0xfa>
 80017f0:	79fb      	ldrb	r3, [r7, #7]
 80017f2:	4618      	mov	r0, r3
 80017f4:	f7ff fe3c 	bl	8001470 <close>
 80017f8:	f06f 030c 	mvn.w	r3, #12
 80017fc:	e073      	b.n	80018e6 <send+0x1e2>
 80017fe:	2300      	movs	r3, #0
 8001800:	e071      	b.n	80018e6 <send+0x1e2>
 8001802:	79fb      	ldrb	r3, [r7, #7]
 8001804:	009b      	lsls	r3, r3, #2
 8001806:	3301      	adds	r3, #1
 8001808:	00db      	lsls	r3, r3, #3
 800180a:	f503 53f8 	add.w	r3, r3, #7936	; 0x1f00
 800180e:	4618      	mov	r0, r3
 8001810:	f000 fb9c 	bl	8001f4c <WIZCHIP_READ>
 8001814:	4603      	mov	r3, r0
 8001816:	b29b      	uxth	r3, r3
 8001818:	029b      	lsls	r3, r3, #10
 800181a:	81bb      	strh	r3, [r7, #12]
 800181c:	88ba      	ldrh	r2, [r7, #4]
 800181e:	89bb      	ldrh	r3, [r7, #12]
 8001820:	429a      	cmp	r2, r3
 8001822:	d901      	bls.n	8001828 <send+0x124>
 8001824:	89bb      	ldrh	r3, [r7, #12]
 8001826:	80bb      	strh	r3, [r7, #4]
 8001828:	79fb      	ldrb	r3, [r7, #7]
 800182a:	4618      	mov	r0, r3
 800182c:	f000 fce8 	bl	8002200 <getSn_TX_FSR>
 8001830:	4603      	mov	r3, r0
 8001832:	81bb      	strh	r3, [r7, #12]
 8001834:	79fb      	ldrb	r3, [r7, #7]
 8001836:	009b      	lsls	r3, r3, #2
 8001838:	3301      	adds	r3, #1
 800183a:	00db      	lsls	r3, r3, #3
 800183c:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8001840:	4618      	mov	r0, r3
 8001842:	f000 fb83 	bl	8001f4c <WIZCHIP_READ>
 8001846:	4603      	mov	r3, r0
 8001848:	73fb      	strb	r3, [r7, #15]
 800184a:	7bfb      	ldrb	r3, [r7, #15]
 800184c:	2b17      	cmp	r3, #23
 800184e:	d009      	beq.n	8001864 <send+0x160>
 8001850:	7bfb      	ldrb	r3, [r7, #15]
 8001852:	2b1c      	cmp	r3, #28
 8001854:	d006      	beq.n	8001864 <send+0x160>
 8001856:	79fb      	ldrb	r3, [r7, #7]
 8001858:	4618      	mov	r0, r3
 800185a:	f7ff fe09 	bl	8001470 <close>
 800185e:	f06f 0306 	mvn.w	r3, #6
 8001862:	e040      	b.n	80018e6 <send+0x1e2>
 8001864:	4b23      	ldr	r3, [pc, #140]	; (80018f4 <send+0x1f0>)
 8001866:	881b      	ldrh	r3, [r3, #0]
 8001868:	461a      	mov	r2, r3
 800186a:	79fb      	ldrb	r3, [r7, #7]
 800186c:	fa42 f303 	asr.w	r3, r2, r3
 8001870:	f003 0301 	and.w	r3, r3, #1
 8001874:	2b00      	cmp	r3, #0
 8001876:	d005      	beq.n	8001884 <send+0x180>
 8001878:	88ba      	ldrh	r2, [r7, #4]
 800187a:	89bb      	ldrh	r3, [r7, #12]
 800187c:	429a      	cmp	r2, r3
 800187e:	d901      	bls.n	8001884 <send+0x180>
 8001880:	2300      	movs	r3, #0
 8001882:	e030      	b.n	80018e6 <send+0x1e2>
 8001884:	88ba      	ldrh	r2, [r7, #4]
 8001886:	89bb      	ldrh	r3, [r7, #12]
 8001888:	429a      	cmp	r2, r3
 800188a:	d900      	bls.n	800188e <send+0x18a>
 800188c:	e7cc      	b.n	8001828 <send+0x124>
 800188e:	bf00      	nop
 8001890:	88ba      	ldrh	r2, [r7, #4]
 8001892:	79fb      	ldrb	r3, [r7, #7]
 8001894:	6839      	ldr	r1, [r7, #0]
 8001896:	4618      	mov	r0, r3
 8001898:	f000 fd48 	bl	800232c <wiz_send_data>
 800189c:	79fb      	ldrb	r3, [r7, #7]
 800189e:	009b      	lsls	r3, r3, #2
 80018a0:	3301      	adds	r3, #1
 80018a2:	00db      	lsls	r3, r3, #3
 80018a4:	f503 7380 	add.w	r3, r3, #256	; 0x100
 80018a8:	2120      	movs	r1, #32
 80018aa:	4618      	mov	r0, r3
 80018ac:	f000 fb9a 	bl	8001fe4 <WIZCHIP_WRITE>
 80018b0:	bf00      	nop
 80018b2:	79fb      	ldrb	r3, [r7, #7]
 80018b4:	009b      	lsls	r3, r3, #2
 80018b6:	3301      	adds	r3, #1
 80018b8:	00db      	lsls	r3, r3, #3
 80018ba:	f503 7380 	add.w	r3, r3, #256	; 0x100
 80018be:	4618      	mov	r0, r3
 80018c0:	f000 fb44 	bl	8001f4c <WIZCHIP_READ>
 80018c4:	4603      	mov	r3, r0
 80018c6:	2b00      	cmp	r3, #0
 80018c8:	d1f3      	bne.n	80018b2 <send+0x1ae>
 80018ca:	79fb      	ldrb	r3, [r7, #7]
 80018cc:	2201      	movs	r2, #1
 80018ce:	fa02 f303 	lsl.w	r3, r2, r3
 80018d2:	b21a      	sxth	r2, r3
 80018d4:	4b06      	ldr	r3, [pc, #24]	; (80018f0 <send+0x1ec>)
 80018d6:	881b      	ldrh	r3, [r3, #0]
 80018d8:	b21b      	sxth	r3, r3
 80018da:	4313      	orrs	r3, r2
 80018dc:	b21b      	sxth	r3, r3
 80018de:	b29a      	uxth	r2, r3
 80018e0:	4b03      	ldr	r3, [pc, #12]	; (80018f0 <send+0x1ec>)
 80018e2:	801a      	strh	r2, [r3, #0]
 80018e4:	88bb      	ldrh	r3, [r7, #4]
 80018e6:	4618      	mov	r0, r3
 80018e8:	3710      	adds	r7, #16
 80018ea:	46bd      	mov	sp, r7
 80018ec:	bd80      	pop	{r7, pc}
 80018ee:	bf00      	nop
 80018f0:	20000064 	.word	0x20000064
 80018f4:	20000062 	.word	0x20000062

080018f8 <recv>:
 80018f8:	b590      	push	{r4, r7, lr}
 80018fa:	b085      	sub	sp, #20
 80018fc:	af00      	add	r7, sp, #0
 80018fe:	4603      	mov	r3, r0
 8001900:	6039      	str	r1, [r7, #0]
 8001902:	71fb      	strb	r3, [r7, #7]
 8001904:	4613      	mov	r3, r2
 8001906:	80bb      	strh	r3, [r7, #4]
 8001908:	2300      	movs	r3, #0
 800190a:	73fb      	strb	r3, [r7, #15]
 800190c:	2300      	movs	r3, #0
 800190e:	81bb      	strh	r3, [r7, #12]
 8001910:	79fb      	ldrb	r3, [r7, #7]
 8001912:	2b08      	cmp	r3, #8
 8001914:	d902      	bls.n	800191c <recv+0x24>
 8001916:	f04f 33ff 	mov.w	r3, #4294967295
 800191a:	e09c      	b.n	8001a56 <recv+0x15e>
 800191c:	79fb      	ldrb	r3, [r7, #7]
 800191e:	009b      	lsls	r3, r3, #2
 8001920:	3301      	adds	r3, #1
 8001922:	00db      	lsls	r3, r3, #3
 8001924:	4618      	mov	r0, r3
 8001926:	f000 fb11 	bl	8001f4c <WIZCHIP_READ>
 800192a:	4603      	mov	r3, r0
 800192c:	f003 030f 	and.w	r3, r3, #15
 8001930:	2b01      	cmp	r3, #1
 8001932:	d002      	beq.n	800193a <recv+0x42>
 8001934:	f06f 0304 	mvn.w	r3, #4
 8001938:	e08d      	b.n	8001a56 <recv+0x15e>
 800193a:	88bb      	ldrh	r3, [r7, #4]
 800193c:	2b00      	cmp	r3, #0
 800193e:	d102      	bne.n	8001946 <recv+0x4e>
 8001940:	f06f 030d 	mvn.w	r3, #13
 8001944:	e087      	b.n	8001a56 <recv+0x15e>
 8001946:	79fb      	ldrb	r3, [r7, #7]
 8001948:	009b      	lsls	r3, r3, #2
 800194a:	3301      	adds	r3, #1
 800194c:	00db      	lsls	r3, r3, #3
 800194e:	f503 53f0 	add.w	r3, r3, #7680	; 0x1e00
 8001952:	4618      	mov	r0, r3
 8001954:	f000 fafa 	bl	8001f4c <WIZCHIP_READ>
 8001958:	4603      	mov	r3, r0
 800195a:	b29b      	uxth	r3, r3
 800195c:	029b      	lsls	r3, r3, #10
 800195e:	81bb      	strh	r3, [r7, #12]
 8001960:	89ba      	ldrh	r2, [r7, #12]
 8001962:	88bb      	ldrh	r3, [r7, #4]
 8001964:	429a      	cmp	r2, r3
 8001966:	d201      	bcs.n	800196c <recv+0x74>
 8001968:	89bb      	ldrh	r3, [r7, #12]
 800196a:	80bb      	strh	r3, [r7, #4]
 800196c:	79fb      	ldrb	r3, [r7, #7]
 800196e:	4618      	mov	r0, r3
 8001970:	f000 fc91 	bl	8002296 <getSn_RX_RSR>
 8001974:	4603      	mov	r3, r0
 8001976:	81bb      	strh	r3, [r7, #12]
 8001978:	79fb      	ldrb	r3, [r7, #7]
 800197a:	009b      	lsls	r3, r3, #2
 800197c:	3301      	adds	r3, #1
 800197e:	00db      	lsls	r3, r3, #3
 8001980:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8001984:	4618      	mov	r0, r3
 8001986:	f000 fae1 	bl	8001f4c <WIZCHIP_READ>
 800198a:	4603      	mov	r3, r0
 800198c:	73fb      	strb	r3, [r7, #15]
 800198e:	7bfb      	ldrb	r3, [r7, #15]
 8001990:	2b17      	cmp	r3, #23
 8001992:	d026      	beq.n	80019e2 <recv+0xea>
 8001994:	7bfb      	ldrb	r3, [r7, #15]
 8001996:	2b1c      	cmp	r3, #28
 8001998:	d11c      	bne.n	80019d4 <recv+0xdc>
 800199a:	89bb      	ldrh	r3, [r7, #12]
 800199c:	2b00      	cmp	r3, #0
 800199e:	d133      	bne.n	8001a08 <recv+0x110>
 80019a0:	79fb      	ldrb	r3, [r7, #7]
 80019a2:	4618      	mov	r0, r3
 80019a4:	f000 fc2c 	bl	8002200 <getSn_TX_FSR>
 80019a8:	4603      	mov	r3, r0
 80019aa:	461c      	mov	r4, r3
 80019ac:	79fb      	ldrb	r3, [r7, #7]
 80019ae:	009b      	lsls	r3, r3, #2
 80019b0:	3301      	adds	r3, #1
 80019b2:	00db      	lsls	r3, r3, #3
 80019b4:	f503 53f8 	add.w	r3, r3, #7936	; 0x1f00
 80019b8:	4618      	mov	r0, r3
 80019ba:	f000 fac7 	bl	8001f4c <WIZCHIP_READ>
 80019be:	4603      	mov	r3, r0
 80019c0:	029b      	lsls	r3, r3, #10
 80019c2:	429c      	cmp	r4, r3
 80019c4:	d10d      	bne.n	80019e2 <recv+0xea>
 80019c6:	79fb      	ldrb	r3, [r7, #7]
 80019c8:	4618      	mov	r0, r3
 80019ca:	f7ff fd51 	bl	8001470 <close>
 80019ce:	f06f 0306 	mvn.w	r3, #6
 80019d2:	e040      	b.n	8001a56 <recv+0x15e>
 80019d4:	79fb      	ldrb	r3, [r7, #7]
 80019d6:	4618      	mov	r0, r3
 80019d8:	f7ff fd4a 	bl	8001470 <close>
 80019dc:	f06f 0306 	mvn.w	r3, #6
 80019e0:	e039      	b.n	8001a56 <recv+0x15e>
 80019e2:	4b1f      	ldr	r3, [pc, #124]	; (8001a60 <recv+0x168>)
 80019e4:	881b      	ldrh	r3, [r3, #0]
 80019e6:	461a      	mov	r2, r3
 80019e8:	79fb      	ldrb	r3, [r7, #7]
 80019ea:	fa42 f303 	asr.w	r3, r2, r3
 80019ee:	f003 0301 	and.w	r3, r3, #1
 80019f2:	2b00      	cmp	r3, #0
 80019f4:	d004      	beq.n	8001a00 <recv+0x108>
 80019f6:	89bb      	ldrh	r3, [r7, #12]
 80019f8:	2b00      	cmp	r3, #0
 80019fa:	d101      	bne.n	8001a00 <recv+0x108>
 80019fc:	2300      	movs	r3, #0
 80019fe:	e02a      	b.n	8001a56 <recv+0x15e>
 8001a00:	89bb      	ldrh	r3, [r7, #12]
 8001a02:	2b00      	cmp	r3, #0
 8001a04:	d102      	bne.n	8001a0c <recv+0x114>
 8001a06:	e7b1      	b.n	800196c <recv+0x74>
 8001a08:	bf00      	nop
 8001a0a:	e000      	b.n	8001a0e <recv+0x116>
 8001a0c:	bf00      	nop
 8001a0e:	89ba      	ldrh	r2, [r7, #12]
 8001a10:	88bb      	ldrh	r3, [r7, #4]
 8001a12:	429a      	cmp	r2, r3
 8001a14:	d201      	bcs.n	8001a1a <recv+0x122>
 8001a16:	89bb      	ldrh	r3, [r7, #12]
 8001a18:	80bb      	strh	r3, [r7, #4]
 8001a1a:	88ba      	ldrh	r2, [r7, #4]
 8001a1c:	79fb      	ldrb	r3, [r7, #7]
 8001a1e:	6839      	ldr	r1, [r7, #0]
 8001a20:	4618      	mov	r0, r3
 8001a22:	f000 fcdf 	bl	80023e4 <wiz_recv_data>
 8001a26:	79fb      	ldrb	r3, [r7, #7]
 8001a28:	009b      	lsls	r3, r3, #2
 8001a2a:	3301      	adds	r3, #1
 8001a2c:	00db      	lsls	r3, r3, #3
 8001a2e:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8001a32:	2140      	movs	r1, #64	; 0x40
 8001a34:	4618      	mov	r0, r3
 8001a36:	f000 fad5 	bl	8001fe4 <WIZCHIP_WRITE>
 8001a3a:	bf00      	nop
 8001a3c:	79fb      	ldrb	r3, [r7, #7]
 8001a3e:	009b      	lsls	r3, r3, #2
 8001a40:	3301      	adds	r3, #1
 8001a42:	00db      	lsls	r3, r3, #3
 8001a44:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8001a48:	4618      	mov	r0, r3
 8001a4a:	f000 fa7f 	bl	8001f4c <WIZCHIP_READ>
 8001a4e:	4603      	mov	r3, r0
 8001a50:	2b00      	cmp	r3, #0
 8001a52:	d1f3      	bne.n	8001a3c <recv+0x144>
 8001a54:	88bb      	ldrh	r3, [r7, #4]
 8001a56:	4618      	mov	r0, r3
 8001a58:	3714      	adds	r7, #20
 8001a5a:	46bd      	mov	sp, r7
 8001a5c:	bd90      	pop	{r4, r7, pc}
 8001a5e:	bf00      	nop
 8001a60:	20000062 	.word	0x20000062

08001a64 <Get_state>:
 8001a64:	b480      	push	{r7}
 8001a66:	af00      	add	r7, sp, #0
 8001a68:	4b03      	ldr	r3, [pc, #12]	; (8001a78 <Get_state+0x14>)
 8001a6a:	781b      	ldrb	r3, [r3, #0]
 8001a6c:	4618      	mov	r0, r3
 8001a6e:	46bd      	mov	sp, r7
 8001a70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a74:	4770      	bx	lr
 8001a76:	bf00      	nop
 8001a78:	20000008 	.word	0x20000008

08001a7c <Set_state>:
 8001a7c:	b480      	push	{r7}
 8001a7e:	b083      	sub	sp, #12
 8001a80:	af00      	add	r7, sp, #0
 8001a82:	4603      	mov	r3, r0
 8001a84:	71fb      	strb	r3, [r7, #7]
 8001a86:	4a04      	ldr	r2, [pc, #16]	; (8001a98 <Set_state+0x1c>)
 8001a88:	79fb      	ldrb	r3, [r7, #7]
 8001a8a:	7013      	strb	r3, [r2, #0]
 8001a8c:	bf00      	nop
 8001a8e:	370c      	adds	r7, #12
 8001a90:	46bd      	mov	sp, r7
 8001a92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a96:	4770      	bx	lr
 8001a98:	20000008 	.word	0x20000008

08001a9c <Initilisation_State_Handler>:
#include "state_Handler.h"

void Initilisation_State_Handler()
{
 8001a9c:	b580      	push	{r7, lr}
 8001a9e:	af00      	add	r7, sp, #0
	Set_state(Initilisation_State);
 8001aa0:	2001      	movs	r0, #1
 8001aa2:	f7ff ffeb 	bl	8001a7c <Set_state>
	Reset_event();
 8001aa6:	f7fe fec3 	bl	8000830 <Reset_event>
	//Initialize the TCPIP Connection
	Init_Ethernet();
 8001aaa:	f7fe fe0b 	bl	80006c4 <Init_Ethernet>
	//Check the physical Connection of TCP IP
	ctlwizchip(CW_GET_PHYLINK, (void*) &Phy_TCP_IP); // gets physical status of the TCPIP
 8001aae:	4911      	ldr	r1, [pc, #68]	; (8001af4 <Initilisation_State_Handler+0x58>)
 8001ab0:	200f      	movs	r0, #15
 8001ab2:	f000 fd91 	bl	80025d8 <ctlwizchip>

	if(Phy_TCP_IP==PHY_LINK_OFF)
 8001ab6:	4b0f      	ldr	r3, [pc, #60]	; (8001af4 <Initilisation_State_Handler+0x58>)
 8001ab8:	781b      	ldrb	r3, [r3, #0]
 8001aba:	2b00      	cmp	r3, #0
 8001abc:	d103      	bne.n	8001ac6 <Initilisation_State_Handler+0x2a>
	{
		//Save the status in the flash memory with date and time stamp+++++++++++++++++++++
		Set_state(Initilisation_State);
 8001abe:	2001      	movs	r0, #1
 8001ac0:	f7ff ffdc 	bl	8001a7c <Set_state>
		HAL_Delay(100);
		//send(0, (uint8_t *)SYS_INIT_CMD,strlen(SYS_INIT_CMD));

		Set_event(Reset_Event);
	}
}
 8001ac4:	e014      	b.n	8001af0 <Initilisation_State_Handler+0x54>
	else if(Phy_TCP_IP==PHY_LINK_ON)
 8001ac6:	4b0b      	ldr	r3, [pc, #44]	; (8001af4 <Initilisation_State_Handler+0x58>)
 8001ac8:	781b      	ldrb	r3, [r3, #0]
 8001aca:	2b01      	cmp	r3, #1
 8001acc:	d110      	bne.n	8001af0 <Initilisation_State_Handler+0x54>
		HAL_Delay(500);
 8001ace:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001ad2:	f001 fa29 	bl	8002f28 <HAL_Delay>
		HAL_Delay(100);
 8001ad6:	2064      	movs	r0, #100	; 0x64
 8001ad8:	f001 fa26 	bl	8002f28 <HAL_Delay>
		Refresh_Watchdog();
 8001adc:	f7fe fe7e 	bl	80007dc <Refresh_Watchdog>
		Ethernet_Connect();
 8001ae0:	f7fe fe4c 	bl	800077c <Ethernet_Connect>
		HAL_Delay(100);
 8001ae4:	2064      	movs	r0, #100	; 0x64
 8001ae6:	f001 fa1f 	bl	8002f28 <HAL_Delay>
		Set_event(Reset_Event);
 8001aea:	2001      	movs	r0, #1
 8001aec:	f7fe fe90 	bl	8000810 <Set_event>
}
 8001af0:	bf00      	nop
 8001af2:	bd80      	pop	{r7, pc}
 8001af4:	20000bd9 	.word	0x20000bd9

08001af8 <Reset_State_Handler>:

void Reset_State_Handler()
{
 8001af8:	b580      	push	{r7, lr}
 8001afa:	af00      	add	r7, sp, #0
	Set_state(Reset_State);
 8001afc:	2002      	movs	r0, #2
 8001afe:	f7ff ffbd 	bl	8001a7c <Set_state>
	Reset_event();
 8001b02:	f7fe fe95 	bl	8000830 <Reset_event>
	//Reset the RingBuffers
	RingInit(&WR_Ring,&WR_Samples[0],BUFFERSIZE,sizeof(buff_size));
 8001b06:	2304      	movs	r3, #4
 8001b08:	22c8      	movs	r2, #200	; 0xc8
 8001b0a:	4912      	ldr	r1, [pc, #72]	; (8001b54 <Reset_State_Handler+0x5c>)
 8001b0c:	4812      	ldr	r0, [pc, #72]	; (8001b58 <Reset_State_Handler+0x60>)
 8001b0e:	f7ff fab8 	bl	8001082 <RingInit>
	RingInit(&WL_Ring,&WL_Samples[0],BUFFERSIZE,sizeof(buff_size));
 8001b12:	2304      	movs	r3, #4
 8001b14:	22c8      	movs	r2, #200	; 0xc8
 8001b16:	4911      	ldr	r1, [pc, #68]	; (8001b5c <Reset_State_Handler+0x64>)
 8001b18:	4811      	ldr	r0, [pc, #68]	; (8001b60 <Reset_State_Handler+0x68>)
 8001b1a:	f7ff fab2 	bl	8001082 <RingInit>
	RingInit(&FCT_Ring,&FCT_Samples[0],BUFFERSIZE,sizeof(buff_size));
 8001b1e:	2304      	movs	r3, #4
 8001b20:	22c8      	movs	r2, #200	; 0xc8
 8001b22:	4910      	ldr	r1, [pc, #64]	; (8001b64 <Reset_State_Handler+0x6c>)
 8001b24:	4810      	ldr	r0, [pc, #64]	; (8001b68 <Reset_State_Handler+0x70>)
 8001b26:	f7ff faac 	bl	8001082 <RingInit>
	//Reset the Counts
	WR_Counts=0;
 8001b2a:	4b10      	ldr	r3, [pc, #64]	; (8001b6c <Reset_State_Handler+0x74>)
 8001b2c:	2200      	movs	r2, #0
 8001b2e:	601a      	str	r2, [r3, #0]
	WL_Counts=0;
 8001b30:	4b0f      	ldr	r3, [pc, #60]	; (8001b70 <Reset_State_Handler+0x78>)
 8001b32:	2200      	movs	r2, #0
 8001b34:	601a      	str	r2, [r3, #0]
	FCT_Counts=0;
 8001b36:	4b0f      	ldr	r3, [pc, #60]	; (8001b74 <Reset_State_Handler+0x7c>)
 8001b38:	2200      	movs	r2, #0
 8001b3a:	601a      	str	r2, [r3, #0]
	//Reset the 32 bit timer 2
	Timer2_Stop(); //Timer Stopped
 8001b3c:	f7fe fea8 	bl	8000890 <Timer2_Stop>

	Timer2_DeInitilized();//Timer DeInitilized
 8001b40:	f7fe feb0 	bl	80008a4 <Timer2_DeInitilized>

	Timer2_Initilized(); //Timer Initialized
 8001b44:	f7fe feb8 	bl	80008b8 <Timer2_Initilized>

	//send(0, (buff_size *)" Reset,",strlen(" Reset,"));

	//set the event to idle
	Set_event(Idle_Event);
 8001b48:	2002      	movs	r0, #2
 8001b4a:	f7fe fe61 	bl	8000810 <Set_event>
}
 8001b4e:	bf00      	nop
 8001b50:	bd80      	pop	{r7, pc}
 8001b52:	bf00      	nop
 8001b54:	200000b8 	.word	0x200000b8
 8001b58:	20000500 	.word	0x20000500
 8001b5c:	20000528 	.word	0x20000528
 8001b60:	2000008c 	.word	0x2000008c
 8001b64:	2000087c 	.word	0x2000087c
 8001b68:	20000858 	.word	0x20000858
 8001b6c:	20000878 	.word	0x20000878
 8001b70:	200003fc 	.word	0x200003fc
 8001b74:	20000524 	.word	0x20000524

08001b78 <Idle_State_Handler>:

void Idle_State_Handler()
{
 8001b78:	b580      	push	{r7, lr}
 8001b7a:	af00      	add	r7, sp, #0
	//Set state to idle state
	Set_state(Idle_State);
 8001b7c:	2003      	movs	r0, #3
 8001b7e:	f7ff ff7d 	bl	8001a7c <Set_state>


	//send(0, (buff_size *)" Idle,",strlen(" Idle,"));
	//reset the event
	Reset_event();
 8001b82:	f7fe fe55 	bl	8000830 <Reset_event>
	//
}
 8001b86:	bf00      	nop
 8001b88:	bd80      	pop	{r7, pc}
	...

08001b8c <WRSide_Train_Presence_State_Handler>:

void WRSide_Train_Presence_State_Handler()
{
 8001b8c:	b580      	push	{r7, lr}
 8001b8e:	af00      	add	r7, sp, #0
	if(Get_state!=WRSide_Train_Presence_State)
 8001b90:	4b04      	ldr	r3, [pc, #16]	; (8001ba4 <WRSide_Train_Presence_State_Handler+0x18>)
 8001b92:	2b04      	cmp	r3, #4
 8001b94:	d004      	beq.n	8001ba0 <WRSide_Train_Presence_State_Handler+0x14>
	{
		//set state to WRSide Train Presence state
		Set_state(WRSide_Train_Presence_State);
 8001b96:	2004      	movs	r0, #4
 8001b98:	f7ff ff70 	bl	8001a7c <Set_state>

		//send(0, (buff_size *)" WRSide,",strlen(" WRSide,"));
		//reset the event
		Reset_event();
 8001b9c:	f7fe fe48 	bl	8000830 <Reset_event>
	}
	//tasks that need to be done on each WR trigger
}
 8001ba0:	bf00      	nop
 8001ba2:	bd80      	pop	{r7, pc}
 8001ba4:	08001a65 	.word	0x08001a65

08001ba8 <WLSide_Train_Presence_State_Handler>:

void WLSide_Train_Presence_State_Handler()
{
 8001ba8:	b580      	push	{r7, lr}
 8001baa:	af00      	add	r7, sp, #0
	if(Get_state!=WLSide_Train_Presence_State)
 8001bac:	4b04      	ldr	r3, [pc, #16]	; (8001bc0 <WLSide_Train_Presence_State_Handler+0x18>)
 8001bae:	2b05      	cmp	r3, #5
 8001bb0:	d004      	beq.n	8001bbc <WLSide_Train_Presence_State_Handler+0x14>
	{
		//set state to WLSide Train Presence state
		Set_state(WLSide_Train_Presence_State);
 8001bb2:	2005      	movs	r0, #5
 8001bb4:	f7ff ff62 	bl	8001a7c <Set_state>

		//send(0, (buff_size *)" WLSide,",strlen(" WLSide,"));
		//reset the event
		Reset_event();
 8001bb8:	f7fe fe3a 	bl	8000830 <Reset_event>
	}
	//tasks that need to be done on each WL trigger
}
 8001bbc:	bf00      	nop
 8001bbe:	bd80      	pop	{r7, pc}
 8001bc0:	08001a65 	.word	0x08001a65

08001bc4 <Train_Exit_State_Handler>:

void Train_Exit_State_Handler()
{
 8001bc4:	b580      	push	{r7, lr}
 8001bc6:	af00      	add	r7, sp, #0
	//Set state to Train Exit state
	Set_state(Train_Exit_State);
 8001bc8:	2006      	movs	r0, #6
 8001bca:	f7ff ff57 	bl	8001a7c <Set_state>

	//send(0, (buff_size *)" Exit,",strlen(" Exit,"));
	//reset the event
	Reset_event();
 8001bce:	f7fe fe2f 	bl	8000830 <Reset_event>
	//shut down the purge and close the shutters
	//set the event to Log Data event
	Set_event(Log_Data_Event);
 8001bd2:	2006      	movs	r0, #6
 8001bd4:	f7fe fe1c 	bl	8000810 <Set_event>
}
 8001bd8:	bf00      	nop
 8001bda:	bd80      	pop	{r7, pc}

08001bdc <Log_Data_State_Handler>:

void Log_Data_State_Handler()
{
 8001bdc:	b580      	push	{r7, lr}
 8001bde:	af00      	add	r7, sp, #0
	//Set state to Log Data state
	Set_state(Log_Data_State);
 8001be0:	2007      	movs	r0, #7
 8001be2:	f7ff ff4b 	bl	8001a7c <Set_state>

	//send(0, (buff_size *)" Log,",strlen(" Log,"));
	//reset the event
	Reset_event();
 8001be6:	f7fe fe23 	bl	8000830 <Reset_event>
	//send the data over TCPIP
	Send_Data();
 8001bea:	f7fe fcdd 	bl	80005a8 <Send_Data>
	//set the event to reset event
	Set_event(Reset_Event);
 8001bee:	2001      	movs	r0, #1
 8001bf0:	f7fe fe0e 	bl	8000810 <Set_event>
}
 8001bf4:	bf00      	nop
 8001bf6:	bd80      	pop	{r7, pc}

08001bf8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001bf8:	b480      	push	{r7}
 8001bfa:	b083      	sub	sp, #12
 8001bfc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001bfe:	4b0f      	ldr	r3, [pc, #60]	; (8001c3c <HAL_MspInit+0x44>)
 8001c00:	699b      	ldr	r3, [r3, #24]
 8001c02:	4a0e      	ldr	r2, [pc, #56]	; (8001c3c <HAL_MspInit+0x44>)
 8001c04:	f043 0301 	orr.w	r3, r3, #1
 8001c08:	6193      	str	r3, [r2, #24]
 8001c0a:	4b0c      	ldr	r3, [pc, #48]	; (8001c3c <HAL_MspInit+0x44>)
 8001c0c:	699b      	ldr	r3, [r3, #24]
 8001c0e:	f003 0301 	and.w	r3, r3, #1
 8001c12:	607b      	str	r3, [r7, #4]
 8001c14:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001c16:	4b09      	ldr	r3, [pc, #36]	; (8001c3c <HAL_MspInit+0x44>)
 8001c18:	69db      	ldr	r3, [r3, #28]
 8001c1a:	4a08      	ldr	r2, [pc, #32]	; (8001c3c <HAL_MspInit+0x44>)
 8001c1c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001c20:	61d3      	str	r3, [r2, #28]
 8001c22:	4b06      	ldr	r3, [pc, #24]	; (8001c3c <HAL_MspInit+0x44>)
 8001c24:	69db      	ldr	r3, [r3, #28]
 8001c26:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001c2a:	603b      	str	r3, [r7, #0]
 8001c2c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001c2e:	bf00      	nop
 8001c30:	370c      	adds	r7, #12
 8001c32:	46bd      	mov	sp, r7
 8001c34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c38:	4770      	bx	lr
 8001c3a:	bf00      	nop
 8001c3c:	40021000 	.word	0x40021000

08001c40 <HAL_RTC_MspInit>:
* This function configures the hardware resources used in this example
* @param hrtc: RTC handle pointer
* @retval None
*/
void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
{
 8001c40:	b480      	push	{r7}
 8001c42:	b085      	sub	sp, #20
 8001c44:	af00      	add	r7, sp, #0
 8001c46:	6078      	str	r0, [r7, #4]
  if(hrtc->Instance==RTC)
 8001c48:	687b      	ldr	r3, [r7, #4]
 8001c4a:	681b      	ldr	r3, [r3, #0]
 8001c4c:	4a0d      	ldr	r2, [pc, #52]	; (8001c84 <HAL_RTC_MspInit+0x44>)
 8001c4e:	4293      	cmp	r3, r2
 8001c50:	d111      	bne.n	8001c76 <HAL_RTC_MspInit+0x36>
 8001c52:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8001c56:	60fb      	str	r3, [r7, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8001c58:	68fb      	ldr	r3, [r7, #12]
 8001c5a:	fa93 f3a3 	rbit	r3, r3
 8001c5e:	60bb      	str	r3, [r7, #8]
    result |= value & 1U;
    s--;
  }
  result <<= s;                        /* shift when v's highest bits are zero */
#endif
  return result;
 8001c60:	68bb      	ldr	r3, [r7, #8]
  {
  /* USER CODE BEGIN RTC_MspInit 0 */

  /* USER CODE END RTC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_RTC_ENABLE();
 8001c62:	fab3 f383 	clz	r3, r3
 8001c66:	b2db      	uxtb	r3, r3
 8001c68:	461a      	mov	r2, r3
 8001c6a:	4b07      	ldr	r3, [pc, #28]	; (8001c88 <HAL_RTC_MspInit+0x48>)
 8001c6c:	4413      	add	r3, r2
 8001c6e:	009b      	lsls	r3, r3, #2
 8001c70:	461a      	mov	r2, r3
 8001c72:	2301      	movs	r3, #1
 8001c74:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTC_MspInit 1 */

  /* USER CODE END RTC_MspInit 1 */
  }

}
 8001c76:	bf00      	nop
 8001c78:	3714      	adds	r7, #20
 8001c7a:	46bd      	mov	sp, r7
 8001c7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c80:	4770      	bx	lr
 8001c82:	bf00      	nop
 8001c84:	40002800 	.word	0x40002800
 8001c88:	10908100 	.word	0x10908100

08001c8c <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001c8c:	b580      	push	{r7, lr}
 8001c8e:	b08c      	sub	sp, #48	; 0x30
 8001c90:	af00      	add	r7, sp, #0
 8001c92:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c94:	f107 031c 	add.w	r3, r7, #28
 8001c98:	2200      	movs	r2, #0
 8001c9a:	601a      	str	r2, [r3, #0]
 8001c9c:	605a      	str	r2, [r3, #4]
 8001c9e:	609a      	str	r2, [r3, #8]
 8001ca0:	60da      	str	r2, [r3, #12]
 8001ca2:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI2)
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	681b      	ldr	r3, [r3, #0]
 8001ca8:	4a3d      	ldr	r2, [pc, #244]	; (8001da0 <HAL_SPI_MspInit+0x114>)
 8001caa:	4293      	cmp	r3, r2
 8001cac:	d147      	bne.n	8001d3e <HAL_SPI_MspInit+0xb2>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8001cae:	4b3d      	ldr	r3, [pc, #244]	; (8001da4 <HAL_SPI_MspInit+0x118>)
 8001cb0:	69db      	ldr	r3, [r3, #28]
 8001cb2:	4a3c      	ldr	r2, [pc, #240]	; (8001da4 <HAL_SPI_MspInit+0x118>)
 8001cb4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001cb8:	61d3      	str	r3, [r2, #28]
 8001cba:	4b3a      	ldr	r3, [pc, #232]	; (8001da4 <HAL_SPI_MspInit+0x118>)
 8001cbc:	69db      	ldr	r3, [r3, #28]
 8001cbe:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001cc2:	61bb      	str	r3, [r7, #24]
 8001cc4:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001cc6:	4b37      	ldr	r3, [pc, #220]	; (8001da4 <HAL_SPI_MspInit+0x118>)
 8001cc8:	695b      	ldr	r3, [r3, #20]
 8001cca:	4a36      	ldr	r2, [pc, #216]	; (8001da4 <HAL_SPI_MspInit+0x118>)
 8001ccc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001cd0:	6153      	str	r3, [r2, #20]
 8001cd2:	4b34      	ldr	r3, [pc, #208]	; (8001da4 <HAL_SPI_MspInit+0x118>)
 8001cd4:	695b      	ldr	r3, [r3, #20]
 8001cd6:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8001cda:	617b      	str	r3, [r7, #20]
 8001cdc:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001cde:	4b31      	ldr	r3, [pc, #196]	; (8001da4 <HAL_SPI_MspInit+0x118>)
 8001ce0:	695b      	ldr	r3, [r3, #20]
 8001ce2:	4a30      	ldr	r2, [pc, #192]	; (8001da4 <HAL_SPI_MspInit+0x118>)
 8001ce4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001ce8:	6153      	str	r3, [r2, #20]
 8001cea:	4b2e      	ldr	r3, [pc, #184]	; (8001da4 <HAL_SPI_MspInit+0x118>)
 8001cec:	695b      	ldr	r3, [r3, #20]
 8001cee:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001cf2:	613b      	str	r3, [r7, #16]
 8001cf4:	693b      	ldr	r3, [r7, #16]
    /**SPI2 GPIO Configuration
    PB13     ------> SPI2_SCK
    PA10     ------> SPI2_MISO
    PA11     ------> SPI2_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_13;
 8001cf6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001cfa:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cfc:	2302      	movs	r3, #2
 8001cfe:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d00:	2300      	movs	r3, #0
 8001d02:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d04:	2303      	movs	r3, #3
 8001d06:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001d08:	2305      	movs	r3, #5
 8001d0a:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d0c:	f107 031c 	add.w	r3, r7, #28
 8001d10:	4619      	mov	r1, r3
 8001d12:	4825      	ldr	r0, [pc, #148]	; (8001da8 <HAL_SPI_MspInit+0x11c>)
 8001d14:	f001 fa3e 	bl	8003194 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 8001d18:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8001d1c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d1e:	2302      	movs	r3, #2
 8001d20:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d22:	2300      	movs	r3, #0
 8001d24:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d26:	2303      	movs	r3, #3
 8001d28:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001d2a:	2305      	movs	r3, #5
 8001d2c:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d2e:	f107 031c 	add.w	r3, r7, #28
 8001d32:	4619      	mov	r1, r3
 8001d34:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001d38:	f001 fa2c 	bl	8003194 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI3_MspInit 1 */

  /* USER CODE END SPI3_MspInit 1 */
  }

}
 8001d3c:	e02c      	b.n	8001d98 <HAL_SPI_MspInit+0x10c>
  else if(hspi->Instance==SPI3)
 8001d3e:	687b      	ldr	r3, [r7, #4]
 8001d40:	681b      	ldr	r3, [r3, #0]
 8001d42:	4a1a      	ldr	r2, [pc, #104]	; (8001dac <HAL_SPI_MspInit+0x120>)
 8001d44:	4293      	cmp	r3, r2
 8001d46:	d127      	bne.n	8001d98 <HAL_SPI_MspInit+0x10c>
    __HAL_RCC_SPI3_CLK_ENABLE();
 8001d48:	4b16      	ldr	r3, [pc, #88]	; (8001da4 <HAL_SPI_MspInit+0x118>)
 8001d4a:	69db      	ldr	r3, [r3, #28]
 8001d4c:	4a15      	ldr	r2, [pc, #84]	; (8001da4 <HAL_SPI_MspInit+0x118>)
 8001d4e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001d52:	61d3      	str	r3, [r2, #28]
 8001d54:	4b13      	ldr	r3, [pc, #76]	; (8001da4 <HAL_SPI_MspInit+0x118>)
 8001d56:	69db      	ldr	r3, [r3, #28]
 8001d58:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8001d5c:	60fb      	str	r3, [r7, #12]
 8001d5e:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d60:	4b10      	ldr	r3, [pc, #64]	; (8001da4 <HAL_SPI_MspInit+0x118>)
 8001d62:	695b      	ldr	r3, [r3, #20]
 8001d64:	4a0f      	ldr	r2, [pc, #60]	; (8001da4 <HAL_SPI_MspInit+0x118>)
 8001d66:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001d6a:	6153      	str	r3, [r2, #20]
 8001d6c:	4b0d      	ldr	r3, [pc, #52]	; (8001da4 <HAL_SPI_MspInit+0x118>)
 8001d6e:	695b      	ldr	r3, [r3, #20]
 8001d70:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8001d74:	60bb      	str	r3, [r7, #8]
 8001d76:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5;
 8001d78:	2338      	movs	r3, #56	; 0x38
 8001d7a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d7c:	2302      	movs	r3, #2
 8001d7e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d80:	2300      	movs	r3, #0
 8001d82:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d84:	2303      	movs	r3, #3
 8001d86:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 8001d88:	2306      	movs	r3, #6
 8001d8a:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d8c:	f107 031c 	add.w	r3, r7, #28
 8001d90:	4619      	mov	r1, r3
 8001d92:	4805      	ldr	r0, [pc, #20]	; (8001da8 <HAL_SPI_MspInit+0x11c>)
 8001d94:	f001 f9fe 	bl	8003194 <HAL_GPIO_Init>
}
 8001d98:	bf00      	nop
 8001d9a:	3730      	adds	r7, #48	; 0x30
 8001d9c:	46bd      	mov	sp, r7
 8001d9e:	bd80      	pop	{r7, pc}
 8001da0:	40003800 	.word	0x40003800
 8001da4:	40021000 	.word	0x40021000
 8001da8:	48000400 	.word	0x48000400
 8001dac:	40003c00 	.word	0x40003c00

08001db0 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001db0:	b480      	push	{r7}
 8001db2:	b085      	sub	sp, #20
 8001db4:	af00      	add	r7, sp, #0
 8001db6:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8001db8:	687b      	ldr	r3, [r7, #4]
 8001dba:	681b      	ldr	r3, [r3, #0]
 8001dbc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001dc0:	d10b      	bne.n	8001dda <HAL_TIM_Base_MspInit+0x2a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001dc2:	4b09      	ldr	r3, [pc, #36]	; (8001de8 <HAL_TIM_Base_MspInit+0x38>)
 8001dc4:	69db      	ldr	r3, [r3, #28]
 8001dc6:	4a08      	ldr	r2, [pc, #32]	; (8001de8 <HAL_TIM_Base_MspInit+0x38>)
 8001dc8:	f043 0301 	orr.w	r3, r3, #1
 8001dcc:	61d3      	str	r3, [r2, #28]
 8001dce:	4b06      	ldr	r3, [pc, #24]	; (8001de8 <HAL_TIM_Base_MspInit+0x38>)
 8001dd0:	69db      	ldr	r3, [r3, #28]
 8001dd2:	f003 0301 	and.w	r3, r3, #1
 8001dd6:	60fb      	str	r3, [r7, #12]
 8001dd8:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 8001dda:	bf00      	nop
 8001ddc:	3714      	adds	r7, #20
 8001dde:	46bd      	mov	sp, r7
 8001de0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001de4:	4770      	bx	lr
 8001de6:	bf00      	nop
 8001de8:	40021000 	.word	0x40021000

08001dec <HAL_TIM_Base_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* htim_base)
{
 8001dec:	b480      	push	{r7}
 8001dee:	b083      	sub	sp, #12
 8001df0:	af00      	add	r7, sp, #0
 8001df2:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8001df4:	687b      	ldr	r3, [r7, #4]
 8001df6:	681b      	ldr	r3, [r3, #0]
 8001df8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001dfc:	d105      	bne.n	8001e0a <HAL_TIM_Base_MspDeInit+0x1e>
  {
  /* USER CODE BEGIN TIM2_MspDeInit 0 */

  /* USER CODE END TIM2_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_TIM2_CLK_DISABLE();
 8001dfe:	4b06      	ldr	r3, [pc, #24]	; (8001e18 <HAL_TIM_Base_MspDeInit+0x2c>)
 8001e00:	69db      	ldr	r3, [r3, #28]
 8001e02:	4a05      	ldr	r2, [pc, #20]	; (8001e18 <HAL_TIM_Base_MspDeInit+0x2c>)
 8001e04:	f023 0301 	bic.w	r3, r3, #1
 8001e08:	61d3      	str	r3, [r2, #28]
  /* USER CODE BEGIN TIM2_MspDeInit 1 */

  /* USER CODE END TIM2_MspDeInit 1 */
  }

}
 8001e0a:	bf00      	nop
 8001e0c:	370c      	adds	r7, #12
 8001e0e:	46bd      	mov	sp, r7
 8001e10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e14:	4770      	bx	lr
 8001e16:	bf00      	nop
 8001e18:	40021000 	.word	0x40021000

08001e1c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001e1c:	b580      	push	{r7, lr}
 8001e1e:	b08a      	sub	sp, #40	; 0x28
 8001e20:	af00      	add	r7, sp, #0
 8001e22:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e24:	f107 0314 	add.w	r3, r7, #20
 8001e28:	2200      	movs	r2, #0
 8001e2a:	601a      	str	r2, [r3, #0]
 8001e2c:	605a      	str	r2, [r3, #4]
 8001e2e:	609a      	str	r2, [r3, #8]
 8001e30:	60da      	str	r2, [r3, #12]
 8001e32:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART2)
 8001e34:	687b      	ldr	r3, [r7, #4]
 8001e36:	681b      	ldr	r3, [r3, #0]
 8001e38:	4a17      	ldr	r2, [pc, #92]	; (8001e98 <HAL_UART_MspInit+0x7c>)
 8001e3a:	4293      	cmp	r3, r2
 8001e3c:	d128      	bne.n	8001e90 <HAL_UART_MspInit+0x74>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8001e3e:	4b17      	ldr	r3, [pc, #92]	; (8001e9c <HAL_UART_MspInit+0x80>)
 8001e40:	69db      	ldr	r3, [r3, #28]
 8001e42:	4a16      	ldr	r2, [pc, #88]	; (8001e9c <HAL_UART_MspInit+0x80>)
 8001e44:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001e48:	61d3      	str	r3, [r2, #28]
 8001e4a:	4b14      	ldr	r3, [pc, #80]	; (8001e9c <HAL_UART_MspInit+0x80>)
 8001e4c:	69db      	ldr	r3, [r3, #28]
 8001e4e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001e52:	613b      	str	r3, [r7, #16]
 8001e54:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e56:	4b11      	ldr	r3, [pc, #68]	; (8001e9c <HAL_UART_MspInit+0x80>)
 8001e58:	695b      	ldr	r3, [r3, #20]
 8001e5a:	4a10      	ldr	r2, [pc, #64]	; (8001e9c <HAL_UART_MspInit+0x80>)
 8001e5c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001e60:	6153      	str	r3, [r2, #20]
 8001e62:	4b0e      	ldr	r3, [pc, #56]	; (8001e9c <HAL_UART_MspInit+0x80>)
 8001e64:	695b      	ldr	r3, [r3, #20]
 8001e66:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001e6a:	60fb      	str	r3, [r7, #12]
 8001e6c:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8001e6e:	230c      	movs	r3, #12
 8001e70:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e72:	2302      	movs	r3, #2
 8001e74:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e76:	2300      	movs	r3, #0
 8001e78:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e7a:	2303      	movs	r3, #3
 8001e7c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001e7e:	2307      	movs	r3, #7
 8001e80:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e82:	f107 0314 	add.w	r3, r7, #20
 8001e86:	4619      	mov	r1, r3
 8001e88:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001e8c:	f001 f982 	bl	8003194 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8001e90:	bf00      	nop
 8001e92:	3728      	adds	r7, #40	; 0x28
 8001e94:	46bd      	mov	sp, r7
 8001e96:	bd80      	pop	{r7, pc}
 8001e98:	40004400 	.word	0x40004400
 8001e9c:	40021000 	.word	0x40021000

08001ea0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001ea0:	b480      	push	{r7}
 8001ea2:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001ea4:	bf00      	nop
 8001ea6:	46bd      	mov	sp, r7
 8001ea8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eac:	4770      	bx	lr

08001eae <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001eae:	b480      	push	{r7}
 8001eb0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001eb2:	e7fe      	b.n	8001eb2 <HardFault_Handler+0x4>

08001eb4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001eb4:	b480      	push	{r7}
 8001eb6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001eb8:	e7fe      	b.n	8001eb8 <MemManage_Handler+0x4>

08001eba <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001eba:	b480      	push	{r7}
 8001ebc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001ebe:	e7fe      	b.n	8001ebe <BusFault_Handler+0x4>

08001ec0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001ec0:	b480      	push	{r7}
 8001ec2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001ec4:	e7fe      	b.n	8001ec4 <UsageFault_Handler+0x4>

08001ec6 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001ec6:	b480      	push	{r7}
 8001ec8:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001eca:	bf00      	nop
 8001ecc:	46bd      	mov	sp, r7
 8001ece:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ed2:	4770      	bx	lr

08001ed4 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001ed4:	b480      	push	{r7}
 8001ed6:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001ed8:	bf00      	nop
 8001eda:	46bd      	mov	sp, r7
 8001edc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ee0:	4770      	bx	lr

08001ee2 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001ee2:	b480      	push	{r7}
 8001ee4:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001ee6:	bf00      	nop
 8001ee8:	46bd      	mov	sp, r7
 8001eea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eee:	4770      	bx	lr

08001ef0 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001ef0:	b580      	push	{r7, lr}
 8001ef2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001ef4:	f000 fff8 	bl	8002ee8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001ef8:	bf00      	nop
 8001efa:	bd80      	pop	{r7, pc}

08001efc <EXTI0_IRQHandler>:

/**
  * @brief This function handles EXTI line0 interrupt.
  */
void EXTI0_IRQHandler(void)
{
 8001efc:	b580      	push	{r7, lr}
 8001efe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI0_IRQn 0 */

  /* USER CODE END EXTI0_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 8001f00:	2001      	movs	r0, #1
 8001f02:	f001 fad1 	bl	80034a8 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI0_IRQn 1 */

  /* USER CODE END EXTI0_IRQn 1 */
}
 8001f06:	bf00      	nop
 8001f08:	bd80      	pop	{r7, pc}

08001f0a <EXTI1_IRQHandler>:

/**
  * @brief This function handles EXTI line1 interrupt.
  */
void EXTI1_IRQHandler(void)
{
 8001f0a:	b580      	push	{r7, lr}
 8001f0c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI1_IRQn 0 */

  /* USER CODE END EXTI1_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
 8001f0e:	2002      	movs	r0, #2
 8001f10:	f001 faca 	bl	80034a8 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI1_IRQn 1 */

  /* USER CODE END EXTI1_IRQn 1 */
}
 8001f14:	bf00      	nop
 8001f16:	bd80      	pop	{r7, pc}

08001f18 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8001f18:	b580      	push	{r7, lr}
 8001f1a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 8001f1c:	2020      	movs	r0, #32
 8001f1e:	f001 fac3 	bl	80034a8 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8001f22:	bf00      	nop
 8001f24:	bd80      	pop	{r7, pc}
	...

08001f28 <SystemInit>:
 8001f28:	b480      	push	{r7}
 8001f2a:	af00      	add	r7, sp, #0
 8001f2c:	4b06      	ldr	r3, [pc, #24]	; (8001f48 <SystemInit+0x20>)
 8001f2e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001f32:	4a05      	ldr	r2, [pc, #20]	; (8001f48 <SystemInit+0x20>)
 8001f34:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001f38:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001f3c:	bf00      	nop
 8001f3e:	46bd      	mov	sp, r7
 8001f40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f44:	4770      	bx	lr
 8001f46:	bf00      	nop
 8001f48:	e000ed00 	.word	0xe000ed00

08001f4c <WIZCHIP_READ>:
 8001f4c:	b580      	push	{r7, lr}
 8001f4e:	b084      	sub	sp, #16
 8001f50:	af00      	add	r7, sp, #0
 8001f52:	6078      	str	r0, [r7, #4]
 8001f54:	4b22      	ldr	r3, [pc, #136]	; (8001fe0 <WIZCHIP_READ+0x94>)
 8001f56:	68db      	ldr	r3, [r3, #12]
 8001f58:	4798      	blx	r3
 8001f5a:	4b21      	ldr	r3, [pc, #132]	; (8001fe0 <WIZCHIP_READ+0x94>)
 8001f5c:	695b      	ldr	r3, [r3, #20]
 8001f5e:	4798      	blx	r3
 8001f60:	4b1f      	ldr	r3, [pc, #124]	; (8001fe0 <WIZCHIP_READ+0x94>)
 8001f62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001f64:	2b00      	cmp	r3, #0
 8001f66:	d003      	beq.n	8001f70 <WIZCHIP_READ+0x24>
 8001f68:	4b1d      	ldr	r3, [pc, #116]	; (8001fe0 <WIZCHIP_READ+0x94>)
 8001f6a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001f6c:	2b00      	cmp	r3, #0
 8001f6e:	d114      	bne.n	8001f9a <WIZCHIP_READ+0x4e>
 8001f70:	4b1b      	ldr	r3, [pc, #108]	; (8001fe0 <WIZCHIP_READ+0x94>)
 8001f72:	6a1b      	ldr	r3, [r3, #32]
 8001f74:	687a      	ldr	r2, [r7, #4]
 8001f76:	0c12      	lsrs	r2, r2, #16
 8001f78:	b2d2      	uxtb	r2, r2
 8001f7a:	4610      	mov	r0, r2
 8001f7c:	4798      	blx	r3
 8001f7e:	4b18      	ldr	r3, [pc, #96]	; (8001fe0 <WIZCHIP_READ+0x94>)
 8001f80:	6a1b      	ldr	r3, [r3, #32]
 8001f82:	687a      	ldr	r2, [r7, #4]
 8001f84:	0a12      	lsrs	r2, r2, #8
 8001f86:	b2d2      	uxtb	r2, r2
 8001f88:	4610      	mov	r0, r2
 8001f8a:	4798      	blx	r3
 8001f8c:	4b14      	ldr	r3, [pc, #80]	; (8001fe0 <WIZCHIP_READ+0x94>)
 8001f8e:	6a1b      	ldr	r3, [r3, #32]
 8001f90:	687a      	ldr	r2, [r7, #4]
 8001f92:	b2d2      	uxtb	r2, r2
 8001f94:	4610      	mov	r0, r2
 8001f96:	4798      	blx	r3
 8001f98:	e011      	b.n	8001fbe <WIZCHIP_READ+0x72>
 8001f9a:	687b      	ldr	r3, [r7, #4]
 8001f9c:	0c1b      	lsrs	r3, r3, #16
 8001f9e:	b2db      	uxtb	r3, r3
 8001fa0:	733b      	strb	r3, [r7, #12]
 8001fa2:	687b      	ldr	r3, [r7, #4]
 8001fa4:	0a1b      	lsrs	r3, r3, #8
 8001fa6:	b2db      	uxtb	r3, r3
 8001fa8:	737b      	strb	r3, [r7, #13]
 8001faa:	687b      	ldr	r3, [r7, #4]
 8001fac:	b2db      	uxtb	r3, r3
 8001fae:	73bb      	strb	r3, [r7, #14]
 8001fb0:	4b0b      	ldr	r3, [pc, #44]	; (8001fe0 <WIZCHIP_READ+0x94>)
 8001fb2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001fb4:	f107 020c 	add.w	r2, r7, #12
 8001fb8:	2103      	movs	r1, #3
 8001fba:	4610      	mov	r0, r2
 8001fbc:	4798      	blx	r3
 8001fbe:	4b08      	ldr	r3, [pc, #32]	; (8001fe0 <WIZCHIP_READ+0x94>)
 8001fc0:	69db      	ldr	r3, [r3, #28]
 8001fc2:	4798      	blx	r3
 8001fc4:	4603      	mov	r3, r0
 8001fc6:	73fb      	strb	r3, [r7, #15]
 8001fc8:	4b05      	ldr	r3, [pc, #20]	; (8001fe0 <WIZCHIP_READ+0x94>)
 8001fca:	699b      	ldr	r3, [r3, #24]
 8001fcc:	4798      	blx	r3
 8001fce:	4b04      	ldr	r3, [pc, #16]	; (8001fe0 <WIZCHIP_READ+0x94>)
 8001fd0:	691b      	ldr	r3, [r3, #16]
 8001fd2:	4798      	blx	r3
 8001fd4:	7bfb      	ldrb	r3, [r7, #15]
 8001fd6:	4618      	mov	r0, r3
 8001fd8:	3710      	adds	r7, #16
 8001fda:	46bd      	mov	sp, r7
 8001fdc:	bd80      	pop	{r7, pc}
 8001fde:	bf00      	nop
 8001fe0:	20000010 	.word	0x20000010

08001fe4 <WIZCHIP_WRITE>:
 8001fe4:	b580      	push	{r7, lr}
 8001fe6:	b084      	sub	sp, #16
 8001fe8:	af00      	add	r7, sp, #0
 8001fea:	6078      	str	r0, [r7, #4]
 8001fec:	460b      	mov	r3, r1
 8001fee:	70fb      	strb	r3, [r7, #3]
 8001ff0:	4b22      	ldr	r3, [pc, #136]	; (800207c <WIZCHIP_WRITE+0x98>)
 8001ff2:	68db      	ldr	r3, [r3, #12]
 8001ff4:	4798      	blx	r3
 8001ff6:	4b21      	ldr	r3, [pc, #132]	; (800207c <WIZCHIP_WRITE+0x98>)
 8001ff8:	695b      	ldr	r3, [r3, #20]
 8001ffa:	4798      	blx	r3
 8001ffc:	687b      	ldr	r3, [r7, #4]
 8001ffe:	f043 0304 	orr.w	r3, r3, #4
 8002002:	607b      	str	r3, [r7, #4]
 8002004:	4b1d      	ldr	r3, [pc, #116]	; (800207c <WIZCHIP_WRITE+0x98>)
 8002006:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002008:	2b00      	cmp	r3, #0
 800200a:	d119      	bne.n	8002040 <WIZCHIP_WRITE+0x5c>
 800200c:	4b1b      	ldr	r3, [pc, #108]	; (800207c <WIZCHIP_WRITE+0x98>)
 800200e:	6a1b      	ldr	r3, [r3, #32]
 8002010:	687a      	ldr	r2, [r7, #4]
 8002012:	0c12      	lsrs	r2, r2, #16
 8002014:	b2d2      	uxtb	r2, r2
 8002016:	4610      	mov	r0, r2
 8002018:	4798      	blx	r3
 800201a:	4b18      	ldr	r3, [pc, #96]	; (800207c <WIZCHIP_WRITE+0x98>)
 800201c:	6a1b      	ldr	r3, [r3, #32]
 800201e:	687a      	ldr	r2, [r7, #4]
 8002020:	0a12      	lsrs	r2, r2, #8
 8002022:	b2d2      	uxtb	r2, r2
 8002024:	4610      	mov	r0, r2
 8002026:	4798      	blx	r3
 8002028:	4b14      	ldr	r3, [pc, #80]	; (800207c <WIZCHIP_WRITE+0x98>)
 800202a:	6a1b      	ldr	r3, [r3, #32]
 800202c:	687a      	ldr	r2, [r7, #4]
 800202e:	b2d2      	uxtb	r2, r2
 8002030:	4610      	mov	r0, r2
 8002032:	4798      	blx	r3
 8002034:	4b11      	ldr	r3, [pc, #68]	; (800207c <WIZCHIP_WRITE+0x98>)
 8002036:	6a1b      	ldr	r3, [r3, #32]
 8002038:	78fa      	ldrb	r2, [r7, #3]
 800203a:	4610      	mov	r0, r2
 800203c:	4798      	blx	r3
 800203e:	e013      	b.n	8002068 <WIZCHIP_WRITE+0x84>
 8002040:	687b      	ldr	r3, [r7, #4]
 8002042:	0c1b      	lsrs	r3, r3, #16
 8002044:	b2db      	uxtb	r3, r3
 8002046:	733b      	strb	r3, [r7, #12]
 8002048:	687b      	ldr	r3, [r7, #4]
 800204a:	0a1b      	lsrs	r3, r3, #8
 800204c:	b2db      	uxtb	r3, r3
 800204e:	737b      	strb	r3, [r7, #13]
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	b2db      	uxtb	r3, r3
 8002054:	73bb      	strb	r3, [r7, #14]
 8002056:	78fb      	ldrb	r3, [r7, #3]
 8002058:	73fb      	strb	r3, [r7, #15]
 800205a:	4b08      	ldr	r3, [pc, #32]	; (800207c <WIZCHIP_WRITE+0x98>)
 800205c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800205e:	f107 020c 	add.w	r2, r7, #12
 8002062:	2104      	movs	r1, #4
 8002064:	4610      	mov	r0, r2
 8002066:	4798      	blx	r3
 8002068:	4b04      	ldr	r3, [pc, #16]	; (800207c <WIZCHIP_WRITE+0x98>)
 800206a:	699b      	ldr	r3, [r3, #24]
 800206c:	4798      	blx	r3
 800206e:	4b03      	ldr	r3, [pc, #12]	; (800207c <WIZCHIP_WRITE+0x98>)
 8002070:	691b      	ldr	r3, [r3, #16]
 8002072:	4798      	blx	r3
 8002074:	bf00      	nop
 8002076:	3710      	adds	r7, #16
 8002078:	46bd      	mov	sp, r7
 800207a:	bd80      	pop	{r7, pc}
 800207c:	20000010 	.word	0x20000010

08002080 <WIZCHIP_READ_BUF>:
 8002080:	b590      	push	{r4, r7, lr}
 8002082:	b087      	sub	sp, #28
 8002084:	af00      	add	r7, sp, #0
 8002086:	60f8      	str	r0, [r7, #12]
 8002088:	60b9      	str	r1, [r7, #8]
 800208a:	4613      	mov	r3, r2
 800208c:	80fb      	strh	r3, [r7, #6]
 800208e:	4b2b      	ldr	r3, [pc, #172]	; (800213c <WIZCHIP_READ_BUF+0xbc>)
 8002090:	68db      	ldr	r3, [r3, #12]
 8002092:	4798      	blx	r3
 8002094:	4b29      	ldr	r3, [pc, #164]	; (800213c <WIZCHIP_READ_BUF+0xbc>)
 8002096:	695b      	ldr	r3, [r3, #20]
 8002098:	4798      	blx	r3
 800209a:	4b28      	ldr	r3, [pc, #160]	; (800213c <WIZCHIP_READ_BUF+0xbc>)
 800209c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800209e:	2b00      	cmp	r3, #0
 80020a0:	d003      	beq.n	80020aa <WIZCHIP_READ_BUF+0x2a>
 80020a2:	4b26      	ldr	r3, [pc, #152]	; (800213c <WIZCHIP_READ_BUF+0xbc>)
 80020a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80020a6:	2b00      	cmp	r3, #0
 80020a8:	d126      	bne.n	80020f8 <WIZCHIP_READ_BUF+0x78>
 80020aa:	4b24      	ldr	r3, [pc, #144]	; (800213c <WIZCHIP_READ_BUF+0xbc>)
 80020ac:	6a1b      	ldr	r3, [r3, #32]
 80020ae:	68fa      	ldr	r2, [r7, #12]
 80020b0:	0c12      	lsrs	r2, r2, #16
 80020b2:	b2d2      	uxtb	r2, r2
 80020b4:	4610      	mov	r0, r2
 80020b6:	4798      	blx	r3
 80020b8:	4b20      	ldr	r3, [pc, #128]	; (800213c <WIZCHIP_READ_BUF+0xbc>)
 80020ba:	6a1b      	ldr	r3, [r3, #32]
 80020bc:	68fa      	ldr	r2, [r7, #12]
 80020be:	0a12      	lsrs	r2, r2, #8
 80020c0:	b2d2      	uxtb	r2, r2
 80020c2:	4610      	mov	r0, r2
 80020c4:	4798      	blx	r3
 80020c6:	4b1d      	ldr	r3, [pc, #116]	; (800213c <WIZCHIP_READ_BUF+0xbc>)
 80020c8:	6a1b      	ldr	r3, [r3, #32]
 80020ca:	68fa      	ldr	r2, [r7, #12]
 80020cc:	b2d2      	uxtb	r2, r2
 80020ce:	4610      	mov	r0, r2
 80020d0:	4798      	blx	r3
 80020d2:	2300      	movs	r3, #0
 80020d4:	82fb      	strh	r3, [r7, #22]
 80020d6:	e00a      	b.n	80020ee <WIZCHIP_READ_BUF+0x6e>
 80020d8:	4b18      	ldr	r3, [pc, #96]	; (800213c <WIZCHIP_READ_BUF+0xbc>)
 80020da:	69db      	ldr	r3, [r3, #28]
 80020dc:	8afa      	ldrh	r2, [r7, #22]
 80020de:	68b9      	ldr	r1, [r7, #8]
 80020e0:	188c      	adds	r4, r1, r2
 80020e2:	4798      	blx	r3
 80020e4:	4603      	mov	r3, r0
 80020e6:	7023      	strb	r3, [r4, #0]
 80020e8:	8afb      	ldrh	r3, [r7, #22]
 80020ea:	3301      	adds	r3, #1
 80020ec:	82fb      	strh	r3, [r7, #22]
 80020ee:	8afa      	ldrh	r2, [r7, #22]
 80020f0:	88fb      	ldrh	r3, [r7, #6]
 80020f2:	429a      	cmp	r2, r3
 80020f4:	d3f0      	bcc.n	80020d8 <WIZCHIP_READ_BUF+0x58>
 80020f6:	e017      	b.n	8002128 <WIZCHIP_READ_BUF+0xa8>
 80020f8:	68fb      	ldr	r3, [r7, #12]
 80020fa:	0c1b      	lsrs	r3, r3, #16
 80020fc:	b2db      	uxtb	r3, r3
 80020fe:	743b      	strb	r3, [r7, #16]
 8002100:	68fb      	ldr	r3, [r7, #12]
 8002102:	0a1b      	lsrs	r3, r3, #8
 8002104:	b2db      	uxtb	r3, r3
 8002106:	747b      	strb	r3, [r7, #17]
 8002108:	68fb      	ldr	r3, [r7, #12]
 800210a:	b2db      	uxtb	r3, r3
 800210c:	74bb      	strb	r3, [r7, #18]
 800210e:	4b0b      	ldr	r3, [pc, #44]	; (800213c <WIZCHIP_READ_BUF+0xbc>)
 8002110:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002112:	f107 0210 	add.w	r2, r7, #16
 8002116:	2103      	movs	r1, #3
 8002118:	4610      	mov	r0, r2
 800211a:	4798      	blx	r3
 800211c:	4b07      	ldr	r3, [pc, #28]	; (800213c <WIZCHIP_READ_BUF+0xbc>)
 800211e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002120:	88fa      	ldrh	r2, [r7, #6]
 8002122:	4611      	mov	r1, r2
 8002124:	68b8      	ldr	r0, [r7, #8]
 8002126:	4798      	blx	r3
 8002128:	4b04      	ldr	r3, [pc, #16]	; (800213c <WIZCHIP_READ_BUF+0xbc>)
 800212a:	699b      	ldr	r3, [r3, #24]
 800212c:	4798      	blx	r3
 800212e:	4b03      	ldr	r3, [pc, #12]	; (800213c <WIZCHIP_READ_BUF+0xbc>)
 8002130:	691b      	ldr	r3, [r3, #16]
 8002132:	4798      	blx	r3
 8002134:	bf00      	nop
 8002136:	371c      	adds	r7, #28
 8002138:	46bd      	mov	sp, r7
 800213a:	bd90      	pop	{r4, r7, pc}
 800213c:	20000010 	.word	0x20000010

08002140 <WIZCHIP_WRITE_BUF>:
 8002140:	b580      	push	{r7, lr}
 8002142:	b086      	sub	sp, #24
 8002144:	af00      	add	r7, sp, #0
 8002146:	60f8      	str	r0, [r7, #12]
 8002148:	60b9      	str	r1, [r7, #8]
 800214a:	4613      	mov	r3, r2
 800214c:	80fb      	strh	r3, [r7, #6]
 800214e:	4b2b      	ldr	r3, [pc, #172]	; (80021fc <WIZCHIP_WRITE_BUF+0xbc>)
 8002150:	68db      	ldr	r3, [r3, #12]
 8002152:	4798      	blx	r3
 8002154:	4b29      	ldr	r3, [pc, #164]	; (80021fc <WIZCHIP_WRITE_BUF+0xbc>)
 8002156:	695b      	ldr	r3, [r3, #20]
 8002158:	4798      	blx	r3
 800215a:	68fb      	ldr	r3, [r7, #12]
 800215c:	f043 0304 	orr.w	r3, r3, #4
 8002160:	60fb      	str	r3, [r7, #12]
 8002162:	4b26      	ldr	r3, [pc, #152]	; (80021fc <WIZCHIP_WRITE_BUF+0xbc>)
 8002164:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002166:	2b00      	cmp	r3, #0
 8002168:	d126      	bne.n	80021b8 <WIZCHIP_WRITE_BUF+0x78>
 800216a:	4b24      	ldr	r3, [pc, #144]	; (80021fc <WIZCHIP_WRITE_BUF+0xbc>)
 800216c:	6a1b      	ldr	r3, [r3, #32]
 800216e:	68fa      	ldr	r2, [r7, #12]
 8002170:	0c12      	lsrs	r2, r2, #16
 8002172:	b2d2      	uxtb	r2, r2
 8002174:	4610      	mov	r0, r2
 8002176:	4798      	blx	r3
 8002178:	4b20      	ldr	r3, [pc, #128]	; (80021fc <WIZCHIP_WRITE_BUF+0xbc>)
 800217a:	6a1b      	ldr	r3, [r3, #32]
 800217c:	68fa      	ldr	r2, [r7, #12]
 800217e:	0a12      	lsrs	r2, r2, #8
 8002180:	b2d2      	uxtb	r2, r2
 8002182:	4610      	mov	r0, r2
 8002184:	4798      	blx	r3
 8002186:	4b1d      	ldr	r3, [pc, #116]	; (80021fc <WIZCHIP_WRITE_BUF+0xbc>)
 8002188:	6a1b      	ldr	r3, [r3, #32]
 800218a:	68fa      	ldr	r2, [r7, #12]
 800218c:	b2d2      	uxtb	r2, r2
 800218e:	4610      	mov	r0, r2
 8002190:	4798      	blx	r3
 8002192:	2300      	movs	r3, #0
 8002194:	82fb      	strh	r3, [r7, #22]
 8002196:	e00a      	b.n	80021ae <WIZCHIP_WRITE_BUF+0x6e>
 8002198:	4b18      	ldr	r3, [pc, #96]	; (80021fc <WIZCHIP_WRITE_BUF+0xbc>)
 800219a:	6a1b      	ldr	r3, [r3, #32]
 800219c:	8afa      	ldrh	r2, [r7, #22]
 800219e:	68b9      	ldr	r1, [r7, #8]
 80021a0:	440a      	add	r2, r1
 80021a2:	7812      	ldrb	r2, [r2, #0]
 80021a4:	4610      	mov	r0, r2
 80021a6:	4798      	blx	r3
 80021a8:	8afb      	ldrh	r3, [r7, #22]
 80021aa:	3301      	adds	r3, #1
 80021ac:	82fb      	strh	r3, [r7, #22]
 80021ae:	8afa      	ldrh	r2, [r7, #22]
 80021b0:	88fb      	ldrh	r3, [r7, #6]
 80021b2:	429a      	cmp	r2, r3
 80021b4:	d3f0      	bcc.n	8002198 <WIZCHIP_WRITE_BUF+0x58>
 80021b6:	e017      	b.n	80021e8 <WIZCHIP_WRITE_BUF+0xa8>
 80021b8:	68fb      	ldr	r3, [r7, #12]
 80021ba:	0c1b      	lsrs	r3, r3, #16
 80021bc:	b2db      	uxtb	r3, r3
 80021be:	743b      	strb	r3, [r7, #16]
 80021c0:	68fb      	ldr	r3, [r7, #12]
 80021c2:	0a1b      	lsrs	r3, r3, #8
 80021c4:	b2db      	uxtb	r3, r3
 80021c6:	747b      	strb	r3, [r7, #17]
 80021c8:	68fb      	ldr	r3, [r7, #12]
 80021ca:	b2db      	uxtb	r3, r3
 80021cc:	74bb      	strb	r3, [r7, #18]
 80021ce:	4b0b      	ldr	r3, [pc, #44]	; (80021fc <WIZCHIP_WRITE_BUF+0xbc>)
 80021d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80021d2:	f107 0210 	add.w	r2, r7, #16
 80021d6:	2103      	movs	r1, #3
 80021d8:	4610      	mov	r0, r2
 80021da:	4798      	blx	r3
 80021dc:	4b07      	ldr	r3, [pc, #28]	; (80021fc <WIZCHIP_WRITE_BUF+0xbc>)
 80021de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80021e0:	88fa      	ldrh	r2, [r7, #6]
 80021e2:	4611      	mov	r1, r2
 80021e4:	68b8      	ldr	r0, [r7, #8]
 80021e6:	4798      	blx	r3
 80021e8:	4b04      	ldr	r3, [pc, #16]	; (80021fc <WIZCHIP_WRITE_BUF+0xbc>)
 80021ea:	699b      	ldr	r3, [r3, #24]
 80021ec:	4798      	blx	r3
 80021ee:	4b03      	ldr	r3, [pc, #12]	; (80021fc <WIZCHIP_WRITE_BUF+0xbc>)
 80021f0:	691b      	ldr	r3, [r3, #16]
 80021f2:	4798      	blx	r3
 80021f4:	bf00      	nop
 80021f6:	3718      	adds	r7, #24
 80021f8:	46bd      	mov	sp, r7
 80021fa:	bd80      	pop	{r7, pc}
 80021fc:	20000010 	.word	0x20000010

08002200 <getSn_TX_FSR>:
 8002200:	b590      	push	{r4, r7, lr}
 8002202:	b085      	sub	sp, #20
 8002204:	af00      	add	r7, sp, #0
 8002206:	4603      	mov	r3, r0
 8002208:	71fb      	strb	r3, [r7, #7]
 800220a:	2300      	movs	r3, #0
 800220c:	81fb      	strh	r3, [r7, #14]
 800220e:	2300      	movs	r3, #0
 8002210:	81bb      	strh	r3, [r7, #12]
 8002212:	79fb      	ldrb	r3, [r7, #7]
 8002214:	009b      	lsls	r3, r3, #2
 8002216:	3301      	adds	r3, #1
 8002218:	00db      	lsls	r3, r3, #3
 800221a:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 800221e:	4618      	mov	r0, r3
 8002220:	f7ff fe94 	bl	8001f4c <WIZCHIP_READ>
 8002224:	4603      	mov	r3, r0
 8002226:	81bb      	strh	r3, [r7, #12]
 8002228:	89bb      	ldrh	r3, [r7, #12]
 800222a:	021b      	lsls	r3, r3, #8
 800222c:	b29c      	uxth	r4, r3
 800222e:	79fb      	ldrb	r3, [r7, #7]
 8002230:	009b      	lsls	r3, r3, #2
 8002232:	3301      	adds	r3, #1
 8002234:	00db      	lsls	r3, r3, #3
 8002236:	f503 5304 	add.w	r3, r3, #8448	; 0x2100
 800223a:	4618      	mov	r0, r3
 800223c:	f7ff fe86 	bl	8001f4c <WIZCHIP_READ>
 8002240:	4603      	mov	r3, r0
 8002242:	b29b      	uxth	r3, r3
 8002244:	4423      	add	r3, r4
 8002246:	81bb      	strh	r3, [r7, #12]
 8002248:	89bb      	ldrh	r3, [r7, #12]
 800224a:	2b00      	cmp	r3, #0
 800224c:	d01a      	beq.n	8002284 <getSn_TX_FSR+0x84>
 800224e:	79fb      	ldrb	r3, [r7, #7]
 8002250:	009b      	lsls	r3, r3, #2
 8002252:	3301      	adds	r3, #1
 8002254:	00db      	lsls	r3, r3, #3
 8002256:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 800225a:	4618      	mov	r0, r3
 800225c:	f7ff fe76 	bl	8001f4c <WIZCHIP_READ>
 8002260:	4603      	mov	r3, r0
 8002262:	81fb      	strh	r3, [r7, #14]
 8002264:	89fb      	ldrh	r3, [r7, #14]
 8002266:	021b      	lsls	r3, r3, #8
 8002268:	b29c      	uxth	r4, r3
 800226a:	79fb      	ldrb	r3, [r7, #7]
 800226c:	009b      	lsls	r3, r3, #2
 800226e:	3301      	adds	r3, #1
 8002270:	00db      	lsls	r3, r3, #3
 8002272:	f503 5304 	add.w	r3, r3, #8448	; 0x2100
 8002276:	4618      	mov	r0, r3
 8002278:	f7ff fe68 	bl	8001f4c <WIZCHIP_READ>
 800227c:	4603      	mov	r3, r0
 800227e:	b29b      	uxth	r3, r3
 8002280:	4423      	add	r3, r4
 8002282:	81fb      	strh	r3, [r7, #14]
 8002284:	89fa      	ldrh	r2, [r7, #14]
 8002286:	89bb      	ldrh	r3, [r7, #12]
 8002288:	429a      	cmp	r2, r3
 800228a:	d1c2      	bne.n	8002212 <getSn_TX_FSR+0x12>
 800228c:	89fb      	ldrh	r3, [r7, #14]
 800228e:	4618      	mov	r0, r3
 8002290:	3714      	adds	r7, #20
 8002292:	46bd      	mov	sp, r7
 8002294:	bd90      	pop	{r4, r7, pc}

08002296 <getSn_RX_RSR>:
 8002296:	b590      	push	{r4, r7, lr}
 8002298:	b085      	sub	sp, #20
 800229a:	af00      	add	r7, sp, #0
 800229c:	4603      	mov	r3, r0
 800229e:	71fb      	strb	r3, [r7, #7]
 80022a0:	2300      	movs	r3, #0
 80022a2:	81fb      	strh	r3, [r7, #14]
 80022a4:	2300      	movs	r3, #0
 80022a6:	81bb      	strh	r3, [r7, #12]
 80022a8:	79fb      	ldrb	r3, [r7, #7]
 80022aa:	009b      	lsls	r3, r3, #2
 80022ac:	3301      	adds	r3, #1
 80022ae:	00db      	lsls	r3, r3, #3
 80022b0:	f503 5318 	add.w	r3, r3, #9728	; 0x2600
 80022b4:	4618      	mov	r0, r3
 80022b6:	f7ff fe49 	bl	8001f4c <WIZCHIP_READ>
 80022ba:	4603      	mov	r3, r0
 80022bc:	81bb      	strh	r3, [r7, #12]
 80022be:	89bb      	ldrh	r3, [r7, #12]
 80022c0:	021b      	lsls	r3, r3, #8
 80022c2:	b29c      	uxth	r4, r3
 80022c4:	79fb      	ldrb	r3, [r7, #7]
 80022c6:	009b      	lsls	r3, r3, #2
 80022c8:	3301      	adds	r3, #1
 80022ca:	00db      	lsls	r3, r3, #3
 80022cc:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
 80022d0:	4618      	mov	r0, r3
 80022d2:	f7ff fe3b 	bl	8001f4c <WIZCHIP_READ>
 80022d6:	4603      	mov	r3, r0
 80022d8:	b29b      	uxth	r3, r3
 80022da:	4423      	add	r3, r4
 80022dc:	81bb      	strh	r3, [r7, #12]
 80022de:	89bb      	ldrh	r3, [r7, #12]
 80022e0:	2b00      	cmp	r3, #0
 80022e2:	d01a      	beq.n	800231a <getSn_RX_RSR+0x84>
 80022e4:	79fb      	ldrb	r3, [r7, #7]
 80022e6:	009b      	lsls	r3, r3, #2
 80022e8:	3301      	adds	r3, #1
 80022ea:	00db      	lsls	r3, r3, #3
 80022ec:	f503 5318 	add.w	r3, r3, #9728	; 0x2600
 80022f0:	4618      	mov	r0, r3
 80022f2:	f7ff fe2b 	bl	8001f4c <WIZCHIP_READ>
 80022f6:	4603      	mov	r3, r0
 80022f8:	81fb      	strh	r3, [r7, #14]
 80022fa:	89fb      	ldrh	r3, [r7, #14]
 80022fc:	021b      	lsls	r3, r3, #8
 80022fe:	b29c      	uxth	r4, r3
 8002300:	79fb      	ldrb	r3, [r7, #7]
 8002302:	009b      	lsls	r3, r3, #2
 8002304:	3301      	adds	r3, #1
 8002306:	00db      	lsls	r3, r3, #3
 8002308:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
 800230c:	4618      	mov	r0, r3
 800230e:	f7ff fe1d 	bl	8001f4c <WIZCHIP_READ>
 8002312:	4603      	mov	r3, r0
 8002314:	b29b      	uxth	r3, r3
 8002316:	4423      	add	r3, r4
 8002318:	81fb      	strh	r3, [r7, #14]
 800231a:	89fa      	ldrh	r2, [r7, #14]
 800231c:	89bb      	ldrh	r3, [r7, #12]
 800231e:	429a      	cmp	r2, r3
 8002320:	d1c2      	bne.n	80022a8 <getSn_RX_RSR+0x12>
 8002322:	89fb      	ldrh	r3, [r7, #14]
 8002324:	4618      	mov	r0, r3
 8002326:	3714      	adds	r7, #20
 8002328:	46bd      	mov	sp, r7
 800232a:	bd90      	pop	{r4, r7, pc}

0800232c <wiz_send_data>:
 800232c:	b590      	push	{r4, r7, lr}
 800232e:	b085      	sub	sp, #20
 8002330:	af00      	add	r7, sp, #0
 8002332:	4603      	mov	r3, r0
 8002334:	6039      	str	r1, [r7, #0]
 8002336:	71fb      	strb	r3, [r7, #7]
 8002338:	4613      	mov	r3, r2
 800233a:	80bb      	strh	r3, [r7, #4]
 800233c:	2300      	movs	r3, #0
 800233e:	81fb      	strh	r3, [r7, #14]
 8002340:	2300      	movs	r3, #0
 8002342:	60bb      	str	r3, [r7, #8]
 8002344:	88bb      	ldrh	r3, [r7, #4]
 8002346:	2b00      	cmp	r3, #0
 8002348:	d048      	beq.n	80023dc <wiz_send_data+0xb0>
 800234a:	79fb      	ldrb	r3, [r7, #7]
 800234c:	009b      	lsls	r3, r3, #2
 800234e:	3301      	adds	r3, #1
 8002350:	00db      	lsls	r3, r3, #3
 8002352:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
 8002356:	4618      	mov	r0, r3
 8002358:	f7ff fdf8 	bl	8001f4c <WIZCHIP_READ>
 800235c:	4603      	mov	r3, r0
 800235e:	b29b      	uxth	r3, r3
 8002360:	021b      	lsls	r3, r3, #8
 8002362:	b29c      	uxth	r4, r3
 8002364:	79fb      	ldrb	r3, [r7, #7]
 8002366:	009b      	lsls	r3, r3, #2
 8002368:	3301      	adds	r3, #1
 800236a:	00db      	lsls	r3, r3, #3
 800236c:	f503 5314 	add.w	r3, r3, #9472	; 0x2500
 8002370:	4618      	mov	r0, r3
 8002372:	f7ff fdeb 	bl	8001f4c <WIZCHIP_READ>
 8002376:	4603      	mov	r3, r0
 8002378:	b29b      	uxth	r3, r3
 800237a:	4423      	add	r3, r4
 800237c:	81fb      	strh	r3, [r7, #14]
 800237e:	89fb      	ldrh	r3, [r7, #14]
 8002380:	021b      	lsls	r3, r3, #8
 8002382:	79fa      	ldrb	r2, [r7, #7]
 8002384:	0092      	lsls	r2, r2, #2
 8002386:	3202      	adds	r2, #2
 8002388:	00d2      	lsls	r2, r2, #3
 800238a:	4413      	add	r3, r2
 800238c:	60bb      	str	r3, [r7, #8]
 800238e:	88bb      	ldrh	r3, [r7, #4]
 8002390:	461a      	mov	r2, r3
 8002392:	6839      	ldr	r1, [r7, #0]
 8002394:	68b8      	ldr	r0, [r7, #8]
 8002396:	f7ff fed3 	bl	8002140 <WIZCHIP_WRITE_BUF>
 800239a:	89fa      	ldrh	r2, [r7, #14]
 800239c:	88bb      	ldrh	r3, [r7, #4]
 800239e:	4413      	add	r3, r2
 80023a0:	81fb      	strh	r3, [r7, #14]
 80023a2:	79fb      	ldrb	r3, [r7, #7]
 80023a4:	009b      	lsls	r3, r3, #2
 80023a6:	3301      	adds	r3, #1
 80023a8:	00db      	lsls	r3, r3, #3
 80023aa:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
 80023ae:	461a      	mov	r2, r3
 80023b0:	89fb      	ldrh	r3, [r7, #14]
 80023b2:	0a1b      	lsrs	r3, r3, #8
 80023b4:	b29b      	uxth	r3, r3
 80023b6:	b2db      	uxtb	r3, r3
 80023b8:	4619      	mov	r1, r3
 80023ba:	4610      	mov	r0, r2
 80023bc:	f7ff fe12 	bl	8001fe4 <WIZCHIP_WRITE>
 80023c0:	79fb      	ldrb	r3, [r7, #7]
 80023c2:	009b      	lsls	r3, r3, #2
 80023c4:	3301      	adds	r3, #1
 80023c6:	00db      	lsls	r3, r3, #3
 80023c8:	f503 5314 	add.w	r3, r3, #9472	; 0x2500
 80023cc:	461a      	mov	r2, r3
 80023ce:	89fb      	ldrh	r3, [r7, #14]
 80023d0:	b2db      	uxtb	r3, r3
 80023d2:	4619      	mov	r1, r3
 80023d4:	4610      	mov	r0, r2
 80023d6:	f7ff fe05 	bl	8001fe4 <WIZCHIP_WRITE>
 80023da:	e000      	b.n	80023de <wiz_send_data+0xb2>
 80023dc:	bf00      	nop
 80023de:	3714      	adds	r7, #20
 80023e0:	46bd      	mov	sp, r7
 80023e2:	bd90      	pop	{r4, r7, pc}

080023e4 <wiz_recv_data>:
 80023e4:	b590      	push	{r4, r7, lr}
 80023e6:	b085      	sub	sp, #20
 80023e8:	af00      	add	r7, sp, #0
 80023ea:	4603      	mov	r3, r0
 80023ec:	6039      	str	r1, [r7, #0]
 80023ee:	71fb      	strb	r3, [r7, #7]
 80023f0:	4613      	mov	r3, r2
 80023f2:	80bb      	strh	r3, [r7, #4]
 80023f4:	2300      	movs	r3, #0
 80023f6:	81fb      	strh	r3, [r7, #14]
 80023f8:	2300      	movs	r3, #0
 80023fa:	60bb      	str	r3, [r7, #8]
 80023fc:	88bb      	ldrh	r3, [r7, #4]
 80023fe:	2b00      	cmp	r3, #0
 8002400:	d048      	beq.n	8002494 <wiz_recv_data+0xb0>
 8002402:	79fb      	ldrb	r3, [r7, #7]
 8002404:	009b      	lsls	r3, r3, #2
 8002406:	3301      	adds	r3, #1
 8002408:	00db      	lsls	r3, r3, #3
 800240a:	f503 5320 	add.w	r3, r3, #10240	; 0x2800
 800240e:	4618      	mov	r0, r3
 8002410:	f7ff fd9c 	bl	8001f4c <WIZCHIP_READ>
 8002414:	4603      	mov	r3, r0
 8002416:	b29b      	uxth	r3, r3
 8002418:	021b      	lsls	r3, r3, #8
 800241a:	b29c      	uxth	r4, r3
 800241c:	79fb      	ldrb	r3, [r7, #7]
 800241e:	009b      	lsls	r3, r3, #2
 8002420:	3301      	adds	r3, #1
 8002422:	00db      	lsls	r3, r3, #3
 8002424:	f503 5324 	add.w	r3, r3, #10496	; 0x2900
 8002428:	4618      	mov	r0, r3
 800242a:	f7ff fd8f 	bl	8001f4c <WIZCHIP_READ>
 800242e:	4603      	mov	r3, r0
 8002430:	b29b      	uxth	r3, r3
 8002432:	4423      	add	r3, r4
 8002434:	81fb      	strh	r3, [r7, #14]
 8002436:	89fb      	ldrh	r3, [r7, #14]
 8002438:	021b      	lsls	r3, r3, #8
 800243a:	79fa      	ldrb	r2, [r7, #7]
 800243c:	0092      	lsls	r2, r2, #2
 800243e:	3203      	adds	r2, #3
 8002440:	00d2      	lsls	r2, r2, #3
 8002442:	4413      	add	r3, r2
 8002444:	60bb      	str	r3, [r7, #8]
 8002446:	88bb      	ldrh	r3, [r7, #4]
 8002448:	461a      	mov	r2, r3
 800244a:	6839      	ldr	r1, [r7, #0]
 800244c:	68b8      	ldr	r0, [r7, #8]
 800244e:	f7ff fe17 	bl	8002080 <WIZCHIP_READ_BUF>
 8002452:	89fa      	ldrh	r2, [r7, #14]
 8002454:	88bb      	ldrh	r3, [r7, #4]
 8002456:	4413      	add	r3, r2
 8002458:	81fb      	strh	r3, [r7, #14]
 800245a:	79fb      	ldrb	r3, [r7, #7]
 800245c:	009b      	lsls	r3, r3, #2
 800245e:	3301      	adds	r3, #1
 8002460:	00db      	lsls	r3, r3, #3
 8002462:	f503 5320 	add.w	r3, r3, #10240	; 0x2800
 8002466:	461a      	mov	r2, r3
 8002468:	89fb      	ldrh	r3, [r7, #14]
 800246a:	0a1b      	lsrs	r3, r3, #8
 800246c:	b29b      	uxth	r3, r3
 800246e:	b2db      	uxtb	r3, r3
 8002470:	4619      	mov	r1, r3
 8002472:	4610      	mov	r0, r2
 8002474:	f7ff fdb6 	bl	8001fe4 <WIZCHIP_WRITE>
 8002478:	79fb      	ldrb	r3, [r7, #7]
 800247a:	009b      	lsls	r3, r3, #2
 800247c:	3301      	adds	r3, #1
 800247e:	00db      	lsls	r3, r3, #3
 8002480:	f503 5324 	add.w	r3, r3, #10496	; 0x2900
 8002484:	461a      	mov	r2, r3
 8002486:	89fb      	ldrh	r3, [r7, #14]
 8002488:	b2db      	uxtb	r3, r3
 800248a:	4619      	mov	r1, r3
 800248c:	4610      	mov	r0, r2
 800248e:	f7ff fda9 	bl	8001fe4 <WIZCHIP_WRITE>
 8002492:	e000      	b.n	8002496 <wiz_recv_data+0xb2>
 8002494:	bf00      	nop
 8002496:	3714      	adds	r7, #20
 8002498:	46bd      	mov	sp, r7
 800249a:	bd90      	pop	{r4, r7, pc}

0800249c <wizchip_cris_enter>:
 800249c:	b480      	push	{r7}
 800249e:	af00      	add	r7, sp, #0
 80024a0:	bf00      	nop
 80024a2:	46bd      	mov	sp, r7
 80024a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024a8:	4770      	bx	lr

080024aa <wizchip_cris_exit>:
 80024aa:	b480      	push	{r7}
 80024ac:	af00      	add	r7, sp, #0
 80024ae:	bf00      	nop
 80024b0:	46bd      	mov	sp, r7
 80024b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024b6:	4770      	bx	lr

080024b8 <wizchip_cs_select>:
 80024b8:	b480      	push	{r7}
 80024ba:	af00      	add	r7, sp, #0
 80024bc:	bf00      	nop
 80024be:	46bd      	mov	sp, r7
 80024c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024c4:	4770      	bx	lr

080024c6 <wizchip_cs_deselect>:
 80024c6:	b480      	push	{r7}
 80024c8:	af00      	add	r7, sp, #0
 80024ca:	bf00      	nop
 80024cc:	46bd      	mov	sp, r7
 80024ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024d2:	4770      	bx	lr

080024d4 <wizchip_bus_readdata>:
 80024d4:	b480      	push	{r7}
 80024d6:	b083      	sub	sp, #12
 80024d8:	af00      	add	r7, sp, #0
 80024da:	6078      	str	r0, [r7, #4]
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	781b      	ldrb	r3, [r3, #0]
 80024e0:	b2db      	uxtb	r3, r3
 80024e2:	4618      	mov	r0, r3
 80024e4:	370c      	adds	r7, #12
 80024e6:	46bd      	mov	sp, r7
 80024e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024ec:	4770      	bx	lr

080024ee <wizchip_bus_writedata>:
 80024ee:	b480      	push	{r7}
 80024f0:	b083      	sub	sp, #12
 80024f2:	af00      	add	r7, sp, #0
 80024f4:	6078      	str	r0, [r7, #4]
 80024f6:	460b      	mov	r3, r1
 80024f8:	70fb      	strb	r3, [r7, #3]
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	78fa      	ldrb	r2, [r7, #3]
 80024fe:	701a      	strb	r2, [r3, #0]
 8002500:	bf00      	nop
 8002502:	370c      	adds	r7, #12
 8002504:	46bd      	mov	sp, r7
 8002506:	f85d 7b04 	ldr.w	r7, [sp], #4
 800250a:	4770      	bx	lr

0800250c <wizchip_spi_readbyte>:
 800250c:	b480      	push	{r7}
 800250e:	af00      	add	r7, sp, #0
 8002510:	2300      	movs	r3, #0
 8002512:	4618      	mov	r0, r3
 8002514:	46bd      	mov	sp, r7
 8002516:	f85d 7b04 	ldr.w	r7, [sp], #4
 800251a:	4770      	bx	lr

0800251c <wizchip_spi_writebyte>:
 800251c:	b480      	push	{r7}
 800251e:	b083      	sub	sp, #12
 8002520:	af00      	add	r7, sp, #0
 8002522:	4603      	mov	r3, r0
 8002524:	71fb      	strb	r3, [r7, #7]
 8002526:	bf00      	nop
 8002528:	370c      	adds	r7, #12
 800252a:	46bd      	mov	sp, r7
 800252c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002530:	4770      	bx	lr
	...

08002534 <reg_wizchip_cs_cbfunc>:
 8002534:	b480      	push	{r7}
 8002536:	b083      	sub	sp, #12
 8002538:	af00      	add	r7, sp, #0
 800253a:	6078      	str	r0, [r7, #4]
 800253c:	6039      	str	r1, [r7, #0]
 800253e:	687b      	ldr	r3, [r7, #4]
 8002540:	2b00      	cmp	r3, #0
 8002542:	d002      	beq.n	800254a <reg_wizchip_cs_cbfunc+0x16>
 8002544:	683b      	ldr	r3, [r7, #0]
 8002546:	2b00      	cmp	r3, #0
 8002548:	d106      	bne.n	8002558 <reg_wizchip_cs_cbfunc+0x24>
 800254a:	4b0a      	ldr	r3, [pc, #40]	; (8002574 <reg_wizchip_cs_cbfunc+0x40>)
 800254c:	4a0a      	ldr	r2, [pc, #40]	; (8002578 <reg_wizchip_cs_cbfunc+0x44>)
 800254e:	615a      	str	r2, [r3, #20]
 8002550:	4b08      	ldr	r3, [pc, #32]	; (8002574 <reg_wizchip_cs_cbfunc+0x40>)
 8002552:	4a0a      	ldr	r2, [pc, #40]	; (800257c <reg_wizchip_cs_cbfunc+0x48>)
 8002554:	619a      	str	r2, [r3, #24]
 8002556:	e006      	b.n	8002566 <reg_wizchip_cs_cbfunc+0x32>
 8002558:	4a06      	ldr	r2, [pc, #24]	; (8002574 <reg_wizchip_cs_cbfunc+0x40>)
 800255a:	687b      	ldr	r3, [r7, #4]
 800255c:	6153      	str	r3, [r2, #20]
 800255e:	4a05      	ldr	r2, [pc, #20]	; (8002574 <reg_wizchip_cs_cbfunc+0x40>)
 8002560:	683b      	ldr	r3, [r7, #0]
 8002562:	6193      	str	r3, [r2, #24]
 8002564:	bf00      	nop
 8002566:	bf00      	nop
 8002568:	370c      	adds	r7, #12
 800256a:	46bd      	mov	sp, r7
 800256c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002570:	4770      	bx	lr
 8002572:	bf00      	nop
 8002574:	20000010 	.word	0x20000010
 8002578:	080024b9 	.word	0x080024b9
 800257c:	080024c7 	.word	0x080024c7

08002580 <reg_wizchip_spi_cbfunc>:
 8002580:	b480      	push	{r7}
 8002582:	b083      	sub	sp, #12
 8002584:	af00      	add	r7, sp, #0
 8002586:	6078      	str	r0, [r7, #4]
 8002588:	6039      	str	r1, [r7, #0]
 800258a:	bf00      	nop
 800258c:	4b0f      	ldr	r3, [pc, #60]	; (80025cc <reg_wizchip_spi_cbfunc+0x4c>)
 800258e:	881b      	ldrh	r3, [r3, #0]
 8002590:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002594:	2b00      	cmp	r3, #0
 8002596:	d0f9      	beq.n	800258c <reg_wizchip_spi_cbfunc+0xc>
 8002598:	687b      	ldr	r3, [r7, #4]
 800259a:	2b00      	cmp	r3, #0
 800259c:	d002      	beq.n	80025a4 <reg_wizchip_spi_cbfunc+0x24>
 800259e:	683b      	ldr	r3, [r7, #0]
 80025a0:	2b00      	cmp	r3, #0
 80025a2:	d106      	bne.n	80025b2 <reg_wizchip_spi_cbfunc+0x32>
 80025a4:	4b09      	ldr	r3, [pc, #36]	; (80025cc <reg_wizchip_spi_cbfunc+0x4c>)
 80025a6:	4a0a      	ldr	r2, [pc, #40]	; (80025d0 <reg_wizchip_spi_cbfunc+0x50>)
 80025a8:	61da      	str	r2, [r3, #28]
 80025aa:	4b08      	ldr	r3, [pc, #32]	; (80025cc <reg_wizchip_spi_cbfunc+0x4c>)
 80025ac:	4a09      	ldr	r2, [pc, #36]	; (80025d4 <reg_wizchip_spi_cbfunc+0x54>)
 80025ae:	621a      	str	r2, [r3, #32]
 80025b0:	e006      	b.n	80025c0 <reg_wizchip_spi_cbfunc+0x40>
 80025b2:	4a06      	ldr	r2, [pc, #24]	; (80025cc <reg_wizchip_spi_cbfunc+0x4c>)
 80025b4:	687b      	ldr	r3, [r7, #4]
 80025b6:	61d3      	str	r3, [r2, #28]
 80025b8:	4a04      	ldr	r2, [pc, #16]	; (80025cc <reg_wizchip_spi_cbfunc+0x4c>)
 80025ba:	683b      	ldr	r3, [r7, #0]
 80025bc:	6213      	str	r3, [r2, #32]
 80025be:	bf00      	nop
 80025c0:	bf00      	nop
 80025c2:	370c      	adds	r7, #12
 80025c4:	46bd      	mov	sp, r7
 80025c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025ca:	4770      	bx	lr
 80025cc:	20000010 	.word	0x20000010
 80025d0:	0800250d 	.word	0x0800250d
 80025d4:	0800251d 	.word	0x0800251d

080025d8 <ctlwizchip>:
 80025d8:	b590      	push	{r4, r7, lr}
 80025da:	b087      	sub	sp, #28
 80025dc:	af00      	add	r7, sp, #0
 80025de:	4603      	mov	r3, r0
 80025e0:	6039      	str	r1, [r7, #0]
 80025e2:	71fb      	strb	r3, [r7, #7]
 80025e4:	2300      	movs	r3, #0
 80025e6:	75fb      	strb	r3, [r7, #23]
 80025e8:	2300      	movs	r3, #0
 80025ea:	60fb      	str	r3, [r7, #12]
 80025ec:	2300      	movs	r3, #0
 80025ee:	613b      	str	r3, [r7, #16]
 80025f0:	79fb      	ldrb	r3, [r7, #7]
 80025f2:	2b0f      	cmp	r3, #15
 80025f4:	f200 80c2 	bhi.w	800277c <ctlwizchip+0x1a4>
 80025f8:	a201      	add	r2, pc, #4	; (adr r2, 8002600 <ctlwizchip+0x28>)
 80025fa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80025fe:	bf00      	nop
 8002600:	08002641 	.word	0x08002641
 8002604:	08002647 	.word	0x08002647
 8002608:	08002673 	.word	0x08002673
 800260c:	08002667 	.word	0x08002667
 8002610:	08002681 	.word	0x08002681
 8002614:	0800268d 	.word	0x0800268d
 8002618:	0800269b 	.word	0x0800269b
 800261c:	080026c1 	.word	0x080026c1
 8002620:	080026e7 	.word	0x080026e7
 8002624:	08002721 	.word	0x08002721
 8002628:	08002727 	.word	0x08002727
 800262c:	0800272f 	.word	0x0800272f
 8002630:	08002783 	.word	0x08002783
 8002634:	08002737 	.word	0x08002737
 8002638:	08002745 	.word	0x08002745
 800263c:	08002761 	.word	0x08002761
 8002640:	f000 f8a8 	bl	8002794 <wizchip_sw_reset>
 8002644:	e09e      	b.n	8002784 <ctlwizchip+0x1ac>
 8002646:	683b      	ldr	r3, [r7, #0]
 8002648:	2b00      	cmp	r3, #0
 800264a:	d004      	beq.n	8002656 <ctlwizchip+0x7e>
 800264c:	683b      	ldr	r3, [r7, #0]
 800264e:	60fb      	str	r3, [r7, #12]
 8002650:	68fb      	ldr	r3, [r7, #12]
 8002652:	3308      	adds	r3, #8
 8002654:	613b      	str	r3, [r7, #16]
 8002656:	68fb      	ldr	r3, [r7, #12]
 8002658:	693a      	ldr	r2, [r7, #16]
 800265a:	4611      	mov	r1, r2
 800265c:	4618      	mov	r0, r3
 800265e:	f000 f8e5 	bl	800282c <wizchip_init>
 8002662:	4603      	mov	r3, r0
 8002664:	e08f      	b.n	8002786 <ctlwizchip+0x1ae>
 8002666:	683b      	ldr	r3, [r7, #0]
 8002668:	881b      	ldrh	r3, [r3, #0]
 800266a:	4618      	mov	r0, r3
 800266c:	f000 f96a 	bl	8002944 <wizchip_clrinterrupt>
 8002670:	e088      	b.n	8002784 <ctlwizchip+0x1ac>
 8002672:	f000 f99b 	bl	80029ac <wizchip_getinterrupt>
 8002676:	4603      	mov	r3, r0
 8002678:	461a      	mov	r2, r3
 800267a:	683b      	ldr	r3, [r7, #0]
 800267c:	801a      	strh	r2, [r3, #0]
 800267e:	e081      	b.n	8002784 <ctlwizchip+0x1ac>
 8002680:	683b      	ldr	r3, [r7, #0]
 8002682:	881b      	ldrh	r3, [r3, #0]
 8002684:	4618      	mov	r0, r3
 8002686:	f000 f9b6 	bl	80029f6 <wizchip_setinterruptmask>
 800268a:	e07b      	b.n	8002784 <ctlwizchip+0x1ac>
 800268c:	f000 f9ce 	bl	8002a2c <wizchip_getinterruptmask>
 8002690:	4603      	mov	r3, r0
 8002692:	461a      	mov	r2, r3
 8002694:	683b      	ldr	r3, [r7, #0]
 8002696:	801a      	strh	r2, [r3, #0]
 8002698:	e074      	b.n	8002784 <ctlwizchip+0x1ac>
 800269a:	683b      	ldr	r3, [r7, #0]
 800269c:	881b      	ldrh	r3, [r3, #0]
 800269e:	0a1b      	lsrs	r3, r3, #8
 80026a0:	b29b      	uxth	r3, r3
 80026a2:	b2db      	uxtb	r3, r3
 80026a4:	4619      	mov	r1, r3
 80026a6:	f44f 5098 	mov.w	r0, #4864	; 0x1300
 80026aa:	f7ff fc9b 	bl	8001fe4 <WIZCHIP_WRITE>
 80026ae:	683b      	ldr	r3, [r7, #0]
 80026b0:	881b      	ldrh	r3, [r3, #0]
 80026b2:	b2db      	uxtb	r3, r3
 80026b4:	4619      	mov	r1, r3
 80026b6:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
 80026ba:	f7ff fc93 	bl	8001fe4 <WIZCHIP_WRITE>
 80026be:	e061      	b.n	8002784 <ctlwizchip+0x1ac>
 80026c0:	f44f 5098 	mov.w	r0, #4864	; 0x1300
 80026c4:	f7ff fc42 	bl	8001f4c <WIZCHIP_READ>
 80026c8:	4603      	mov	r3, r0
 80026ca:	b29b      	uxth	r3, r3
 80026cc:	021b      	lsls	r3, r3, #8
 80026ce:	b29c      	uxth	r4, r3
 80026d0:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
 80026d4:	f7ff fc3a 	bl	8001f4c <WIZCHIP_READ>
 80026d8:	4603      	mov	r3, r0
 80026da:	b29b      	uxth	r3, r3
 80026dc:	4423      	add	r3, r4
 80026de:	b29a      	uxth	r2, r3
 80026e0:	683b      	ldr	r3, [r7, #0]
 80026e2:	801a      	strh	r2, [r3, #0]
 80026e4:	e04e      	b.n	8002784 <ctlwizchip+0x1ac>
 80026e6:	4b2a      	ldr	r3, [pc, #168]	; (8002790 <ctlwizchip+0x1b8>)
 80026e8:	789a      	ldrb	r2, [r3, #2]
 80026ea:	683b      	ldr	r3, [r7, #0]
 80026ec:	701a      	strb	r2, [r3, #0]
 80026ee:	683b      	ldr	r3, [r7, #0]
 80026f0:	3301      	adds	r3, #1
 80026f2:	4a27      	ldr	r2, [pc, #156]	; (8002790 <ctlwizchip+0x1b8>)
 80026f4:	78d2      	ldrb	r2, [r2, #3]
 80026f6:	701a      	strb	r2, [r3, #0]
 80026f8:	683b      	ldr	r3, [r7, #0]
 80026fa:	3302      	adds	r3, #2
 80026fc:	4a24      	ldr	r2, [pc, #144]	; (8002790 <ctlwizchip+0x1b8>)
 80026fe:	7912      	ldrb	r2, [r2, #4]
 8002700:	701a      	strb	r2, [r3, #0]
 8002702:	683b      	ldr	r3, [r7, #0]
 8002704:	3303      	adds	r3, #3
 8002706:	4a22      	ldr	r2, [pc, #136]	; (8002790 <ctlwizchip+0x1b8>)
 8002708:	7952      	ldrb	r2, [r2, #5]
 800270a:	701a      	strb	r2, [r3, #0]
 800270c:	683b      	ldr	r3, [r7, #0]
 800270e:	3304      	adds	r3, #4
 8002710:	4a1f      	ldr	r2, [pc, #124]	; (8002790 <ctlwizchip+0x1b8>)
 8002712:	7992      	ldrb	r2, [r2, #6]
 8002714:	701a      	strb	r2, [r3, #0]
 8002716:	683b      	ldr	r3, [r7, #0]
 8002718:	3305      	adds	r3, #5
 800271a:	2200      	movs	r2, #0
 800271c:	701a      	strb	r2, [r3, #0]
 800271e:	e031      	b.n	8002784 <ctlwizchip+0x1ac>
 8002720:	f000 f9d6 	bl	8002ad0 <wizphy_reset>
 8002724:	e02e      	b.n	8002784 <ctlwizchip+0x1ac>
 8002726:	6838      	ldr	r0, [r7, #0]
 8002728:	f000 f9f9 	bl	8002b1e <wizphy_setphyconf>
 800272c:	e02a      	b.n	8002784 <ctlwizchip+0x1ac>
 800272e:	6838      	ldr	r0, [r7, #0]
 8002730:	f000 fa37 	bl	8002ba2 <wizphy_getphyconf>
 8002734:	e026      	b.n	8002784 <ctlwizchip+0x1ac>
 8002736:	683b      	ldr	r3, [r7, #0]
 8002738:	781b      	ldrb	r3, [r3, #0]
 800273a:	4618      	mov	r0, r3
 800273c:	f000 fa9a 	bl	8002c74 <wizphy_setphypmode>
 8002740:	4603      	mov	r3, r0
 8002742:	e020      	b.n	8002786 <ctlwizchip+0x1ae>
 8002744:	f000 f9ab 	bl	8002a9e <wizphy_getphypmode>
 8002748:	4603      	mov	r3, r0
 800274a:	75fb      	strb	r3, [r7, #23]
 800274c:	7dfb      	ldrb	r3, [r7, #23]
 800274e:	2bff      	cmp	r3, #255	; 0xff
 8002750:	d102      	bne.n	8002758 <ctlwizchip+0x180>
 8002752:	f04f 33ff 	mov.w	r3, #4294967295
 8002756:	e016      	b.n	8002786 <ctlwizchip+0x1ae>
 8002758:	683b      	ldr	r3, [r7, #0]
 800275a:	7dfa      	ldrb	r2, [r7, #23]
 800275c:	701a      	strb	r2, [r3, #0]
 800275e:	e011      	b.n	8002784 <ctlwizchip+0x1ac>
 8002760:	f000 f987 	bl	8002a72 <wizphy_getphylink>
 8002764:	4603      	mov	r3, r0
 8002766:	75fb      	strb	r3, [r7, #23]
 8002768:	7dfb      	ldrb	r3, [r7, #23]
 800276a:	2bff      	cmp	r3, #255	; 0xff
 800276c:	d102      	bne.n	8002774 <ctlwizchip+0x19c>
 800276e:	f04f 33ff 	mov.w	r3, #4294967295
 8002772:	e008      	b.n	8002786 <ctlwizchip+0x1ae>
 8002774:	683b      	ldr	r3, [r7, #0]
 8002776:	7dfa      	ldrb	r2, [r7, #23]
 8002778:	701a      	strb	r2, [r3, #0]
 800277a:	e003      	b.n	8002784 <ctlwizchip+0x1ac>
 800277c:	f04f 33ff 	mov.w	r3, #4294967295
 8002780:	e001      	b.n	8002786 <ctlwizchip+0x1ae>
 8002782:	bf00      	nop
 8002784:	2300      	movs	r3, #0
 8002786:	4618      	mov	r0, r3
 8002788:	371c      	adds	r7, #28
 800278a:	46bd      	mov	sp, r7
 800278c:	bd90      	pop	{r4, r7, pc}
 800278e:	bf00      	nop
 8002790:	20000010 	.word	0x20000010

08002794 <wizchip_sw_reset>:
 8002794:	b580      	push	{r7, lr}
 8002796:	b086      	sub	sp, #24
 8002798:	af00      	add	r7, sp, #0
 800279a:	1d3b      	adds	r3, r7, #4
 800279c:	2206      	movs	r2, #6
 800279e:	4619      	mov	r1, r3
 80027a0:	f44f 6010 	mov.w	r0, #2304	; 0x900
 80027a4:	f7ff fc6c 	bl	8002080 <WIZCHIP_READ_BUF>
 80027a8:	f107 0314 	add.w	r3, r7, #20
 80027ac:	2204      	movs	r2, #4
 80027ae:	4619      	mov	r1, r3
 80027b0:	f44f 7080 	mov.w	r0, #256	; 0x100
 80027b4:	f7ff fc64 	bl	8002080 <WIZCHIP_READ_BUF>
 80027b8:	f107 0310 	add.w	r3, r7, #16
 80027bc:	2204      	movs	r2, #4
 80027be:	4619      	mov	r1, r3
 80027c0:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 80027c4:	f7ff fc5c 	bl	8002080 <WIZCHIP_READ_BUF>
 80027c8:	f107 030c 	add.w	r3, r7, #12
 80027cc:	2204      	movs	r2, #4
 80027ce:	4619      	mov	r1, r3
 80027d0:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 80027d4:	f7ff fc54 	bl	8002080 <WIZCHIP_READ_BUF>
 80027d8:	2180      	movs	r1, #128	; 0x80
 80027da:	2000      	movs	r0, #0
 80027dc:	f7ff fc02 	bl	8001fe4 <WIZCHIP_WRITE>
 80027e0:	2000      	movs	r0, #0
 80027e2:	f7ff fbb3 	bl	8001f4c <WIZCHIP_READ>
 80027e6:	1d3b      	adds	r3, r7, #4
 80027e8:	2206      	movs	r2, #6
 80027ea:	4619      	mov	r1, r3
 80027ec:	f44f 6010 	mov.w	r0, #2304	; 0x900
 80027f0:	f7ff fca6 	bl	8002140 <WIZCHIP_WRITE_BUF>
 80027f4:	f107 0314 	add.w	r3, r7, #20
 80027f8:	2204      	movs	r2, #4
 80027fa:	4619      	mov	r1, r3
 80027fc:	f44f 7080 	mov.w	r0, #256	; 0x100
 8002800:	f7ff fc9e 	bl	8002140 <WIZCHIP_WRITE_BUF>
 8002804:	f107 0310 	add.w	r3, r7, #16
 8002808:	2204      	movs	r2, #4
 800280a:	4619      	mov	r1, r3
 800280c:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 8002810:	f7ff fc96 	bl	8002140 <WIZCHIP_WRITE_BUF>
 8002814:	f107 030c 	add.w	r3, r7, #12
 8002818:	2204      	movs	r2, #4
 800281a:	4619      	mov	r1, r3
 800281c:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 8002820:	f7ff fc8e 	bl	8002140 <WIZCHIP_WRITE_BUF>
 8002824:	bf00      	nop
 8002826:	3718      	adds	r7, #24
 8002828:	46bd      	mov	sp, r7
 800282a:	bd80      	pop	{r7, pc}

0800282c <wizchip_init>:
 800282c:	b580      	push	{r7, lr}
 800282e:	b084      	sub	sp, #16
 8002830:	af00      	add	r7, sp, #0
 8002832:	6078      	str	r0, [r7, #4]
 8002834:	6039      	str	r1, [r7, #0]
 8002836:	2300      	movs	r3, #0
 8002838:	73bb      	strb	r3, [r7, #14]
 800283a:	f7ff ffab 	bl	8002794 <wizchip_sw_reset>
 800283e:	687b      	ldr	r3, [r7, #4]
 8002840:	2b00      	cmp	r3, #0
 8002842:	d03b      	beq.n	80028bc <wizchip_init+0x90>
 8002844:	2300      	movs	r3, #0
 8002846:	73bb      	strb	r3, [r7, #14]
 8002848:	2300      	movs	r3, #0
 800284a:	73fb      	strb	r3, [r7, #15]
 800284c:	e015      	b.n	800287a <wizchip_init+0x4e>
 800284e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002852:	687a      	ldr	r2, [r7, #4]
 8002854:	4413      	add	r3, r2
 8002856:	781a      	ldrb	r2, [r3, #0]
 8002858:	7bbb      	ldrb	r3, [r7, #14]
 800285a:	4413      	add	r3, r2
 800285c:	b2db      	uxtb	r3, r3
 800285e:	73bb      	strb	r3, [r7, #14]
 8002860:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8002864:	2b10      	cmp	r3, #16
 8002866:	dd02      	ble.n	800286e <wizchip_init+0x42>
 8002868:	f04f 33ff 	mov.w	r3, #4294967295
 800286c:	e066      	b.n	800293c <wizchip_init+0x110>
 800286e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002872:	b2db      	uxtb	r3, r3
 8002874:	3301      	adds	r3, #1
 8002876:	b2db      	uxtb	r3, r3
 8002878:	73fb      	strb	r3, [r7, #15]
 800287a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800287e:	2b07      	cmp	r3, #7
 8002880:	dde5      	ble.n	800284e <wizchip_init+0x22>
 8002882:	2300      	movs	r3, #0
 8002884:	73fb      	strb	r3, [r7, #15]
 8002886:	e015      	b.n	80028b4 <wizchip_init+0x88>
 8002888:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800288c:	009b      	lsls	r3, r3, #2
 800288e:	3301      	adds	r3, #1
 8002890:	00db      	lsls	r3, r3, #3
 8002892:	f503 53f8 	add.w	r3, r3, #7936	; 0x1f00
 8002896:	4618      	mov	r0, r3
 8002898:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800289c:	687a      	ldr	r2, [r7, #4]
 800289e:	4413      	add	r3, r2
 80028a0:	781b      	ldrb	r3, [r3, #0]
 80028a2:	4619      	mov	r1, r3
 80028a4:	f7ff fb9e 	bl	8001fe4 <WIZCHIP_WRITE>
 80028a8:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80028ac:	b2db      	uxtb	r3, r3
 80028ae:	3301      	adds	r3, #1
 80028b0:	b2db      	uxtb	r3, r3
 80028b2:	73fb      	strb	r3, [r7, #15]
 80028b4:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80028b8:	2b07      	cmp	r3, #7
 80028ba:	dde5      	ble.n	8002888 <wizchip_init+0x5c>
 80028bc:	683b      	ldr	r3, [r7, #0]
 80028be:	2b00      	cmp	r3, #0
 80028c0:	d03b      	beq.n	800293a <wizchip_init+0x10e>
 80028c2:	2300      	movs	r3, #0
 80028c4:	73bb      	strb	r3, [r7, #14]
 80028c6:	2300      	movs	r3, #0
 80028c8:	73fb      	strb	r3, [r7, #15]
 80028ca:	e015      	b.n	80028f8 <wizchip_init+0xcc>
 80028cc:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80028d0:	683a      	ldr	r2, [r7, #0]
 80028d2:	4413      	add	r3, r2
 80028d4:	781a      	ldrb	r2, [r3, #0]
 80028d6:	7bbb      	ldrb	r3, [r7, #14]
 80028d8:	4413      	add	r3, r2
 80028da:	b2db      	uxtb	r3, r3
 80028dc:	73bb      	strb	r3, [r7, #14]
 80028de:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80028e2:	2b10      	cmp	r3, #16
 80028e4:	dd02      	ble.n	80028ec <wizchip_init+0xc0>
 80028e6:	f04f 33ff 	mov.w	r3, #4294967295
 80028ea:	e027      	b.n	800293c <wizchip_init+0x110>
 80028ec:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80028f0:	b2db      	uxtb	r3, r3
 80028f2:	3301      	adds	r3, #1
 80028f4:	b2db      	uxtb	r3, r3
 80028f6:	73fb      	strb	r3, [r7, #15]
 80028f8:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80028fc:	2b07      	cmp	r3, #7
 80028fe:	dde5      	ble.n	80028cc <wizchip_init+0xa0>
 8002900:	2300      	movs	r3, #0
 8002902:	73fb      	strb	r3, [r7, #15]
 8002904:	e015      	b.n	8002932 <wizchip_init+0x106>
 8002906:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800290a:	009b      	lsls	r3, r3, #2
 800290c:	3301      	adds	r3, #1
 800290e:	00db      	lsls	r3, r3, #3
 8002910:	f503 53f0 	add.w	r3, r3, #7680	; 0x1e00
 8002914:	4618      	mov	r0, r3
 8002916:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800291a:	683a      	ldr	r2, [r7, #0]
 800291c:	4413      	add	r3, r2
 800291e:	781b      	ldrb	r3, [r3, #0]
 8002920:	4619      	mov	r1, r3
 8002922:	f7ff fb5f 	bl	8001fe4 <WIZCHIP_WRITE>
 8002926:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800292a:	b2db      	uxtb	r3, r3
 800292c:	3301      	adds	r3, #1
 800292e:	b2db      	uxtb	r3, r3
 8002930:	73fb      	strb	r3, [r7, #15]
 8002932:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002936:	2b07      	cmp	r3, #7
 8002938:	dde5      	ble.n	8002906 <wizchip_init+0xda>
 800293a:	2300      	movs	r3, #0
 800293c:	4618      	mov	r0, r3
 800293e:	3710      	adds	r7, #16
 8002940:	46bd      	mov	sp, r7
 8002942:	bd80      	pop	{r7, pc}

08002944 <wizchip_clrinterrupt>:
 8002944:	b580      	push	{r7, lr}
 8002946:	b084      	sub	sp, #16
 8002948:	af00      	add	r7, sp, #0
 800294a:	4603      	mov	r3, r0
 800294c:	80fb      	strh	r3, [r7, #6]
 800294e:	88fb      	ldrh	r3, [r7, #6]
 8002950:	73fb      	strb	r3, [r7, #15]
 8002952:	88fb      	ldrh	r3, [r7, #6]
 8002954:	0a1b      	lsrs	r3, r3, #8
 8002956:	b29b      	uxth	r3, r3
 8002958:	73bb      	strb	r3, [r7, #14]
 800295a:	7bfb      	ldrb	r3, [r7, #15]
 800295c:	f023 030f 	bic.w	r3, r3, #15
 8002960:	b2db      	uxtb	r3, r3
 8002962:	4619      	mov	r1, r3
 8002964:	f44f 50a8 	mov.w	r0, #5376	; 0x1500
 8002968:	f7ff fb3c 	bl	8001fe4 <WIZCHIP_WRITE>
 800296c:	2300      	movs	r3, #0
 800296e:	73fb      	strb	r3, [r7, #15]
 8002970:	e014      	b.n	800299c <wizchip_clrinterrupt+0x58>
 8002972:	7bba      	ldrb	r2, [r7, #14]
 8002974:	7bfb      	ldrb	r3, [r7, #15]
 8002976:	fa42 f303 	asr.w	r3, r2, r3
 800297a:	f003 0301 	and.w	r3, r3, #1
 800297e:	2b00      	cmp	r3, #0
 8002980:	d009      	beq.n	8002996 <wizchip_clrinterrupt+0x52>
 8002982:	7bfb      	ldrb	r3, [r7, #15]
 8002984:	009b      	lsls	r3, r3, #2
 8002986:	3301      	adds	r3, #1
 8002988:	00db      	lsls	r3, r3, #3
 800298a:	f503 7300 	add.w	r3, r3, #512	; 0x200
 800298e:	211f      	movs	r1, #31
 8002990:	4618      	mov	r0, r3
 8002992:	f7ff fb27 	bl	8001fe4 <WIZCHIP_WRITE>
 8002996:	7bfb      	ldrb	r3, [r7, #15]
 8002998:	3301      	adds	r3, #1
 800299a:	73fb      	strb	r3, [r7, #15]
 800299c:	7bfb      	ldrb	r3, [r7, #15]
 800299e:	2b07      	cmp	r3, #7
 80029a0:	d9e7      	bls.n	8002972 <wizchip_clrinterrupt+0x2e>
 80029a2:	bf00      	nop
 80029a4:	bf00      	nop
 80029a6:	3710      	adds	r7, #16
 80029a8:	46bd      	mov	sp, r7
 80029aa:	bd80      	pop	{r7, pc}

080029ac <wizchip_getinterrupt>:
 80029ac:	b580      	push	{r7, lr}
 80029ae:	b082      	sub	sp, #8
 80029b0:	af00      	add	r7, sp, #0
 80029b2:	2300      	movs	r3, #0
 80029b4:	71fb      	strb	r3, [r7, #7]
 80029b6:	2300      	movs	r3, #0
 80029b8:	71bb      	strb	r3, [r7, #6]
 80029ba:	2300      	movs	r3, #0
 80029bc:	80bb      	strh	r3, [r7, #4]
 80029be:	f44f 50a8 	mov.w	r0, #5376	; 0x1500
 80029c2:	f7ff fac3 	bl	8001f4c <WIZCHIP_READ>
 80029c6:	4603      	mov	r3, r0
 80029c8:	f023 030f 	bic.w	r3, r3, #15
 80029cc:	71fb      	strb	r3, [r7, #7]
 80029ce:	f44f 50b8 	mov.w	r0, #5888	; 0x1700
 80029d2:	f7ff fabb 	bl	8001f4c <WIZCHIP_READ>
 80029d6:	4603      	mov	r3, r0
 80029d8:	71bb      	strb	r3, [r7, #6]
 80029da:	79bb      	ldrb	r3, [r7, #6]
 80029dc:	80bb      	strh	r3, [r7, #4]
 80029de:	88bb      	ldrh	r3, [r7, #4]
 80029e0:	021b      	lsls	r3, r3, #8
 80029e2:	b29a      	uxth	r2, r3
 80029e4:	79fb      	ldrb	r3, [r7, #7]
 80029e6:	b29b      	uxth	r3, r3
 80029e8:	4413      	add	r3, r2
 80029ea:	80bb      	strh	r3, [r7, #4]
 80029ec:	88bb      	ldrh	r3, [r7, #4]
 80029ee:	4618      	mov	r0, r3
 80029f0:	3708      	adds	r7, #8
 80029f2:	46bd      	mov	sp, r7
 80029f4:	bd80      	pop	{r7, pc}

080029f6 <wizchip_setinterruptmask>:
 80029f6:	b580      	push	{r7, lr}
 80029f8:	b084      	sub	sp, #16
 80029fa:	af00      	add	r7, sp, #0
 80029fc:	4603      	mov	r3, r0
 80029fe:	80fb      	strh	r3, [r7, #6]
 8002a00:	88fb      	ldrh	r3, [r7, #6]
 8002a02:	73fb      	strb	r3, [r7, #15]
 8002a04:	88fb      	ldrh	r3, [r7, #6]
 8002a06:	0a1b      	lsrs	r3, r3, #8
 8002a08:	b29b      	uxth	r3, r3
 8002a0a:	73bb      	strb	r3, [r7, #14]
 8002a0c:	7bfb      	ldrb	r3, [r7, #15]
 8002a0e:	4619      	mov	r1, r3
 8002a10:	f44f 50b0 	mov.w	r0, #5632	; 0x1600
 8002a14:	f7ff fae6 	bl	8001fe4 <WIZCHIP_WRITE>
 8002a18:	7bbb      	ldrb	r3, [r7, #14]
 8002a1a:	4619      	mov	r1, r3
 8002a1c:	f44f 50c0 	mov.w	r0, #6144	; 0x1800
 8002a20:	f7ff fae0 	bl	8001fe4 <WIZCHIP_WRITE>
 8002a24:	bf00      	nop
 8002a26:	3710      	adds	r7, #16
 8002a28:	46bd      	mov	sp, r7
 8002a2a:	bd80      	pop	{r7, pc}

08002a2c <wizchip_getinterruptmask>:
 8002a2c:	b580      	push	{r7, lr}
 8002a2e:	b082      	sub	sp, #8
 8002a30:	af00      	add	r7, sp, #0
 8002a32:	2300      	movs	r3, #0
 8002a34:	71fb      	strb	r3, [r7, #7]
 8002a36:	2300      	movs	r3, #0
 8002a38:	71bb      	strb	r3, [r7, #6]
 8002a3a:	2300      	movs	r3, #0
 8002a3c:	80bb      	strh	r3, [r7, #4]
 8002a3e:	f44f 50b0 	mov.w	r0, #5632	; 0x1600
 8002a42:	f7ff fa83 	bl	8001f4c <WIZCHIP_READ>
 8002a46:	4603      	mov	r3, r0
 8002a48:	71fb      	strb	r3, [r7, #7]
 8002a4a:	f44f 50c0 	mov.w	r0, #6144	; 0x1800
 8002a4e:	f7ff fa7d 	bl	8001f4c <WIZCHIP_READ>
 8002a52:	4603      	mov	r3, r0
 8002a54:	71bb      	strb	r3, [r7, #6]
 8002a56:	79bb      	ldrb	r3, [r7, #6]
 8002a58:	80bb      	strh	r3, [r7, #4]
 8002a5a:	88bb      	ldrh	r3, [r7, #4]
 8002a5c:	021b      	lsls	r3, r3, #8
 8002a5e:	b29a      	uxth	r2, r3
 8002a60:	79fb      	ldrb	r3, [r7, #7]
 8002a62:	b29b      	uxth	r3, r3
 8002a64:	4413      	add	r3, r2
 8002a66:	80bb      	strh	r3, [r7, #4]
 8002a68:	88bb      	ldrh	r3, [r7, #4]
 8002a6a:	4618      	mov	r0, r3
 8002a6c:	3708      	adds	r7, #8
 8002a6e:	46bd      	mov	sp, r7
 8002a70:	bd80      	pop	{r7, pc}

08002a72 <wizphy_getphylink>:
 8002a72:	b580      	push	{r7, lr}
 8002a74:	b082      	sub	sp, #8
 8002a76:	af00      	add	r7, sp, #0
 8002a78:	2300      	movs	r3, #0
 8002a7a:	71fb      	strb	r3, [r7, #7]
 8002a7c:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8002a80:	f7ff fa64 	bl	8001f4c <WIZCHIP_READ>
 8002a84:	4603      	mov	r3, r0
 8002a86:	f003 0301 	and.w	r3, r3, #1
 8002a8a:	2b00      	cmp	r3, #0
 8002a8c:	d001      	beq.n	8002a92 <wizphy_getphylink+0x20>
 8002a8e:	2301      	movs	r3, #1
 8002a90:	71fb      	strb	r3, [r7, #7]
 8002a92:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002a96:	4618      	mov	r0, r3
 8002a98:	3708      	adds	r7, #8
 8002a9a:	46bd      	mov	sp, r7
 8002a9c:	bd80      	pop	{r7, pc}

08002a9e <wizphy_getphypmode>:
 8002a9e:	b580      	push	{r7, lr}
 8002aa0:	b082      	sub	sp, #8
 8002aa2:	af00      	add	r7, sp, #0
 8002aa4:	2300      	movs	r3, #0
 8002aa6:	71fb      	strb	r3, [r7, #7]
 8002aa8:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8002aac:	f7ff fa4e 	bl	8001f4c <WIZCHIP_READ>
 8002ab0:	4603      	mov	r3, r0
 8002ab2:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8002ab6:	2b30      	cmp	r3, #48	; 0x30
 8002ab8:	d102      	bne.n	8002ac0 <wizphy_getphypmode+0x22>
 8002aba:	2301      	movs	r3, #1
 8002abc:	71fb      	strb	r3, [r7, #7]
 8002abe:	e001      	b.n	8002ac4 <wizphy_getphypmode+0x26>
 8002ac0:	2300      	movs	r3, #0
 8002ac2:	71fb      	strb	r3, [r7, #7]
 8002ac4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ac8:	4618      	mov	r0, r3
 8002aca:	3708      	adds	r7, #8
 8002acc:	46bd      	mov	sp, r7
 8002ace:	bd80      	pop	{r7, pc}

08002ad0 <wizphy_reset>:
 8002ad0:	b580      	push	{r7, lr}
 8002ad2:	b082      	sub	sp, #8
 8002ad4:	af00      	add	r7, sp, #0
 8002ad6:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8002ada:	f7ff fa37 	bl	8001f4c <WIZCHIP_READ>
 8002ade:	4603      	mov	r3, r0
 8002ae0:	71fb      	strb	r3, [r7, #7]
 8002ae2:	79fb      	ldrb	r3, [r7, #7]
 8002ae4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8002ae8:	71fb      	strb	r3, [r7, #7]
 8002aea:	79fb      	ldrb	r3, [r7, #7]
 8002aec:	4619      	mov	r1, r3
 8002aee:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8002af2:	f7ff fa77 	bl	8001fe4 <WIZCHIP_WRITE>
 8002af6:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8002afa:	f7ff fa27 	bl	8001f4c <WIZCHIP_READ>
 8002afe:	4603      	mov	r3, r0
 8002b00:	71fb      	strb	r3, [r7, #7]
 8002b02:	79fb      	ldrb	r3, [r7, #7]
 8002b04:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8002b08:	71fb      	strb	r3, [r7, #7]
 8002b0a:	79fb      	ldrb	r3, [r7, #7]
 8002b0c:	4619      	mov	r1, r3
 8002b0e:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8002b12:	f7ff fa67 	bl	8001fe4 <WIZCHIP_WRITE>
 8002b16:	bf00      	nop
 8002b18:	3708      	adds	r7, #8
 8002b1a:	46bd      	mov	sp, r7
 8002b1c:	bd80      	pop	{r7, pc}

08002b1e <wizphy_setphyconf>:
 8002b1e:	b580      	push	{r7, lr}
 8002b20:	b084      	sub	sp, #16
 8002b22:	af00      	add	r7, sp, #0
 8002b24:	6078      	str	r0, [r7, #4]
 8002b26:	2300      	movs	r3, #0
 8002b28:	73fb      	strb	r3, [r7, #15]
 8002b2a:	687b      	ldr	r3, [r7, #4]
 8002b2c:	781b      	ldrb	r3, [r3, #0]
 8002b2e:	2b01      	cmp	r3, #1
 8002b30:	d104      	bne.n	8002b3c <wizphy_setphyconf+0x1e>
 8002b32:	7bfb      	ldrb	r3, [r7, #15]
 8002b34:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002b38:	73fb      	strb	r3, [r7, #15]
 8002b3a:	e003      	b.n	8002b44 <wizphy_setphyconf+0x26>
 8002b3c:	7bfb      	ldrb	r3, [r7, #15]
 8002b3e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8002b42:	73fb      	strb	r3, [r7, #15]
 8002b44:	687b      	ldr	r3, [r7, #4]
 8002b46:	785b      	ldrb	r3, [r3, #1]
 8002b48:	2b01      	cmp	r3, #1
 8002b4a:	d104      	bne.n	8002b56 <wizphy_setphyconf+0x38>
 8002b4c:	7bfb      	ldrb	r3, [r7, #15]
 8002b4e:	f043 0338 	orr.w	r3, r3, #56	; 0x38
 8002b52:	73fb      	strb	r3, [r7, #15]
 8002b54:	e019      	b.n	8002b8a <wizphy_setphyconf+0x6c>
 8002b56:	687b      	ldr	r3, [r7, #4]
 8002b58:	78db      	ldrb	r3, [r3, #3]
 8002b5a:	2b01      	cmp	r3, #1
 8002b5c:	d10d      	bne.n	8002b7a <wizphy_setphyconf+0x5c>
 8002b5e:	687b      	ldr	r3, [r7, #4]
 8002b60:	789b      	ldrb	r3, [r3, #2]
 8002b62:	2b01      	cmp	r3, #1
 8002b64:	d104      	bne.n	8002b70 <wizphy_setphyconf+0x52>
 8002b66:	7bfb      	ldrb	r3, [r7, #15]
 8002b68:	f043 0318 	orr.w	r3, r3, #24
 8002b6c:	73fb      	strb	r3, [r7, #15]
 8002b6e:	e00c      	b.n	8002b8a <wizphy_setphyconf+0x6c>
 8002b70:	7bfb      	ldrb	r3, [r7, #15]
 8002b72:	f043 0308 	orr.w	r3, r3, #8
 8002b76:	73fb      	strb	r3, [r7, #15]
 8002b78:	e007      	b.n	8002b8a <wizphy_setphyconf+0x6c>
 8002b7a:	687b      	ldr	r3, [r7, #4]
 8002b7c:	789b      	ldrb	r3, [r3, #2]
 8002b7e:	2b01      	cmp	r3, #1
 8002b80:	d103      	bne.n	8002b8a <wizphy_setphyconf+0x6c>
 8002b82:	7bfb      	ldrb	r3, [r7, #15]
 8002b84:	f043 0310 	orr.w	r3, r3, #16
 8002b88:	73fb      	strb	r3, [r7, #15]
 8002b8a:	7bfb      	ldrb	r3, [r7, #15]
 8002b8c:	4619      	mov	r1, r3
 8002b8e:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8002b92:	f7ff fa27 	bl	8001fe4 <WIZCHIP_WRITE>
 8002b96:	f7ff ff9b 	bl	8002ad0 <wizphy_reset>
 8002b9a:	bf00      	nop
 8002b9c:	3710      	adds	r7, #16
 8002b9e:	46bd      	mov	sp, r7
 8002ba0:	bd80      	pop	{r7, pc}

08002ba2 <wizphy_getphyconf>:
 8002ba2:	b580      	push	{r7, lr}
 8002ba4:	b084      	sub	sp, #16
 8002ba6:	af00      	add	r7, sp, #0
 8002ba8:	6078      	str	r0, [r7, #4]
 8002baa:	2300      	movs	r3, #0
 8002bac:	73fb      	strb	r3, [r7, #15]
 8002bae:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8002bb2:	f7ff f9cb 	bl	8001f4c <WIZCHIP_READ>
 8002bb6:	4603      	mov	r3, r0
 8002bb8:	73fb      	strb	r3, [r7, #15]
 8002bba:	7bfb      	ldrb	r3, [r7, #15]
 8002bbc:	119b      	asrs	r3, r3, #6
 8002bbe:	b2db      	uxtb	r3, r3
 8002bc0:	f003 0301 	and.w	r3, r3, #1
 8002bc4:	b2da      	uxtb	r2, r3
 8002bc6:	687b      	ldr	r3, [r7, #4]
 8002bc8:	701a      	strb	r2, [r3, #0]
 8002bca:	7bfb      	ldrb	r3, [r7, #15]
 8002bcc:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8002bd0:	2b20      	cmp	r3, #32
 8002bd2:	d001      	beq.n	8002bd8 <wizphy_getphyconf+0x36>
 8002bd4:	2b38      	cmp	r3, #56	; 0x38
 8002bd6:	d103      	bne.n	8002be0 <wizphy_getphyconf+0x3e>
 8002bd8:	687b      	ldr	r3, [r7, #4]
 8002bda:	2201      	movs	r2, #1
 8002bdc:	705a      	strb	r2, [r3, #1]
 8002bde:	e003      	b.n	8002be8 <wizphy_getphyconf+0x46>
 8002be0:	687b      	ldr	r3, [r7, #4]
 8002be2:	2200      	movs	r2, #0
 8002be4:	705a      	strb	r2, [r3, #1]
 8002be6:	bf00      	nop
 8002be8:	7bfb      	ldrb	r3, [r7, #15]
 8002bea:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8002bee:	3b10      	subs	r3, #16
 8002bf0:	2b10      	cmp	r3, #16
 8002bf2:	bf8c      	ite	hi
 8002bf4:	2201      	movhi	r2, #1
 8002bf6:	2200      	movls	r2, #0
 8002bf8:	b2d2      	uxtb	r2, r2
 8002bfa:	2a00      	cmp	r2, #0
 8002bfc:	d111      	bne.n	8002c22 <wizphy_getphyconf+0x80>
 8002bfe:	2201      	movs	r2, #1
 8002c00:	fa02 f303 	lsl.w	r3, r2, r3
 8002c04:	f003 3301 	and.w	r3, r3, #16843009	; 0x1010101
 8002c08:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8002c0c:	2b00      	cmp	r3, #0
 8002c0e:	bf14      	ite	ne
 8002c10:	2301      	movne	r3, #1
 8002c12:	2300      	moveq	r3, #0
 8002c14:	b2db      	uxtb	r3, r3
 8002c16:	2b00      	cmp	r3, #0
 8002c18:	d003      	beq.n	8002c22 <wizphy_getphyconf+0x80>
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	2201      	movs	r2, #1
 8002c1e:	709a      	strb	r2, [r3, #2]
 8002c20:	e003      	b.n	8002c2a <wizphy_getphyconf+0x88>
 8002c22:	687b      	ldr	r3, [r7, #4]
 8002c24:	2200      	movs	r2, #0
 8002c26:	709a      	strb	r2, [r3, #2]
 8002c28:	bf00      	nop
 8002c2a:	7bfb      	ldrb	r3, [r7, #15]
 8002c2c:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8002c30:	3b08      	subs	r3, #8
 8002c32:	2b18      	cmp	r3, #24
 8002c34:	bf8c      	ite	hi
 8002c36:	2201      	movhi	r2, #1
 8002c38:	2200      	movls	r2, #0
 8002c3a:	b2d2      	uxtb	r2, r2
 8002c3c:	2a00      	cmp	r2, #0
 8002c3e:	d111      	bne.n	8002c64 <wizphy_getphyconf+0xc2>
 8002c40:	2201      	movs	r2, #1
 8002c42:	fa02 f303 	lsl.w	r3, r2, r3
 8002c46:	f003 3301 	and.w	r3, r3, #16843009	; 0x1010101
 8002c4a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	bf14      	ite	ne
 8002c52:	2301      	movne	r3, #1
 8002c54:	2300      	moveq	r3, #0
 8002c56:	b2db      	uxtb	r3, r3
 8002c58:	2b00      	cmp	r3, #0
 8002c5a:	d003      	beq.n	8002c64 <wizphy_getphyconf+0xc2>
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	2201      	movs	r2, #1
 8002c60:	70da      	strb	r2, [r3, #3]
 8002c62:	e003      	b.n	8002c6c <wizphy_getphyconf+0xca>
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	2200      	movs	r2, #0
 8002c68:	70da      	strb	r2, [r3, #3]
 8002c6a:	bf00      	nop
 8002c6c:	bf00      	nop
 8002c6e:	3710      	adds	r7, #16
 8002c70:	46bd      	mov	sp, r7
 8002c72:	bd80      	pop	{r7, pc}

08002c74 <wizphy_setphypmode>:
 8002c74:	b580      	push	{r7, lr}
 8002c76:	b084      	sub	sp, #16
 8002c78:	af00      	add	r7, sp, #0
 8002c7a:	4603      	mov	r3, r0
 8002c7c:	71fb      	strb	r3, [r7, #7]
 8002c7e:	2300      	movs	r3, #0
 8002c80:	73fb      	strb	r3, [r7, #15]
 8002c82:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8002c86:	f7ff f961 	bl	8001f4c <WIZCHIP_READ>
 8002c8a:	4603      	mov	r3, r0
 8002c8c:	73fb      	strb	r3, [r7, #15]
 8002c8e:	7bfb      	ldrb	r3, [r7, #15]
 8002c90:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002c94:	2b00      	cmp	r3, #0
 8002c96:	d102      	bne.n	8002c9e <wizphy_setphypmode+0x2a>
 8002c98:	f04f 33ff 	mov.w	r3, #4294967295
 8002c9c:	e030      	b.n	8002d00 <wizphy_setphypmode+0x8c>
 8002c9e:	7bfb      	ldrb	r3, [r7, #15]
 8002ca0:	f023 0338 	bic.w	r3, r3, #56	; 0x38
 8002ca4:	73fb      	strb	r3, [r7, #15]
 8002ca6:	79fb      	ldrb	r3, [r7, #7]
 8002ca8:	2b01      	cmp	r3, #1
 8002caa:	d104      	bne.n	8002cb6 <wizphy_setphypmode+0x42>
 8002cac:	7bfb      	ldrb	r3, [r7, #15]
 8002cae:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 8002cb2:	73fb      	strb	r3, [r7, #15]
 8002cb4:	e003      	b.n	8002cbe <wizphy_setphypmode+0x4a>
 8002cb6:	7bfb      	ldrb	r3, [r7, #15]
 8002cb8:	f043 0338 	orr.w	r3, r3, #56	; 0x38
 8002cbc:	73fb      	strb	r3, [r7, #15]
 8002cbe:	7bfb      	ldrb	r3, [r7, #15]
 8002cc0:	4619      	mov	r1, r3
 8002cc2:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8002cc6:	f7ff f98d 	bl	8001fe4 <WIZCHIP_WRITE>
 8002cca:	f7ff ff01 	bl	8002ad0 <wizphy_reset>
 8002cce:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8002cd2:	f7ff f93b 	bl	8001f4c <WIZCHIP_READ>
 8002cd6:	4603      	mov	r3, r0
 8002cd8:	73fb      	strb	r3, [r7, #15]
 8002cda:	79fb      	ldrb	r3, [r7, #7]
 8002cdc:	2b01      	cmp	r3, #1
 8002cde:	d106      	bne.n	8002cee <wizphy_setphypmode+0x7a>
 8002ce0:	7bfb      	ldrb	r3, [r7, #15]
 8002ce2:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8002ce6:	2b00      	cmp	r3, #0
 8002ce8:	d008      	beq.n	8002cfc <wizphy_setphypmode+0x88>
 8002cea:	2300      	movs	r3, #0
 8002cec:	e008      	b.n	8002d00 <wizphy_setphypmode+0x8c>
 8002cee:	7bfb      	ldrb	r3, [r7, #15]
 8002cf0:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8002cf4:	2b00      	cmp	r3, #0
 8002cf6:	d001      	beq.n	8002cfc <wizphy_setphypmode+0x88>
 8002cf8:	2300      	movs	r3, #0
 8002cfa:	e001      	b.n	8002d00 <wizphy_setphypmode+0x8c>
 8002cfc:	f04f 33ff 	mov.w	r3, #4294967295
 8002d00:	4618      	mov	r0, r3
 8002d02:	3710      	adds	r7, #16
 8002d04:	46bd      	mov	sp, r7
 8002d06:	bd80      	pop	{r7, pc}

08002d08 <wizchip_setnetinfo>:
 8002d08:	b580      	push	{r7, lr}
 8002d0a:	b082      	sub	sp, #8
 8002d0c:	af00      	add	r7, sp, #0
 8002d0e:	6078      	str	r0, [r7, #4]
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	2206      	movs	r2, #6
 8002d14:	4619      	mov	r1, r3
 8002d16:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8002d1a:	f7ff fa11 	bl	8002140 <WIZCHIP_WRITE_BUF>
 8002d1e:	687b      	ldr	r3, [r7, #4]
 8002d20:	330e      	adds	r3, #14
 8002d22:	2204      	movs	r2, #4
 8002d24:	4619      	mov	r1, r3
 8002d26:	f44f 7080 	mov.w	r0, #256	; 0x100
 8002d2a:	f7ff fa09 	bl	8002140 <WIZCHIP_WRITE_BUF>
 8002d2e:	687b      	ldr	r3, [r7, #4]
 8002d30:	330a      	adds	r3, #10
 8002d32:	2204      	movs	r2, #4
 8002d34:	4619      	mov	r1, r3
 8002d36:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 8002d3a:	f7ff fa01 	bl	8002140 <WIZCHIP_WRITE_BUF>
 8002d3e:	687b      	ldr	r3, [r7, #4]
 8002d40:	3306      	adds	r3, #6
 8002d42:	2204      	movs	r2, #4
 8002d44:	4619      	mov	r1, r3
 8002d46:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 8002d4a:	f7ff f9f9 	bl	8002140 <WIZCHIP_WRITE_BUF>
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	7c9a      	ldrb	r2, [r3, #18]
 8002d52:	4b0b      	ldr	r3, [pc, #44]	; (8002d80 <wizchip_setnetinfo+0x78>)
 8002d54:	701a      	strb	r2, [r3, #0]
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	7cda      	ldrb	r2, [r3, #19]
 8002d5a:	4b09      	ldr	r3, [pc, #36]	; (8002d80 <wizchip_setnetinfo+0x78>)
 8002d5c:	705a      	strb	r2, [r3, #1]
 8002d5e:	687b      	ldr	r3, [r7, #4]
 8002d60:	7d1a      	ldrb	r2, [r3, #20]
 8002d62:	4b07      	ldr	r3, [pc, #28]	; (8002d80 <wizchip_setnetinfo+0x78>)
 8002d64:	709a      	strb	r2, [r3, #2]
 8002d66:	687b      	ldr	r3, [r7, #4]
 8002d68:	7d5a      	ldrb	r2, [r3, #21]
 8002d6a:	4b05      	ldr	r3, [pc, #20]	; (8002d80 <wizchip_setnetinfo+0x78>)
 8002d6c:	70da      	strb	r2, [r3, #3]
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	7d9a      	ldrb	r2, [r3, #22]
 8002d72:	4b04      	ldr	r3, [pc, #16]	; (8002d84 <wizchip_setnetinfo+0x7c>)
 8002d74:	701a      	strb	r2, [r3, #0]
 8002d76:	bf00      	nop
 8002d78:	3708      	adds	r7, #8
 8002d7a:	46bd      	mov	sp, r7
 8002d7c:	bd80      	pop	{r7, pc}
 8002d7e:	bf00      	nop
 8002d80:	20000080 	.word	0x20000080
 8002d84:	20000084 	.word	0x20000084

08002d88 <wizchip_getnetinfo>:
 8002d88:	b580      	push	{r7, lr}
 8002d8a:	b082      	sub	sp, #8
 8002d8c:	af00      	add	r7, sp, #0
 8002d8e:	6078      	str	r0, [r7, #4]
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	2206      	movs	r2, #6
 8002d94:	4619      	mov	r1, r3
 8002d96:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8002d9a:	f7ff f971 	bl	8002080 <WIZCHIP_READ_BUF>
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	330e      	adds	r3, #14
 8002da2:	2204      	movs	r2, #4
 8002da4:	4619      	mov	r1, r3
 8002da6:	f44f 7080 	mov.w	r0, #256	; 0x100
 8002daa:	f7ff f969 	bl	8002080 <WIZCHIP_READ_BUF>
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	330a      	adds	r3, #10
 8002db2:	2204      	movs	r2, #4
 8002db4:	4619      	mov	r1, r3
 8002db6:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 8002dba:	f7ff f961 	bl	8002080 <WIZCHIP_READ_BUF>
 8002dbe:	687b      	ldr	r3, [r7, #4]
 8002dc0:	3306      	adds	r3, #6
 8002dc2:	2204      	movs	r2, #4
 8002dc4:	4619      	mov	r1, r3
 8002dc6:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 8002dca:	f7ff f959 	bl	8002080 <WIZCHIP_READ_BUF>
 8002dce:	4b0c      	ldr	r3, [pc, #48]	; (8002e00 <wizchip_getnetinfo+0x78>)
 8002dd0:	781a      	ldrb	r2, [r3, #0]
 8002dd2:	687b      	ldr	r3, [r7, #4]
 8002dd4:	749a      	strb	r2, [r3, #18]
 8002dd6:	4b0a      	ldr	r3, [pc, #40]	; (8002e00 <wizchip_getnetinfo+0x78>)
 8002dd8:	785a      	ldrb	r2, [r3, #1]
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	74da      	strb	r2, [r3, #19]
 8002dde:	4b08      	ldr	r3, [pc, #32]	; (8002e00 <wizchip_getnetinfo+0x78>)
 8002de0:	789a      	ldrb	r2, [r3, #2]
 8002de2:	687b      	ldr	r3, [r7, #4]
 8002de4:	751a      	strb	r2, [r3, #20]
 8002de6:	4b06      	ldr	r3, [pc, #24]	; (8002e00 <wizchip_getnetinfo+0x78>)
 8002de8:	78da      	ldrb	r2, [r3, #3]
 8002dea:	687b      	ldr	r3, [r7, #4]
 8002dec:	755a      	strb	r2, [r3, #21]
 8002dee:	4b05      	ldr	r3, [pc, #20]	; (8002e04 <wizchip_getnetinfo+0x7c>)
 8002df0:	781a      	ldrb	r2, [r3, #0]
 8002df2:	687b      	ldr	r3, [r7, #4]
 8002df4:	759a      	strb	r2, [r3, #22]
 8002df6:	bf00      	nop
 8002df8:	3708      	adds	r7, #8
 8002dfa:	46bd      	mov	sp, r7
 8002dfc:	bd80      	pop	{r7, pc}
 8002dfe:	bf00      	nop
 8002e00:	20000080 	.word	0x20000080
 8002e04:	20000084 	.word	0x20000084

08002e08 <Reset_Handler>:
 8002e08:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002e40 <LoopForever+0x2>
 8002e0c:	480d      	ldr	r0, [pc, #52]	; (8002e44 <LoopForever+0x6>)
 8002e0e:	490e      	ldr	r1, [pc, #56]	; (8002e48 <LoopForever+0xa>)
 8002e10:	4a0e      	ldr	r2, [pc, #56]	; (8002e4c <LoopForever+0xe>)
 8002e12:	2300      	movs	r3, #0
 8002e14:	e002      	b.n	8002e1c <LoopCopyDataInit>

08002e16 <CopyDataInit>:
 8002e16:	58d4      	ldr	r4, [r2, r3]
 8002e18:	50c4      	str	r4, [r0, r3]
 8002e1a:	3304      	adds	r3, #4

08002e1c <LoopCopyDataInit>:
 8002e1c:	18c4      	adds	r4, r0, r3
 8002e1e:	428c      	cmp	r4, r1
 8002e20:	d3f9      	bcc.n	8002e16 <CopyDataInit>
 8002e22:	4a0b      	ldr	r2, [pc, #44]	; (8002e50 <LoopForever+0x12>)
 8002e24:	4c0b      	ldr	r4, [pc, #44]	; (8002e54 <LoopForever+0x16>)
 8002e26:	2300      	movs	r3, #0
 8002e28:	e001      	b.n	8002e2e <LoopFillZerobss>

08002e2a <FillZerobss>:
 8002e2a:	6013      	str	r3, [r2, #0]
 8002e2c:	3204      	adds	r2, #4

08002e2e <LoopFillZerobss>:
 8002e2e:	42a2      	cmp	r2, r4
 8002e30:	d3fb      	bcc.n	8002e2a <FillZerobss>
 8002e32:	f7ff f879 	bl	8001f28 <SystemInit>
 8002e36:	f003 fe35 	bl	8006aa4 <__libc_init_array>
 8002e3a:	f7fd fd61 	bl	8000900 <main>

08002e3e <LoopForever>:
 8002e3e:	e7fe      	b.n	8002e3e <LoopForever>
 8002e40:	20004000 	.word	0x20004000
 8002e44:	20000000 	.word	0x20000000
 8002e48:	20000044 	.word	0x20000044
 8002e4c:	08006d08 	.word	0x08006d08
 8002e50:	20000044 	.word	0x20000044
 8002e54:	200015a4 	.word	0x200015a4

08002e58 <ADC1_IRQHandler>:
 8002e58:	e7fe      	b.n	8002e58 <ADC1_IRQHandler>
	...

08002e5c <HAL_Init>:
 8002e5c:	b580      	push	{r7, lr}
 8002e5e:	af00      	add	r7, sp, #0
 8002e60:	4b08      	ldr	r3, [pc, #32]	; (8002e84 <HAL_Init+0x28>)
 8002e62:	681b      	ldr	r3, [r3, #0]
 8002e64:	4a07      	ldr	r2, [pc, #28]	; (8002e84 <HAL_Init+0x28>)
 8002e66:	f043 0310 	orr.w	r3, r3, #16
 8002e6a:	6013      	str	r3, [r2, #0]
 8002e6c:	2003      	movs	r0, #3
 8002e6e:	f000 f94f 	bl	8003110 <HAL_NVIC_SetPriorityGrouping>
 8002e72:	2000      	movs	r0, #0
 8002e74:	f000 f808 	bl	8002e88 <HAL_InitTick>
 8002e78:	f7fe febe 	bl	8001bf8 <HAL_MspInit>
 8002e7c:	2300      	movs	r3, #0
 8002e7e:	4618      	mov	r0, r3
 8002e80:	bd80      	pop	{r7, pc}
 8002e82:	bf00      	nop
 8002e84:	40022000 	.word	0x40022000

08002e88 <HAL_InitTick>:
 8002e88:	b580      	push	{r7, lr}
 8002e8a:	b082      	sub	sp, #8
 8002e8c:	af00      	add	r7, sp, #0
 8002e8e:	6078      	str	r0, [r7, #4]
 8002e90:	4b12      	ldr	r3, [pc, #72]	; (8002edc <HAL_InitTick+0x54>)
 8002e92:	681a      	ldr	r2, [r3, #0]
 8002e94:	4b12      	ldr	r3, [pc, #72]	; (8002ee0 <HAL_InitTick+0x58>)
 8002e96:	781b      	ldrb	r3, [r3, #0]
 8002e98:	4619      	mov	r1, r3
 8002e9a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002e9e:	fbb3 f3f1 	udiv	r3, r3, r1
 8002ea2:	fbb2 f3f3 	udiv	r3, r2, r3
 8002ea6:	4618      	mov	r0, r3
 8002ea8:	f000 f967 	bl	800317a <HAL_SYSTICK_Config>
 8002eac:	4603      	mov	r3, r0
 8002eae:	2b00      	cmp	r3, #0
 8002eb0:	d001      	beq.n	8002eb6 <HAL_InitTick+0x2e>
 8002eb2:	2301      	movs	r3, #1
 8002eb4:	e00e      	b.n	8002ed4 <HAL_InitTick+0x4c>
 8002eb6:	687b      	ldr	r3, [r7, #4]
 8002eb8:	2b0f      	cmp	r3, #15
 8002eba:	d80a      	bhi.n	8002ed2 <HAL_InitTick+0x4a>
 8002ebc:	2200      	movs	r2, #0
 8002ebe:	6879      	ldr	r1, [r7, #4]
 8002ec0:	f04f 30ff 	mov.w	r0, #4294967295
 8002ec4:	f000 f92f 	bl	8003126 <HAL_NVIC_SetPriority>
 8002ec8:	4a06      	ldr	r2, [pc, #24]	; (8002ee4 <HAL_InitTick+0x5c>)
 8002eca:	687b      	ldr	r3, [r7, #4]
 8002ecc:	6013      	str	r3, [r2, #0]
 8002ece:	2300      	movs	r3, #0
 8002ed0:	e000      	b.n	8002ed4 <HAL_InitTick+0x4c>
 8002ed2:	2301      	movs	r3, #1
 8002ed4:	4618      	mov	r0, r3
 8002ed6:	3708      	adds	r7, #8
 8002ed8:	46bd      	mov	sp, r7
 8002eda:	bd80      	pop	{r7, pc}
 8002edc:	2000000c 	.word	0x2000000c
 8002ee0:	20000040 	.word	0x20000040
 8002ee4:	2000003c 	.word	0x2000003c

08002ee8 <HAL_IncTick>:
 8002ee8:	b480      	push	{r7}
 8002eea:	af00      	add	r7, sp, #0
 8002eec:	4b06      	ldr	r3, [pc, #24]	; (8002f08 <HAL_IncTick+0x20>)
 8002eee:	781b      	ldrb	r3, [r3, #0]
 8002ef0:	461a      	mov	r2, r3
 8002ef2:	4b06      	ldr	r3, [pc, #24]	; (8002f0c <HAL_IncTick+0x24>)
 8002ef4:	681b      	ldr	r3, [r3, #0]
 8002ef6:	4413      	add	r3, r2
 8002ef8:	4a04      	ldr	r2, [pc, #16]	; (8002f0c <HAL_IncTick+0x24>)
 8002efa:	6013      	str	r3, [r2, #0]
 8002efc:	bf00      	nop
 8002efe:	46bd      	mov	sp, r7
 8002f00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f04:	4770      	bx	lr
 8002f06:	bf00      	nop
 8002f08:	20000040 	.word	0x20000040
 8002f0c:	200015a0 	.word	0x200015a0

08002f10 <HAL_GetTick>:
 8002f10:	b480      	push	{r7}
 8002f12:	af00      	add	r7, sp, #0
 8002f14:	4b03      	ldr	r3, [pc, #12]	; (8002f24 <HAL_GetTick+0x14>)
 8002f16:	681b      	ldr	r3, [r3, #0]
 8002f18:	4618      	mov	r0, r3
 8002f1a:	46bd      	mov	sp, r7
 8002f1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f20:	4770      	bx	lr
 8002f22:	bf00      	nop
 8002f24:	200015a0 	.word	0x200015a0

08002f28 <HAL_Delay>:
 8002f28:	b580      	push	{r7, lr}
 8002f2a:	b084      	sub	sp, #16
 8002f2c:	af00      	add	r7, sp, #0
 8002f2e:	6078      	str	r0, [r7, #4]
 8002f30:	f7ff ffee 	bl	8002f10 <HAL_GetTick>
 8002f34:	60b8      	str	r0, [r7, #8]
 8002f36:	687b      	ldr	r3, [r7, #4]
 8002f38:	60fb      	str	r3, [r7, #12]
 8002f3a:	68fb      	ldr	r3, [r7, #12]
 8002f3c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002f40:	d005      	beq.n	8002f4e <HAL_Delay+0x26>
 8002f42:	4b0a      	ldr	r3, [pc, #40]	; (8002f6c <HAL_Delay+0x44>)
 8002f44:	781b      	ldrb	r3, [r3, #0]
 8002f46:	461a      	mov	r2, r3
 8002f48:	68fb      	ldr	r3, [r7, #12]
 8002f4a:	4413      	add	r3, r2
 8002f4c:	60fb      	str	r3, [r7, #12]
 8002f4e:	bf00      	nop
 8002f50:	f7ff ffde 	bl	8002f10 <HAL_GetTick>
 8002f54:	4602      	mov	r2, r0
 8002f56:	68bb      	ldr	r3, [r7, #8]
 8002f58:	1ad3      	subs	r3, r2, r3
 8002f5a:	68fa      	ldr	r2, [r7, #12]
 8002f5c:	429a      	cmp	r2, r3
 8002f5e:	d8f7      	bhi.n	8002f50 <HAL_Delay+0x28>
 8002f60:	bf00      	nop
 8002f62:	bf00      	nop
 8002f64:	3710      	adds	r7, #16
 8002f66:	46bd      	mov	sp, r7
 8002f68:	bd80      	pop	{r7, pc}
 8002f6a:	bf00      	nop
 8002f6c:	20000040 	.word	0x20000040

08002f70 <__NVIC_SetPriorityGrouping>:
 8002f70:	b480      	push	{r7}
 8002f72:	b085      	sub	sp, #20
 8002f74:	af00      	add	r7, sp, #0
 8002f76:	6078      	str	r0, [r7, #4]
 8002f78:	687b      	ldr	r3, [r7, #4]
 8002f7a:	f003 0307 	and.w	r3, r3, #7
 8002f7e:	60fb      	str	r3, [r7, #12]
 8002f80:	4b0c      	ldr	r3, [pc, #48]	; (8002fb4 <__NVIC_SetPriorityGrouping+0x44>)
 8002f82:	68db      	ldr	r3, [r3, #12]
 8002f84:	60bb      	str	r3, [r7, #8]
 8002f86:	68ba      	ldr	r2, [r7, #8]
 8002f88:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002f8c:	4013      	ands	r3, r2
 8002f8e:	60bb      	str	r3, [r7, #8]
 8002f90:	68fb      	ldr	r3, [r7, #12]
 8002f92:	021a      	lsls	r2, r3, #8
 8002f94:	68bb      	ldr	r3, [r7, #8]
 8002f96:	4313      	orrs	r3, r2
 8002f98:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002f9c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002fa0:	60bb      	str	r3, [r7, #8]
 8002fa2:	4a04      	ldr	r2, [pc, #16]	; (8002fb4 <__NVIC_SetPriorityGrouping+0x44>)
 8002fa4:	68bb      	ldr	r3, [r7, #8]
 8002fa6:	60d3      	str	r3, [r2, #12]
 8002fa8:	bf00      	nop
 8002faa:	3714      	adds	r7, #20
 8002fac:	46bd      	mov	sp, r7
 8002fae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fb2:	4770      	bx	lr
 8002fb4:	e000ed00 	.word	0xe000ed00

08002fb8 <__NVIC_GetPriorityGrouping>:
 8002fb8:	b480      	push	{r7}
 8002fba:	af00      	add	r7, sp, #0
 8002fbc:	4b04      	ldr	r3, [pc, #16]	; (8002fd0 <__NVIC_GetPriorityGrouping+0x18>)
 8002fbe:	68db      	ldr	r3, [r3, #12]
 8002fc0:	0a1b      	lsrs	r3, r3, #8
 8002fc2:	f003 0307 	and.w	r3, r3, #7
 8002fc6:	4618      	mov	r0, r3
 8002fc8:	46bd      	mov	sp, r7
 8002fca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fce:	4770      	bx	lr
 8002fd0:	e000ed00 	.word	0xe000ed00

08002fd4 <__NVIC_EnableIRQ>:
 8002fd4:	b480      	push	{r7}
 8002fd6:	b083      	sub	sp, #12
 8002fd8:	af00      	add	r7, sp, #0
 8002fda:	4603      	mov	r3, r0
 8002fdc:	71fb      	strb	r3, [r7, #7]
 8002fde:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002fe2:	2b00      	cmp	r3, #0
 8002fe4:	db0b      	blt.n	8002ffe <__NVIC_EnableIRQ+0x2a>
 8002fe6:	79fb      	ldrb	r3, [r7, #7]
 8002fe8:	f003 021f 	and.w	r2, r3, #31
 8002fec:	4907      	ldr	r1, [pc, #28]	; (800300c <__NVIC_EnableIRQ+0x38>)
 8002fee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ff2:	095b      	lsrs	r3, r3, #5
 8002ff4:	2001      	movs	r0, #1
 8002ff6:	fa00 f202 	lsl.w	r2, r0, r2
 8002ffa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002ffe:	bf00      	nop
 8003000:	370c      	adds	r7, #12
 8003002:	46bd      	mov	sp, r7
 8003004:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003008:	4770      	bx	lr
 800300a:	bf00      	nop
 800300c:	e000e100 	.word	0xe000e100

08003010 <__NVIC_SetPriority>:
 8003010:	b480      	push	{r7}
 8003012:	b083      	sub	sp, #12
 8003014:	af00      	add	r7, sp, #0
 8003016:	4603      	mov	r3, r0
 8003018:	6039      	str	r1, [r7, #0]
 800301a:	71fb      	strb	r3, [r7, #7]
 800301c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003020:	2b00      	cmp	r3, #0
 8003022:	db0a      	blt.n	800303a <__NVIC_SetPriority+0x2a>
 8003024:	683b      	ldr	r3, [r7, #0]
 8003026:	b2da      	uxtb	r2, r3
 8003028:	490c      	ldr	r1, [pc, #48]	; (800305c <__NVIC_SetPriority+0x4c>)
 800302a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800302e:	0112      	lsls	r2, r2, #4
 8003030:	b2d2      	uxtb	r2, r2
 8003032:	440b      	add	r3, r1
 8003034:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8003038:	e00a      	b.n	8003050 <__NVIC_SetPriority+0x40>
 800303a:	683b      	ldr	r3, [r7, #0]
 800303c:	b2da      	uxtb	r2, r3
 800303e:	4908      	ldr	r1, [pc, #32]	; (8003060 <__NVIC_SetPriority+0x50>)
 8003040:	79fb      	ldrb	r3, [r7, #7]
 8003042:	f003 030f 	and.w	r3, r3, #15
 8003046:	3b04      	subs	r3, #4
 8003048:	0112      	lsls	r2, r2, #4
 800304a:	b2d2      	uxtb	r2, r2
 800304c:	440b      	add	r3, r1
 800304e:	761a      	strb	r2, [r3, #24]
 8003050:	bf00      	nop
 8003052:	370c      	adds	r7, #12
 8003054:	46bd      	mov	sp, r7
 8003056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800305a:	4770      	bx	lr
 800305c:	e000e100 	.word	0xe000e100
 8003060:	e000ed00 	.word	0xe000ed00

08003064 <NVIC_EncodePriority>:
 8003064:	b480      	push	{r7}
 8003066:	b089      	sub	sp, #36	; 0x24
 8003068:	af00      	add	r7, sp, #0
 800306a:	60f8      	str	r0, [r7, #12]
 800306c:	60b9      	str	r1, [r7, #8]
 800306e:	607a      	str	r2, [r7, #4]
 8003070:	68fb      	ldr	r3, [r7, #12]
 8003072:	f003 0307 	and.w	r3, r3, #7
 8003076:	61fb      	str	r3, [r7, #28]
 8003078:	69fb      	ldr	r3, [r7, #28]
 800307a:	f1c3 0307 	rsb	r3, r3, #7
 800307e:	2b04      	cmp	r3, #4
 8003080:	bf28      	it	cs
 8003082:	2304      	movcs	r3, #4
 8003084:	61bb      	str	r3, [r7, #24]
 8003086:	69fb      	ldr	r3, [r7, #28]
 8003088:	3304      	adds	r3, #4
 800308a:	2b06      	cmp	r3, #6
 800308c:	d902      	bls.n	8003094 <NVIC_EncodePriority+0x30>
 800308e:	69fb      	ldr	r3, [r7, #28]
 8003090:	3b03      	subs	r3, #3
 8003092:	e000      	b.n	8003096 <NVIC_EncodePriority+0x32>
 8003094:	2300      	movs	r3, #0
 8003096:	617b      	str	r3, [r7, #20]
 8003098:	f04f 32ff 	mov.w	r2, #4294967295
 800309c:	69bb      	ldr	r3, [r7, #24]
 800309e:	fa02 f303 	lsl.w	r3, r2, r3
 80030a2:	43da      	mvns	r2, r3
 80030a4:	68bb      	ldr	r3, [r7, #8]
 80030a6:	401a      	ands	r2, r3
 80030a8:	697b      	ldr	r3, [r7, #20]
 80030aa:	409a      	lsls	r2, r3
 80030ac:	f04f 31ff 	mov.w	r1, #4294967295
 80030b0:	697b      	ldr	r3, [r7, #20]
 80030b2:	fa01 f303 	lsl.w	r3, r1, r3
 80030b6:	43d9      	mvns	r1, r3
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	400b      	ands	r3, r1
 80030bc:	4313      	orrs	r3, r2
 80030be:	4618      	mov	r0, r3
 80030c0:	3724      	adds	r7, #36	; 0x24
 80030c2:	46bd      	mov	sp, r7
 80030c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030c8:	4770      	bx	lr
	...

080030cc <SysTick_Config>:
 80030cc:	b580      	push	{r7, lr}
 80030ce:	b082      	sub	sp, #8
 80030d0:	af00      	add	r7, sp, #0
 80030d2:	6078      	str	r0, [r7, #4]
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	3b01      	subs	r3, #1
 80030d8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80030dc:	d301      	bcc.n	80030e2 <SysTick_Config+0x16>
 80030de:	2301      	movs	r3, #1
 80030e0:	e00f      	b.n	8003102 <SysTick_Config+0x36>
 80030e2:	4a0a      	ldr	r2, [pc, #40]	; (800310c <SysTick_Config+0x40>)
 80030e4:	687b      	ldr	r3, [r7, #4]
 80030e6:	3b01      	subs	r3, #1
 80030e8:	6053      	str	r3, [r2, #4]
 80030ea:	210f      	movs	r1, #15
 80030ec:	f04f 30ff 	mov.w	r0, #4294967295
 80030f0:	f7ff ff8e 	bl	8003010 <__NVIC_SetPriority>
 80030f4:	4b05      	ldr	r3, [pc, #20]	; (800310c <SysTick_Config+0x40>)
 80030f6:	2200      	movs	r2, #0
 80030f8:	609a      	str	r2, [r3, #8]
 80030fa:	4b04      	ldr	r3, [pc, #16]	; (800310c <SysTick_Config+0x40>)
 80030fc:	2207      	movs	r2, #7
 80030fe:	601a      	str	r2, [r3, #0]
 8003100:	2300      	movs	r3, #0
 8003102:	4618      	mov	r0, r3
 8003104:	3708      	adds	r7, #8
 8003106:	46bd      	mov	sp, r7
 8003108:	bd80      	pop	{r7, pc}
 800310a:	bf00      	nop
 800310c:	e000e010 	.word	0xe000e010

08003110 <HAL_NVIC_SetPriorityGrouping>:
 8003110:	b580      	push	{r7, lr}
 8003112:	b082      	sub	sp, #8
 8003114:	af00      	add	r7, sp, #0
 8003116:	6078      	str	r0, [r7, #4]
 8003118:	6878      	ldr	r0, [r7, #4]
 800311a:	f7ff ff29 	bl	8002f70 <__NVIC_SetPriorityGrouping>
 800311e:	bf00      	nop
 8003120:	3708      	adds	r7, #8
 8003122:	46bd      	mov	sp, r7
 8003124:	bd80      	pop	{r7, pc}

08003126 <HAL_NVIC_SetPriority>:
 8003126:	b580      	push	{r7, lr}
 8003128:	b086      	sub	sp, #24
 800312a:	af00      	add	r7, sp, #0
 800312c:	4603      	mov	r3, r0
 800312e:	60b9      	str	r1, [r7, #8]
 8003130:	607a      	str	r2, [r7, #4]
 8003132:	73fb      	strb	r3, [r7, #15]
 8003134:	2300      	movs	r3, #0
 8003136:	617b      	str	r3, [r7, #20]
 8003138:	f7ff ff3e 	bl	8002fb8 <__NVIC_GetPriorityGrouping>
 800313c:	6178      	str	r0, [r7, #20]
 800313e:	687a      	ldr	r2, [r7, #4]
 8003140:	68b9      	ldr	r1, [r7, #8]
 8003142:	6978      	ldr	r0, [r7, #20]
 8003144:	f7ff ff8e 	bl	8003064 <NVIC_EncodePriority>
 8003148:	4602      	mov	r2, r0
 800314a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800314e:	4611      	mov	r1, r2
 8003150:	4618      	mov	r0, r3
 8003152:	f7ff ff5d 	bl	8003010 <__NVIC_SetPriority>
 8003156:	bf00      	nop
 8003158:	3718      	adds	r7, #24
 800315a:	46bd      	mov	sp, r7
 800315c:	bd80      	pop	{r7, pc}

0800315e <HAL_NVIC_EnableIRQ>:
 800315e:	b580      	push	{r7, lr}
 8003160:	b082      	sub	sp, #8
 8003162:	af00      	add	r7, sp, #0
 8003164:	4603      	mov	r3, r0
 8003166:	71fb      	strb	r3, [r7, #7]
 8003168:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800316c:	4618      	mov	r0, r3
 800316e:	f7ff ff31 	bl	8002fd4 <__NVIC_EnableIRQ>
 8003172:	bf00      	nop
 8003174:	3708      	adds	r7, #8
 8003176:	46bd      	mov	sp, r7
 8003178:	bd80      	pop	{r7, pc}

0800317a <HAL_SYSTICK_Config>:
 800317a:	b580      	push	{r7, lr}
 800317c:	b082      	sub	sp, #8
 800317e:	af00      	add	r7, sp, #0
 8003180:	6078      	str	r0, [r7, #4]
 8003182:	6878      	ldr	r0, [r7, #4]
 8003184:	f7ff ffa2 	bl	80030cc <SysTick_Config>
 8003188:	4603      	mov	r3, r0
 800318a:	4618      	mov	r0, r3
 800318c:	3708      	adds	r7, #8
 800318e:	46bd      	mov	sp, r7
 8003190:	bd80      	pop	{r7, pc}
	...

08003194 <HAL_GPIO_Init>:
 8003194:	b480      	push	{r7}
 8003196:	b087      	sub	sp, #28
 8003198:	af00      	add	r7, sp, #0
 800319a:	6078      	str	r0, [r7, #4]
 800319c:	6039      	str	r1, [r7, #0]
 800319e:	2300      	movs	r3, #0
 80031a0:	617b      	str	r3, [r7, #20]
 80031a2:	e14e      	b.n	8003442 <HAL_GPIO_Init+0x2ae>
 80031a4:	683b      	ldr	r3, [r7, #0]
 80031a6:	681a      	ldr	r2, [r3, #0]
 80031a8:	2101      	movs	r1, #1
 80031aa:	697b      	ldr	r3, [r7, #20]
 80031ac:	fa01 f303 	lsl.w	r3, r1, r3
 80031b0:	4013      	ands	r3, r2
 80031b2:	60fb      	str	r3, [r7, #12]
 80031b4:	68fb      	ldr	r3, [r7, #12]
 80031b6:	2b00      	cmp	r3, #0
 80031b8:	f000 8140 	beq.w	800343c <HAL_GPIO_Init+0x2a8>
 80031bc:	683b      	ldr	r3, [r7, #0]
 80031be:	685b      	ldr	r3, [r3, #4]
 80031c0:	f003 0303 	and.w	r3, r3, #3
 80031c4:	2b01      	cmp	r3, #1
 80031c6:	d005      	beq.n	80031d4 <HAL_GPIO_Init+0x40>
 80031c8:	683b      	ldr	r3, [r7, #0]
 80031ca:	685b      	ldr	r3, [r3, #4]
 80031cc:	f003 0303 	and.w	r3, r3, #3
 80031d0:	2b02      	cmp	r3, #2
 80031d2:	d130      	bne.n	8003236 <HAL_GPIO_Init+0xa2>
 80031d4:	687b      	ldr	r3, [r7, #4]
 80031d6:	689b      	ldr	r3, [r3, #8]
 80031d8:	613b      	str	r3, [r7, #16]
 80031da:	697b      	ldr	r3, [r7, #20]
 80031dc:	005b      	lsls	r3, r3, #1
 80031de:	2203      	movs	r2, #3
 80031e0:	fa02 f303 	lsl.w	r3, r2, r3
 80031e4:	43db      	mvns	r3, r3
 80031e6:	693a      	ldr	r2, [r7, #16]
 80031e8:	4013      	ands	r3, r2
 80031ea:	613b      	str	r3, [r7, #16]
 80031ec:	683b      	ldr	r3, [r7, #0]
 80031ee:	68da      	ldr	r2, [r3, #12]
 80031f0:	697b      	ldr	r3, [r7, #20]
 80031f2:	005b      	lsls	r3, r3, #1
 80031f4:	fa02 f303 	lsl.w	r3, r2, r3
 80031f8:	693a      	ldr	r2, [r7, #16]
 80031fa:	4313      	orrs	r3, r2
 80031fc:	613b      	str	r3, [r7, #16]
 80031fe:	687b      	ldr	r3, [r7, #4]
 8003200:	693a      	ldr	r2, [r7, #16]
 8003202:	609a      	str	r2, [r3, #8]
 8003204:	687b      	ldr	r3, [r7, #4]
 8003206:	685b      	ldr	r3, [r3, #4]
 8003208:	613b      	str	r3, [r7, #16]
 800320a:	2201      	movs	r2, #1
 800320c:	697b      	ldr	r3, [r7, #20]
 800320e:	fa02 f303 	lsl.w	r3, r2, r3
 8003212:	43db      	mvns	r3, r3
 8003214:	693a      	ldr	r2, [r7, #16]
 8003216:	4013      	ands	r3, r2
 8003218:	613b      	str	r3, [r7, #16]
 800321a:	683b      	ldr	r3, [r7, #0]
 800321c:	685b      	ldr	r3, [r3, #4]
 800321e:	091b      	lsrs	r3, r3, #4
 8003220:	f003 0201 	and.w	r2, r3, #1
 8003224:	697b      	ldr	r3, [r7, #20]
 8003226:	fa02 f303 	lsl.w	r3, r2, r3
 800322a:	693a      	ldr	r2, [r7, #16]
 800322c:	4313      	orrs	r3, r2
 800322e:	613b      	str	r3, [r7, #16]
 8003230:	687b      	ldr	r3, [r7, #4]
 8003232:	693a      	ldr	r2, [r7, #16]
 8003234:	605a      	str	r2, [r3, #4]
 8003236:	683b      	ldr	r3, [r7, #0]
 8003238:	685b      	ldr	r3, [r3, #4]
 800323a:	f003 0303 	and.w	r3, r3, #3
 800323e:	2b03      	cmp	r3, #3
 8003240:	d017      	beq.n	8003272 <HAL_GPIO_Init+0xde>
 8003242:	687b      	ldr	r3, [r7, #4]
 8003244:	68db      	ldr	r3, [r3, #12]
 8003246:	613b      	str	r3, [r7, #16]
 8003248:	697b      	ldr	r3, [r7, #20]
 800324a:	005b      	lsls	r3, r3, #1
 800324c:	2203      	movs	r2, #3
 800324e:	fa02 f303 	lsl.w	r3, r2, r3
 8003252:	43db      	mvns	r3, r3
 8003254:	693a      	ldr	r2, [r7, #16]
 8003256:	4013      	ands	r3, r2
 8003258:	613b      	str	r3, [r7, #16]
 800325a:	683b      	ldr	r3, [r7, #0]
 800325c:	689a      	ldr	r2, [r3, #8]
 800325e:	697b      	ldr	r3, [r7, #20]
 8003260:	005b      	lsls	r3, r3, #1
 8003262:	fa02 f303 	lsl.w	r3, r2, r3
 8003266:	693a      	ldr	r2, [r7, #16]
 8003268:	4313      	orrs	r3, r2
 800326a:	613b      	str	r3, [r7, #16]
 800326c:	687b      	ldr	r3, [r7, #4]
 800326e:	693a      	ldr	r2, [r7, #16]
 8003270:	60da      	str	r2, [r3, #12]
 8003272:	683b      	ldr	r3, [r7, #0]
 8003274:	685b      	ldr	r3, [r3, #4]
 8003276:	f003 0303 	and.w	r3, r3, #3
 800327a:	2b02      	cmp	r3, #2
 800327c:	d123      	bne.n	80032c6 <HAL_GPIO_Init+0x132>
 800327e:	697b      	ldr	r3, [r7, #20]
 8003280:	08da      	lsrs	r2, r3, #3
 8003282:	687b      	ldr	r3, [r7, #4]
 8003284:	3208      	adds	r2, #8
 8003286:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800328a:	613b      	str	r3, [r7, #16]
 800328c:	697b      	ldr	r3, [r7, #20]
 800328e:	f003 0307 	and.w	r3, r3, #7
 8003292:	009b      	lsls	r3, r3, #2
 8003294:	220f      	movs	r2, #15
 8003296:	fa02 f303 	lsl.w	r3, r2, r3
 800329a:	43db      	mvns	r3, r3
 800329c:	693a      	ldr	r2, [r7, #16]
 800329e:	4013      	ands	r3, r2
 80032a0:	613b      	str	r3, [r7, #16]
 80032a2:	683b      	ldr	r3, [r7, #0]
 80032a4:	691a      	ldr	r2, [r3, #16]
 80032a6:	697b      	ldr	r3, [r7, #20]
 80032a8:	f003 0307 	and.w	r3, r3, #7
 80032ac:	009b      	lsls	r3, r3, #2
 80032ae:	fa02 f303 	lsl.w	r3, r2, r3
 80032b2:	693a      	ldr	r2, [r7, #16]
 80032b4:	4313      	orrs	r3, r2
 80032b6:	613b      	str	r3, [r7, #16]
 80032b8:	697b      	ldr	r3, [r7, #20]
 80032ba:	08da      	lsrs	r2, r3, #3
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	3208      	adds	r2, #8
 80032c0:	6939      	ldr	r1, [r7, #16]
 80032c2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80032c6:	687b      	ldr	r3, [r7, #4]
 80032c8:	681b      	ldr	r3, [r3, #0]
 80032ca:	613b      	str	r3, [r7, #16]
 80032cc:	697b      	ldr	r3, [r7, #20]
 80032ce:	005b      	lsls	r3, r3, #1
 80032d0:	2203      	movs	r2, #3
 80032d2:	fa02 f303 	lsl.w	r3, r2, r3
 80032d6:	43db      	mvns	r3, r3
 80032d8:	693a      	ldr	r2, [r7, #16]
 80032da:	4013      	ands	r3, r2
 80032dc:	613b      	str	r3, [r7, #16]
 80032de:	683b      	ldr	r3, [r7, #0]
 80032e0:	685b      	ldr	r3, [r3, #4]
 80032e2:	f003 0203 	and.w	r2, r3, #3
 80032e6:	697b      	ldr	r3, [r7, #20]
 80032e8:	005b      	lsls	r3, r3, #1
 80032ea:	fa02 f303 	lsl.w	r3, r2, r3
 80032ee:	693a      	ldr	r2, [r7, #16]
 80032f0:	4313      	orrs	r3, r2
 80032f2:	613b      	str	r3, [r7, #16]
 80032f4:	687b      	ldr	r3, [r7, #4]
 80032f6:	693a      	ldr	r2, [r7, #16]
 80032f8:	601a      	str	r2, [r3, #0]
 80032fa:	683b      	ldr	r3, [r7, #0]
 80032fc:	685b      	ldr	r3, [r3, #4]
 80032fe:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003302:	2b00      	cmp	r3, #0
 8003304:	f000 809a 	beq.w	800343c <HAL_GPIO_Init+0x2a8>
 8003308:	4b55      	ldr	r3, [pc, #340]	; (8003460 <HAL_GPIO_Init+0x2cc>)
 800330a:	699b      	ldr	r3, [r3, #24]
 800330c:	4a54      	ldr	r2, [pc, #336]	; (8003460 <HAL_GPIO_Init+0x2cc>)
 800330e:	f043 0301 	orr.w	r3, r3, #1
 8003312:	6193      	str	r3, [r2, #24]
 8003314:	4b52      	ldr	r3, [pc, #328]	; (8003460 <HAL_GPIO_Init+0x2cc>)
 8003316:	699b      	ldr	r3, [r3, #24]
 8003318:	f003 0301 	and.w	r3, r3, #1
 800331c:	60bb      	str	r3, [r7, #8]
 800331e:	68bb      	ldr	r3, [r7, #8]
 8003320:	4a50      	ldr	r2, [pc, #320]	; (8003464 <HAL_GPIO_Init+0x2d0>)
 8003322:	697b      	ldr	r3, [r7, #20]
 8003324:	089b      	lsrs	r3, r3, #2
 8003326:	3302      	adds	r3, #2
 8003328:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800332c:	613b      	str	r3, [r7, #16]
 800332e:	697b      	ldr	r3, [r7, #20]
 8003330:	f003 0303 	and.w	r3, r3, #3
 8003334:	009b      	lsls	r3, r3, #2
 8003336:	220f      	movs	r2, #15
 8003338:	fa02 f303 	lsl.w	r3, r2, r3
 800333c:	43db      	mvns	r3, r3
 800333e:	693a      	ldr	r2, [r7, #16]
 8003340:	4013      	ands	r3, r2
 8003342:	613b      	str	r3, [r7, #16]
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 800334a:	d013      	beq.n	8003374 <HAL_GPIO_Init+0x1e0>
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	4a46      	ldr	r2, [pc, #280]	; (8003468 <HAL_GPIO_Init+0x2d4>)
 8003350:	4293      	cmp	r3, r2
 8003352:	d00d      	beq.n	8003370 <HAL_GPIO_Init+0x1dc>
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	4a45      	ldr	r2, [pc, #276]	; (800346c <HAL_GPIO_Init+0x2d8>)
 8003358:	4293      	cmp	r3, r2
 800335a:	d007      	beq.n	800336c <HAL_GPIO_Init+0x1d8>
 800335c:	687b      	ldr	r3, [r7, #4]
 800335e:	4a44      	ldr	r2, [pc, #272]	; (8003470 <HAL_GPIO_Init+0x2dc>)
 8003360:	4293      	cmp	r3, r2
 8003362:	d101      	bne.n	8003368 <HAL_GPIO_Init+0x1d4>
 8003364:	2303      	movs	r3, #3
 8003366:	e006      	b.n	8003376 <HAL_GPIO_Init+0x1e2>
 8003368:	2305      	movs	r3, #5
 800336a:	e004      	b.n	8003376 <HAL_GPIO_Init+0x1e2>
 800336c:	2302      	movs	r3, #2
 800336e:	e002      	b.n	8003376 <HAL_GPIO_Init+0x1e2>
 8003370:	2301      	movs	r3, #1
 8003372:	e000      	b.n	8003376 <HAL_GPIO_Init+0x1e2>
 8003374:	2300      	movs	r3, #0
 8003376:	697a      	ldr	r2, [r7, #20]
 8003378:	f002 0203 	and.w	r2, r2, #3
 800337c:	0092      	lsls	r2, r2, #2
 800337e:	4093      	lsls	r3, r2
 8003380:	693a      	ldr	r2, [r7, #16]
 8003382:	4313      	orrs	r3, r2
 8003384:	613b      	str	r3, [r7, #16]
 8003386:	4937      	ldr	r1, [pc, #220]	; (8003464 <HAL_GPIO_Init+0x2d0>)
 8003388:	697b      	ldr	r3, [r7, #20]
 800338a:	089b      	lsrs	r3, r3, #2
 800338c:	3302      	adds	r3, #2
 800338e:	693a      	ldr	r2, [r7, #16]
 8003390:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003394:	4b37      	ldr	r3, [pc, #220]	; (8003474 <HAL_GPIO_Init+0x2e0>)
 8003396:	681b      	ldr	r3, [r3, #0]
 8003398:	613b      	str	r3, [r7, #16]
 800339a:	68fb      	ldr	r3, [r7, #12]
 800339c:	43db      	mvns	r3, r3
 800339e:	693a      	ldr	r2, [r7, #16]
 80033a0:	4013      	ands	r3, r2
 80033a2:	613b      	str	r3, [r7, #16]
 80033a4:	683b      	ldr	r3, [r7, #0]
 80033a6:	685b      	ldr	r3, [r3, #4]
 80033a8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80033ac:	2b00      	cmp	r3, #0
 80033ae:	d003      	beq.n	80033b8 <HAL_GPIO_Init+0x224>
 80033b0:	693a      	ldr	r2, [r7, #16]
 80033b2:	68fb      	ldr	r3, [r7, #12]
 80033b4:	4313      	orrs	r3, r2
 80033b6:	613b      	str	r3, [r7, #16]
 80033b8:	4a2e      	ldr	r2, [pc, #184]	; (8003474 <HAL_GPIO_Init+0x2e0>)
 80033ba:	693b      	ldr	r3, [r7, #16]
 80033bc:	6013      	str	r3, [r2, #0]
 80033be:	4b2d      	ldr	r3, [pc, #180]	; (8003474 <HAL_GPIO_Init+0x2e0>)
 80033c0:	685b      	ldr	r3, [r3, #4]
 80033c2:	613b      	str	r3, [r7, #16]
 80033c4:	68fb      	ldr	r3, [r7, #12]
 80033c6:	43db      	mvns	r3, r3
 80033c8:	693a      	ldr	r2, [r7, #16]
 80033ca:	4013      	ands	r3, r2
 80033cc:	613b      	str	r3, [r7, #16]
 80033ce:	683b      	ldr	r3, [r7, #0]
 80033d0:	685b      	ldr	r3, [r3, #4]
 80033d2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80033d6:	2b00      	cmp	r3, #0
 80033d8:	d003      	beq.n	80033e2 <HAL_GPIO_Init+0x24e>
 80033da:	693a      	ldr	r2, [r7, #16]
 80033dc:	68fb      	ldr	r3, [r7, #12]
 80033de:	4313      	orrs	r3, r2
 80033e0:	613b      	str	r3, [r7, #16]
 80033e2:	4a24      	ldr	r2, [pc, #144]	; (8003474 <HAL_GPIO_Init+0x2e0>)
 80033e4:	693b      	ldr	r3, [r7, #16]
 80033e6:	6053      	str	r3, [r2, #4]
 80033e8:	4b22      	ldr	r3, [pc, #136]	; (8003474 <HAL_GPIO_Init+0x2e0>)
 80033ea:	689b      	ldr	r3, [r3, #8]
 80033ec:	613b      	str	r3, [r7, #16]
 80033ee:	68fb      	ldr	r3, [r7, #12]
 80033f0:	43db      	mvns	r3, r3
 80033f2:	693a      	ldr	r2, [r7, #16]
 80033f4:	4013      	ands	r3, r2
 80033f6:	613b      	str	r3, [r7, #16]
 80033f8:	683b      	ldr	r3, [r7, #0]
 80033fa:	685b      	ldr	r3, [r3, #4]
 80033fc:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003400:	2b00      	cmp	r3, #0
 8003402:	d003      	beq.n	800340c <HAL_GPIO_Init+0x278>
 8003404:	693a      	ldr	r2, [r7, #16]
 8003406:	68fb      	ldr	r3, [r7, #12]
 8003408:	4313      	orrs	r3, r2
 800340a:	613b      	str	r3, [r7, #16]
 800340c:	4a19      	ldr	r2, [pc, #100]	; (8003474 <HAL_GPIO_Init+0x2e0>)
 800340e:	693b      	ldr	r3, [r7, #16]
 8003410:	6093      	str	r3, [r2, #8]
 8003412:	4b18      	ldr	r3, [pc, #96]	; (8003474 <HAL_GPIO_Init+0x2e0>)
 8003414:	68db      	ldr	r3, [r3, #12]
 8003416:	613b      	str	r3, [r7, #16]
 8003418:	68fb      	ldr	r3, [r7, #12]
 800341a:	43db      	mvns	r3, r3
 800341c:	693a      	ldr	r2, [r7, #16]
 800341e:	4013      	ands	r3, r2
 8003420:	613b      	str	r3, [r7, #16]
 8003422:	683b      	ldr	r3, [r7, #0]
 8003424:	685b      	ldr	r3, [r3, #4]
 8003426:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800342a:	2b00      	cmp	r3, #0
 800342c:	d003      	beq.n	8003436 <HAL_GPIO_Init+0x2a2>
 800342e:	693a      	ldr	r2, [r7, #16]
 8003430:	68fb      	ldr	r3, [r7, #12]
 8003432:	4313      	orrs	r3, r2
 8003434:	613b      	str	r3, [r7, #16]
 8003436:	4a0f      	ldr	r2, [pc, #60]	; (8003474 <HAL_GPIO_Init+0x2e0>)
 8003438:	693b      	ldr	r3, [r7, #16]
 800343a:	60d3      	str	r3, [r2, #12]
 800343c:	697b      	ldr	r3, [r7, #20]
 800343e:	3301      	adds	r3, #1
 8003440:	617b      	str	r3, [r7, #20]
 8003442:	683b      	ldr	r3, [r7, #0]
 8003444:	681a      	ldr	r2, [r3, #0]
 8003446:	697b      	ldr	r3, [r7, #20]
 8003448:	fa22 f303 	lsr.w	r3, r2, r3
 800344c:	2b00      	cmp	r3, #0
 800344e:	f47f aea9 	bne.w	80031a4 <HAL_GPIO_Init+0x10>
 8003452:	bf00      	nop
 8003454:	bf00      	nop
 8003456:	371c      	adds	r7, #28
 8003458:	46bd      	mov	sp, r7
 800345a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800345e:	4770      	bx	lr
 8003460:	40021000 	.word	0x40021000
 8003464:	40010000 	.word	0x40010000
 8003468:	48000400 	.word	0x48000400
 800346c:	48000800 	.word	0x48000800
 8003470:	48000c00 	.word	0x48000c00
 8003474:	40010400 	.word	0x40010400

08003478 <HAL_GPIO_WritePin>:
 8003478:	b480      	push	{r7}
 800347a:	b083      	sub	sp, #12
 800347c:	af00      	add	r7, sp, #0
 800347e:	6078      	str	r0, [r7, #4]
 8003480:	460b      	mov	r3, r1
 8003482:	807b      	strh	r3, [r7, #2]
 8003484:	4613      	mov	r3, r2
 8003486:	707b      	strb	r3, [r7, #1]
 8003488:	787b      	ldrb	r3, [r7, #1]
 800348a:	2b00      	cmp	r3, #0
 800348c:	d003      	beq.n	8003496 <HAL_GPIO_WritePin+0x1e>
 800348e:	887a      	ldrh	r2, [r7, #2]
 8003490:	687b      	ldr	r3, [r7, #4]
 8003492:	619a      	str	r2, [r3, #24]
 8003494:	e002      	b.n	800349c <HAL_GPIO_WritePin+0x24>
 8003496:	887a      	ldrh	r2, [r7, #2]
 8003498:	687b      	ldr	r3, [r7, #4]
 800349a:	629a      	str	r2, [r3, #40]	; 0x28
 800349c:	bf00      	nop
 800349e:	370c      	adds	r7, #12
 80034a0:	46bd      	mov	sp, r7
 80034a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034a6:	4770      	bx	lr

080034a8 <HAL_GPIO_EXTI_IRQHandler>:
 80034a8:	b580      	push	{r7, lr}
 80034aa:	b082      	sub	sp, #8
 80034ac:	af00      	add	r7, sp, #0
 80034ae:	4603      	mov	r3, r0
 80034b0:	80fb      	strh	r3, [r7, #6]
 80034b2:	4b08      	ldr	r3, [pc, #32]	; (80034d4 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80034b4:	695a      	ldr	r2, [r3, #20]
 80034b6:	88fb      	ldrh	r3, [r7, #6]
 80034b8:	4013      	ands	r3, r2
 80034ba:	2b00      	cmp	r3, #0
 80034bc:	d006      	beq.n	80034cc <HAL_GPIO_EXTI_IRQHandler+0x24>
 80034be:	4a05      	ldr	r2, [pc, #20]	; (80034d4 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80034c0:	88fb      	ldrh	r3, [r7, #6]
 80034c2:	6153      	str	r3, [r2, #20]
 80034c4:	88fb      	ldrh	r3, [r7, #6]
 80034c6:	4618      	mov	r0, r3
 80034c8:	f7fd fd2a 	bl	8000f20 <HAL_GPIO_EXTI_Callback>
 80034cc:	bf00      	nop
 80034ce:	3708      	adds	r7, #8
 80034d0:	46bd      	mov	sp, r7
 80034d2:	bd80      	pop	{r7, pc}
 80034d4:	40010400 	.word	0x40010400

080034d8 <HAL_PWR_EnableBkUpAccess>:
 80034d8:	b480      	push	{r7}
 80034da:	af00      	add	r7, sp, #0
 80034dc:	4b05      	ldr	r3, [pc, #20]	; (80034f4 <HAL_PWR_EnableBkUpAccess+0x1c>)
 80034de:	681b      	ldr	r3, [r3, #0]
 80034e0:	4a04      	ldr	r2, [pc, #16]	; (80034f4 <HAL_PWR_EnableBkUpAccess+0x1c>)
 80034e2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80034e6:	6013      	str	r3, [r2, #0]
 80034e8:	bf00      	nop
 80034ea:	46bd      	mov	sp, r7
 80034ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034f0:	4770      	bx	lr
 80034f2:	bf00      	nop
 80034f4:	40007000 	.word	0x40007000

080034f8 <HAL_RCC_OscConfig>:
 80034f8:	b580      	push	{r7, lr}
 80034fa:	f5ad 7d00 	sub.w	sp, sp, #512	; 0x200
 80034fe:	af00      	add	r7, sp, #0
 8003500:	1d3b      	adds	r3, r7, #4
 8003502:	6018      	str	r0, [r3, #0]
 8003504:	1d3b      	adds	r3, r7, #4
 8003506:	681b      	ldr	r3, [r3, #0]
 8003508:	2b00      	cmp	r3, #0
 800350a:	d102      	bne.n	8003512 <HAL_RCC_OscConfig+0x1a>
 800350c:	2301      	movs	r3, #1
 800350e:	f000 bef4 	b.w	80042fa <HAL_RCC_OscConfig+0xe02>
 8003512:	1d3b      	adds	r3, r7, #4
 8003514:	681b      	ldr	r3, [r3, #0]
 8003516:	681b      	ldr	r3, [r3, #0]
 8003518:	f003 0301 	and.w	r3, r3, #1
 800351c:	2b00      	cmp	r3, #0
 800351e:	f000 816a 	beq.w	80037f6 <HAL_RCC_OscConfig+0x2fe>
 8003522:	4bb3      	ldr	r3, [pc, #716]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 8003524:	685b      	ldr	r3, [r3, #4]
 8003526:	f003 030c 	and.w	r3, r3, #12
 800352a:	2b04      	cmp	r3, #4
 800352c:	d00c      	beq.n	8003548 <HAL_RCC_OscConfig+0x50>
 800352e:	4bb0      	ldr	r3, [pc, #704]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 8003530:	685b      	ldr	r3, [r3, #4]
 8003532:	f003 030c 	and.w	r3, r3, #12
 8003536:	2b08      	cmp	r3, #8
 8003538:	d159      	bne.n	80035ee <HAL_RCC_OscConfig+0xf6>
 800353a:	4bad      	ldr	r3, [pc, #692]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 800353c:	685b      	ldr	r3, [r3, #4]
 800353e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003542:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003546:	d152      	bne.n	80035ee <HAL_RCC_OscConfig+0xf6>
 8003548:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800354c:	f8c7 31f0 	str.w	r3, [r7, #496]	; 0x1f0
 8003550:	f8d7 31f0 	ldr.w	r3, [r7, #496]	; 0x1f0
 8003554:	fa93 f3a3 	rbit	r3, r3
 8003558:	f8c7 31ec 	str.w	r3, [r7, #492]	; 0x1ec
 800355c:	f8d7 31ec 	ldr.w	r3, [r7, #492]	; 0x1ec
 8003560:	fab3 f383 	clz	r3, r3
 8003564:	b2db      	uxtb	r3, r3
 8003566:	095b      	lsrs	r3, r3, #5
 8003568:	b2db      	uxtb	r3, r3
 800356a:	f043 0301 	orr.w	r3, r3, #1
 800356e:	b2db      	uxtb	r3, r3
 8003570:	2b01      	cmp	r3, #1
 8003572:	d102      	bne.n	800357a <HAL_RCC_OscConfig+0x82>
 8003574:	4b9e      	ldr	r3, [pc, #632]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 8003576:	681b      	ldr	r3, [r3, #0]
 8003578:	e015      	b.n	80035a6 <HAL_RCC_OscConfig+0xae>
 800357a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800357e:	f8c7 31e8 	str.w	r3, [r7, #488]	; 0x1e8
 8003582:	f8d7 31e8 	ldr.w	r3, [r7, #488]	; 0x1e8
 8003586:	fa93 f3a3 	rbit	r3, r3
 800358a:	f8c7 31e4 	str.w	r3, [r7, #484]	; 0x1e4
 800358e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8003592:	f8c7 31e0 	str.w	r3, [r7, #480]	; 0x1e0
 8003596:	f8d7 31e0 	ldr.w	r3, [r7, #480]	; 0x1e0
 800359a:	fa93 f3a3 	rbit	r3, r3
 800359e:	f8c7 31dc 	str.w	r3, [r7, #476]	; 0x1dc
 80035a2:	4b93      	ldr	r3, [pc, #588]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 80035a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035a6:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 80035aa:	f8c7 21d8 	str.w	r2, [r7, #472]	; 0x1d8
 80035ae:	f8d7 21d8 	ldr.w	r2, [r7, #472]	; 0x1d8
 80035b2:	fa92 f2a2 	rbit	r2, r2
 80035b6:	f8c7 21d4 	str.w	r2, [r7, #468]	; 0x1d4
 80035ba:	f8d7 21d4 	ldr.w	r2, [r7, #468]	; 0x1d4
 80035be:	fab2 f282 	clz	r2, r2
 80035c2:	b2d2      	uxtb	r2, r2
 80035c4:	f042 0220 	orr.w	r2, r2, #32
 80035c8:	b2d2      	uxtb	r2, r2
 80035ca:	f002 021f 	and.w	r2, r2, #31
 80035ce:	2101      	movs	r1, #1
 80035d0:	fa01 f202 	lsl.w	r2, r1, r2
 80035d4:	4013      	ands	r3, r2
 80035d6:	2b00      	cmp	r3, #0
 80035d8:	f000 810c 	beq.w	80037f4 <HAL_RCC_OscConfig+0x2fc>
 80035dc:	1d3b      	adds	r3, r7, #4
 80035de:	681b      	ldr	r3, [r3, #0]
 80035e0:	685b      	ldr	r3, [r3, #4]
 80035e2:	2b00      	cmp	r3, #0
 80035e4:	f040 8106 	bne.w	80037f4 <HAL_RCC_OscConfig+0x2fc>
 80035e8:	2301      	movs	r3, #1
 80035ea:	f000 be86 	b.w	80042fa <HAL_RCC_OscConfig+0xe02>
 80035ee:	1d3b      	adds	r3, r7, #4
 80035f0:	681b      	ldr	r3, [r3, #0]
 80035f2:	685b      	ldr	r3, [r3, #4]
 80035f4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80035f8:	d106      	bne.n	8003608 <HAL_RCC_OscConfig+0x110>
 80035fa:	4b7d      	ldr	r3, [pc, #500]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 80035fc:	681b      	ldr	r3, [r3, #0]
 80035fe:	4a7c      	ldr	r2, [pc, #496]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 8003600:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003604:	6013      	str	r3, [r2, #0]
 8003606:	e030      	b.n	800366a <HAL_RCC_OscConfig+0x172>
 8003608:	1d3b      	adds	r3, r7, #4
 800360a:	681b      	ldr	r3, [r3, #0]
 800360c:	685b      	ldr	r3, [r3, #4]
 800360e:	2b00      	cmp	r3, #0
 8003610:	d10c      	bne.n	800362c <HAL_RCC_OscConfig+0x134>
 8003612:	4b77      	ldr	r3, [pc, #476]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 8003614:	681b      	ldr	r3, [r3, #0]
 8003616:	4a76      	ldr	r2, [pc, #472]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 8003618:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800361c:	6013      	str	r3, [r2, #0]
 800361e:	4b74      	ldr	r3, [pc, #464]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 8003620:	681b      	ldr	r3, [r3, #0]
 8003622:	4a73      	ldr	r2, [pc, #460]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 8003624:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003628:	6013      	str	r3, [r2, #0]
 800362a:	e01e      	b.n	800366a <HAL_RCC_OscConfig+0x172>
 800362c:	1d3b      	adds	r3, r7, #4
 800362e:	681b      	ldr	r3, [r3, #0]
 8003630:	685b      	ldr	r3, [r3, #4]
 8003632:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8003636:	d10c      	bne.n	8003652 <HAL_RCC_OscConfig+0x15a>
 8003638:	4b6d      	ldr	r3, [pc, #436]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 800363a:	681b      	ldr	r3, [r3, #0]
 800363c:	4a6c      	ldr	r2, [pc, #432]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 800363e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8003642:	6013      	str	r3, [r2, #0]
 8003644:	4b6a      	ldr	r3, [pc, #424]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 8003646:	681b      	ldr	r3, [r3, #0]
 8003648:	4a69      	ldr	r2, [pc, #420]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 800364a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800364e:	6013      	str	r3, [r2, #0]
 8003650:	e00b      	b.n	800366a <HAL_RCC_OscConfig+0x172>
 8003652:	4b67      	ldr	r3, [pc, #412]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 8003654:	681b      	ldr	r3, [r3, #0]
 8003656:	4a66      	ldr	r2, [pc, #408]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 8003658:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800365c:	6013      	str	r3, [r2, #0]
 800365e:	4b64      	ldr	r3, [pc, #400]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 8003660:	681b      	ldr	r3, [r3, #0]
 8003662:	4a63      	ldr	r2, [pc, #396]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 8003664:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003668:	6013      	str	r3, [r2, #0]
 800366a:	4b61      	ldr	r3, [pc, #388]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 800366c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800366e:	f023 020f 	bic.w	r2, r3, #15
 8003672:	1d3b      	adds	r3, r7, #4
 8003674:	681b      	ldr	r3, [r3, #0]
 8003676:	689b      	ldr	r3, [r3, #8]
 8003678:	495d      	ldr	r1, [pc, #372]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 800367a:	4313      	orrs	r3, r2
 800367c:	62cb      	str	r3, [r1, #44]	; 0x2c
 800367e:	1d3b      	adds	r3, r7, #4
 8003680:	681b      	ldr	r3, [r3, #0]
 8003682:	685b      	ldr	r3, [r3, #4]
 8003684:	2b00      	cmp	r3, #0
 8003686:	d059      	beq.n	800373c <HAL_RCC_OscConfig+0x244>
 8003688:	f7ff fc42 	bl	8002f10 <HAL_GetTick>
 800368c:	f8c7 01f8 	str.w	r0, [r7, #504]	; 0x1f8
 8003690:	e00a      	b.n	80036a8 <HAL_RCC_OscConfig+0x1b0>
 8003692:	f7ff fc3d 	bl	8002f10 <HAL_GetTick>
 8003696:	4602      	mov	r2, r0
 8003698:	f8d7 31f8 	ldr.w	r3, [r7, #504]	; 0x1f8
 800369c:	1ad3      	subs	r3, r2, r3
 800369e:	2b64      	cmp	r3, #100	; 0x64
 80036a0:	d902      	bls.n	80036a8 <HAL_RCC_OscConfig+0x1b0>
 80036a2:	2303      	movs	r3, #3
 80036a4:	f000 be29 	b.w	80042fa <HAL_RCC_OscConfig+0xe02>
 80036a8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80036ac:	f8c7 31d0 	str.w	r3, [r7, #464]	; 0x1d0
 80036b0:	f8d7 31d0 	ldr.w	r3, [r7, #464]	; 0x1d0
 80036b4:	fa93 f3a3 	rbit	r3, r3
 80036b8:	f8c7 31cc 	str.w	r3, [r7, #460]	; 0x1cc
 80036bc:	f8d7 31cc 	ldr.w	r3, [r7, #460]	; 0x1cc
 80036c0:	fab3 f383 	clz	r3, r3
 80036c4:	b2db      	uxtb	r3, r3
 80036c6:	095b      	lsrs	r3, r3, #5
 80036c8:	b2db      	uxtb	r3, r3
 80036ca:	f043 0301 	orr.w	r3, r3, #1
 80036ce:	b2db      	uxtb	r3, r3
 80036d0:	2b01      	cmp	r3, #1
 80036d2:	d102      	bne.n	80036da <HAL_RCC_OscConfig+0x1e2>
 80036d4:	4b46      	ldr	r3, [pc, #280]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 80036d6:	681b      	ldr	r3, [r3, #0]
 80036d8:	e015      	b.n	8003706 <HAL_RCC_OscConfig+0x20e>
 80036da:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80036de:	f8c7 31c8 	str.w	r3, [r7, #456]	; 0x1c8
 80036e2:	f8d7 31c8 	ldr.w	r3, [r7, #456]	; 0x1c8
 80036e6:	fa93 f3a3 	rbit	r3, r3
 80036ea:	f8c7 31c4 	str.w	r3, [r7, #452]	; 0x1c4
 80036ee:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80036f2:	f8c7 31c0 	str.w	r3, [r7, #448]	; 0x1c0
 80036f6:	f8d7 31c0 	ldr.w	r3, [r7, #448]	; 0x1c0
 80036fa:	fa93 f3a3 	rbit	r3, r3
 80036fe:	f8c7 31bc 	str.w	r3, [r7, #444]	; 0x1bc
 8003702:	4b3b      	ldr	r3, [pc, #236]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 8003704:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003706:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 800370a:	f8c7 21b8 	str.w	r2, [r7, #440]	; 0x1b8
 800370e:	f8d7 21b8 	ldr.w	r2, [r7, #440]	; 0x1b8
 8003712:	fa92 f2a2 	rbit	r2, r2
 8003716:	f8c7 21b4 	str.w	r2, [r7, #436]	; 0x1b4
 800371a:	f8d7 21b4 	ldr.w	r2, [r7, #436]	; 0x1b4
 800371e:	fab2 f282 	clz	r2, r2
 8003722:	b2d2      	uxtb	r2, r2
 8003724:	f042 0220 	orr.w	r2, r2, #32
 8003728:	b2d2      	uxtb	r2, r2
 800372a:	f002 021f 	and.w	r2, r2, #31
 800372e:	2101      	movs	r1, #1
 8003730:	fa01 f202 	lsl.w	r2, r1, r2
 8003734:	4013      	ands	r3, r2
 8003736:	2b00      	cmp	r3, #0
 8003738:	d0ab      	beq.n	8003692 <HAL_RCC_OscConfig+0x19a>
 800373a:	e05c      	b.n	80037f6 <HAL_RCC_OscConfig+0x2fe>
 800373c:	f7ff fbe8 	bl	8002f10 <HAL_GetTick>
 8003740:	f8c7 01f8 	str.w	r0, [r7, #504]	; 0x1f8
 8003744:	e00a      	b.n	800375c <HAL_RCC_OscConfig+0x264>
 8003746:	f7ff fbe3 	bl	8002f10 <HAL_GetTick>
 800374a:	4602      	mov	r2, r0
 800374c:	f8d7 31f8 	ldr.w	r3, [r7, #504]	; 0x1f8
 8003750:	1ad3      	subs	r3, r2, r3
 8003752:	2b64      	cmp	r3, #100	; 0x64
 8003754:	d902      	bls.n	800375c <HAL_RCC_OscConfig+0x264>
 8003756:	2303      	movs	r3, #3
 8003758:	f000 bdcf 	b.w	80042fa <HAL_RCC_OscConfig+0xe02>
 800375c:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8003760:	f8c7 31b0 	str.w	r3, [r7, #432]	; 0x1b0
 8003764:	f8d7 31b0 	ldr.w	r3, [r7, #432]	; 0x1b0
 8003768:	fa93 f3a3 	rbit	r3, r3
 800376c:	f8c7 31ac 	str.w	r3, [r7, #428]	; 0x1ac
 8003770:	f8d7 31ac 	ldr.w	r3, [r7, #428]	; 0x1ac
 8003774:	fab3 f383 	clz	r3, r3
 8003778:	b2db      	uxtb	r3, r3
 800377a:	095b      	lsrs	r3, r3, #5
 800377c:	b2db      	uxtb	r3, r3
 800377e:	f043 0301 	orr.w	r3, r3, #1
 8003782:	b2db      	uxtb	r3, r3
 8003784:	2b01      	cmp	r3, #1
 8003786:	d102      	bne.n	800378e <HAL_RCC_OscConfig+0x296>
 8003788:	4b19      	ldr	r3, [pc, #100]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 800378a:	681b      	ldr	r3, [r3, #0]
 800378c:	e015      	b.n	80037ba <HAL_RCC_OscConfig+0x2c2>
 800378e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8003792:	f8c7 31a8 	str.w	r3, [r7, #424]	; 0x1a8
 8003796:	f8d7 31a8 	ldr.w	r3, [r7, #424]	; 0x1a8
 800379a:	fa93 f3a3 	rbit	r3, r3
 800379e:	f8c7 31a4 	str.w	r3, [r7, #420]	; 0x1a4
 80037a2:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80037a6:	f8c7 31a0 	str.w	r3, [r7, #416]	; 0x1a0
 80037aa:	f8d7 31a0 	ldr.w	r3, [r7, #416]	; 0x1a0
 80037ae:	fa93 f3a3 	rbit	r3, r3
 80037b2:	f8c7 319c 	str.w	r3, [r7, #412]	; 0x19c
 80037b6:	4b0e      	ldr	r3, [pc, #56]	; (80037f0 <HAL_RCC_OscConfig+0x2f8>)
 80037b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80037ba:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 80037be:	f8c7 2198 	str.w	r2, [r7, #408]	; 0x198
 80037c2:	f8d7 2198 	ldr.w	r2, [r7, #408]	; 0x198
 80037c6:	fa92 f2a2 	rbit	r2, r2
 80037ca:	f8c7 2194 	str.w	r2, [r7, #404]	; 0x194
 80037ce:	f8d7 2194 	ldr.w	r2, [r7, #404]	; 0x194
 80037d2:	fab2 f282 	clz	r2, r2
 80037d6:	b2d2      	uxtb	r2, r2
 80037d8:	f042 0220 	orr.w	r2, r2, #32
 80037dc:	b2d2      	uxtb	r2, r2
 80037de:	f002 021f 	and.w	r2, r2, #31
 80037e2:	2101      	movs	r1, #1
 80037e4:	fa01 f202 	lsl.w	r2, r1, r2
 80037e8:	4013      	ands	r3, r2
 80037ea:	2b00      	cmp	r3, #0
 80037ec:	d1ab      	bne.n	8003746 <HAL_RCC_OscConfig+0x24e>
 80037ee:	e002      	b.n	80037f6 <HAL_RCC_OscConfig+0x2fe>
 80037f0:	40021000 	.word	0x40021000
 80037f4:	bf00      	nop
 80037f6:	1d3b      	adds	r3, r7, #4
 80037f8:	681b      	ldr	r3, [r3, #0]
 80037fa:	681b      	ldr	r3, [r3, #0]
 80037fc:	f003 0302 	and.w	r3, r3, #2
 8003800:	2b00      	cmp	r3, #0
 8003802:	f000 816f 	beq.w	8003ae4 <HAL_RCC_OscConfig+0x5ec>
 8003806:	4bd0      	ldr	r3, [pc, #832]	; (8003b48 <HAL_RCC_OscConfig+0x650>)
 8003808:	685b      	ldr	r3, [r3, #4]
 800380a:	f003 030c 	and.w	r3, r3, #12
 800380e:	2b00      	cmp	r3, #0
 8003810:	d00b      	beq.n	800382a <HAL_RCC_OscConfig+0x332>
 8003812:	4bcd      	ldr	r3, [pc, #820]	; (8003b48 <HAL_RCC_OscConfig+0x650>)
 8003814:	685b      	ldr	r3, [r3, #4]
 8003816:	f003 030c 	and.w	r3, r3, #12
 800381a:	2b08      	cmp	r3, #8
 800381c:	d16c      	bne.n	80038f8 <HAL_RCC_OscConfig+0x400>
 800381e:	4bca      	ldr	r3, [pc, #808]	; (8003b48 <HAL_RCC_OscConfig+0x650>)
 8003820:	685b      	ldr	r3, [r3, #4]
 8003822:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003826:	2b00      	cmp	r3, #0
 8003828:	d166      	bne.n	80038f8 <HAL_RCC_OscConfig+0x400>
 800382a:	2302      	movs	r3, #2
 800382c:	f8c7 3190 	str.w	r3, [r7, #400]	; 0x190
 8003830:	f8d7 3190 	ldr.w	r3, [r7, #400]	; 0x190
 8003834:	fa93 f3a3 	rbit	r3, r3
 8003838:	f8c7 318c 	str.w	r3, [r7, #396]	; 0x18c
 800383c:	f8d7 318c 	ldr.w	r3, [r7, #396]	; 0x18c
 8003840:	fab3 f383 	clz	r3, r3
 8003844:	b2db      	uxtb	r3, r3
 8003846:	095b      	lsrs	r3, r3, #5
 8003848:	b2db      	uxtb	r3, r3
 800384a:	f043 0301 	orr.w	r3, r3, #1
 800384e:	b2db      	uxtb	r3, r3
 8003850:	2b01      	cmp	r3, #1
 8003852:	d102      	bne.n	800385a <HAL_RCC_OscConfig+0x362>
 8003854:	4bbc      	ldr	r3, [pc, #752]	; (8003b48 <HAL_RCC_OscConfig+0x650>)
 8003856:	681b      	ldr	r3, [r3, #0]
 8003858:	e013      	b.n	8003882 <HAL_RCC_OscConfig+0x38a>
 800385a:	2302      	movs	r3, #2
 800385c:	f8c7 3188 	str.w	r3, [r7, #392]	; 0x188
 8003860:	f8d7 3188 	ldr.w	r3, [r7, #392]	; 0x188
 8003864:	fa93 f3a3 	rbit	r3, r3
 8003868:	f8c7 3184 	str.w	r3, [r7, #388]	; 0x184
 800386c:	2302      	movs	r3, #2
 800386e:	f8c7 3180 	str.w	r3, [r7, #384]	; 0x180
 8003872:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8003876:	fa93 f3a3 	rbit	r3, r3
 800387a:	f8c7 317c 	str.w	r3, [r7, #380]	; 0x17c
 800387e:	4bb2      	ldr	r3, [pc, #712]	; (8003b48 <HAL_RCC_OscConfig+0x650>)
 8003880:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003882:	2202      	movs	r2, #2
 8003884:	f8c7 2178 	str.w	r2, [r7, #376]	; 0x178
 8003888:	f8d7 2178 	ldr.w	r2, [r7, #376]	; 0x178
 800388c:	fa92 f2a2 	rbit	r2, r2
 8003890:	f8c7 2174 	str.w	r2, [r7, #372]	; 0x174
 8003894:	f8d7 2174 	ldr.w	r2, [r7, #372]	; 0x174
 8003898:	fab2 f282 	clz	r2, r2
 800389c:	b2d2      	uxtb	r2, r2
 800389e:	f042 0220 	orr.w	r2, r2, #32
 80038a2:	b2d2      	uxtb	r2, r2
 80038a4:	f002 021f 	and.w	r2, r2, #31
 80038a8:	2101      	movs	r1, #1
 80038aa:	fa01 f202 	lsl.w	r2, r1, r2
 80038ae:	4013      	ands	r3, r2
 80038b0:	2b00      	cmp	r3, #0
 80038b2:	d007      	beq.n	80038c4 <HAL_RCC_OscConfig+0x3cc>
 80038b4:	1d3b      	adds	r3, r7, #4
 80038b6:	681b      	ldr	r3, [r3, #0]
 80038b8:	691b      	ldr	r3, [r3, #16]
 80038ba:	2b01      	cmp	r3, #1
 80038bc:	d002      	beq.n	80038c4 <HAL_RCC_OscConfig+0x3cc>
 80038be:	2301      	movs	r3, #1
 80038c0:	f000 bd1b 	b.w	80042fa <HAL_RCC_OscConfig+0xe02>
 80038c4:	4ba0      	ldr	r3, [pc, #640]	; (8003b48 <HAL_RCC_OscConfig+0x650>)
 80038c6:	681b      	ldr	r3, [r3, #0]
 80038c8:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80038cc:	1d3b      	adds	r3, r7, #4
 80038ce:	681b      	ldr	r3, [r3, #0]
 80038d0:	695b      	ldr	r3, [r3, #20]
 80038d2:	21f8      	movs	r1, #248	; 0xf8
 80038d4:	f8c7 1170 	str.w	r1, [r7, #368]	; 0x170
 80038d8:	f8d7 1170 	ldr.w	r1, [r7, #368]	; 0x170
 80038dc:	fa91 f1a1 	rbit	r1, r1
 80038e0:	f8c7 116c 	str.w	r1, [r7, #364]	; 0x16c
 80038e4:	f8d7 116c 	ldr.w	r1, [r7, #364]	; 0x16c
 80038e8:	fab1 f181 	clz	r1, r1
 80038ec:	b2c9      	uxtb	r1, r1
 80038ee:	408b      	lsls	r3, r1
 80038f0:	4995      	ldr	r1, [pc, #596]	; (8003b48 <HAL_RCC_OscConfig+0x650>)
 80038f2:	4313      	orrs	r3, r2
 80038f4:	600b      	str	r3, [r1, #0]
 80038f6:	e0f5      	b.n	8003ae4 <HAL_RCC_OscConfig+0x5ec>
 80038f8:	1d3b      	adds	r3, r7, #4
 80038fa:	681b      	ldr	r3, [r3, #0]
 80038fc:	691b      	ldr	r3, [r3, #16]
 80038fe:	2b00      	cmp	r3, #0
 8003900:	f000 8085 	beq.w	8003a0e <HAL_RCC_OscConfig+0x516>
 8003904:	2301      	movs	r3, #1
 8003906:	f8c7 3168 	str.w	r3, [r7, #360]	; 0x168
 800390a:	f8d7 3168 	ldr.w	r3, [r7, #360]	; 0x168
 800390e:	fa93 f3a3 	rbit	r3, r3
 8003912:	f8c7 3164 	str.w	r3, [r7, #356]	; 0x164
 8003916:	f8d7 3164 	ldr.w	r3, [r7, #356]	; 0x164
 800391a:	fab3 f383 	clz	r3, r3
 800391e:	b2db      	uxtb	r3, r3
 8003920:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8003924:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8003928:	009b      	lsls	r3, r3, #2
 800392a:	461a      	mov	r2, r3
 800392c:	2301      	movs	r3, #1
 800392e:	6013      	str	r3, [r2, #0]
 8003930:	f7ff faee 	bl	8002f10 <HAL_GetTick>
 8003934:	f8c7 01f8 	str.w	r0, [r7, #504]	; 0x1f8
 8003938:	e00a      	b.n	8003950 <HAL_RCC_OscConfig+0x458>
 800393a:	f7ff fae9 	bl	8002f10 <HAL_GetTick>
 800393e:	4602      	mov	r2, r0
 8003940:	f8d7 31f8 	ldr.w	r3, [r7, #504]	; 0x1f8
 8003944:	1ad3      	subs	r3, r2, r3
 8003946:	2b02      	cmp	r3, #2
 8003948:	d902      	bls.n	8003950 <HAL_RCC_OscConfig+0x458>
 800394a:	2303      	movs	r3, #3
 800394c:	f000 bcd5 	b.w	80042fa <HAL_RCC_OscConfig+0xe02>
 8003950:	2302      	movs	r3, #2
 8003952:	f8c7 3160 	str.w	r3, [r7, #352]	; 0x160
 8003956:	f8d7 3160 	ldr.w	r3, [r7, #352]	; 0x160
 800395a:	fa93 f3a3 	rbit	r3, r3
 800395e:	f8c7 315c 	str.w	r3, [r7, #348]	; 0x15c
 8003962:	f8d7 315c 	ldr.w	r3, [r7, #348]	; 0x15c
 8003966:	fab3 f383 	clz	r3, r3
 800396a:	b2db      	uxtb	r3, r3
 800396c:	095b      	lsrs	r3, r3, #5
 800396e:	b2db      	uxtb	r3, r3
 8003970:	f043 0301 	orr.w	r3, r3, #1
 8003974:	b2db      	uxtb	r3, r3
 8003976:	2b01      	cmp	r3, #1
 8003978:	d102      	bne.n	8003980 <HAL_RCC_OscConfig+0x488>
 800397a:	4b73      	ldr	r3, [pc, #460]	; (8003b48 <HAL_RCC_OscConfig+0x650>)
 800397c:	681b      	ldr	r3, [r3, #0]
 800397e:	e013      	b.n	80039a8 <HAL_RCC_OscConfig+0x4b0>
 8003980:	2302      	movs	r3, #2
 8003982:	f8c7 3158 	str.w	r3, [r7, #344]	; 0x158
 8003986:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 800398a:	fa93 f3a3 	rbit	r3, r3
 800398e:	f8c7 3154 	str.w	r3, [r7, #340]	; 0x154
 8003992:	2302      	movs	r3, #2
 8003994:	f8c7 3150 	str.w	r3, [r7, #336]	; 0x150
 8003998:	f8d7 3150 	ldr.w	r3, [r7, #336]	; 0x150
 800399c:	fa93 f3a3 	rbit	r3, r3
 80039a0:	f8c7 314c 	str.w	r3, [r7, #332]	; 0x14c
 80039a4:	4b68      	ldr	r3, [pc, #416]	; (8003b48 <HAL_RCC_OscConfig+0x650>)
 80039a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80039a8:	2202      	movs	r2, #2
 80039aa:	f8c7 2148 	str.w	r2, [r7, #328]	; 0x148
 80039ae:	f8d7 2148 	ldr.w	r2, [r7, #328]	; 0x148
 80039b2:	fa92 f2a2 	rbit	r2, r2
 80039b6:	f8c7 2144 	str.w	r2, [r7, #324]	; 0x144
 80039ba:	f8d7 2144 	ldr.w	r2, [r7, #324]	; 0x144
 80039be:	fab2 f282 	clz	r2, r2
 80039c2:	b2d2      	uxtb	r2, r2
 80039c4:	f042 0220 	orr.w	r2, r2, #32
 80039c8:	b2d2      	uxtb	r2, r2
 80039ca:	f002 021f 	and.w	r2, r2, #31
 80039ce:	2101      	movs	r1, #1
 80039d0:	fa01 f202 	lsl.w	r2, r1, r2
 80039d4:	4013      	ands	r3, r2
 80039d6:	2b00      	cmp	r3, #0
 80039d8:	d0af      	beq.n	800393a <HAL_RCC_OscConfig+0x442>
 80039da:	4b5b      	ldr	r3, [pc, #364]	; (8003b48 <HAL_RCC_OscConfig+0x650>)
 80039dc:	681b      	ldr	r3, [r3, #0]
 80039de:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80039e2:	1d3b      	adds	r3, r7, #4
 80039e4:	681b      	ldr	r3, [r3, #0]
 80039e6:	695b      	ldr	r3, [r3, #20]
 80039e8:	21f8      	movs	r1, #248	; 0xf8
 80039ea:	f8c7 1140 	str.w	r1, [r7, #320]	; 0x140
 80039ee:	f8d7 1140 	ldr.w	r1, [r7, #320]	; 0x140
 80039f2:	fa91 f1a1 	rbit	r1, r1
 80039f6:	f8c7 113c 	str.w	r1, [r7, #316]	; 0x13c
 80039fa:	f8d7 113c 	ldr.w	r1, [r7, #316]	; 0x13c
 80039fe:	fab1 f181 	clz	r1, r1
 8003a02:	b2c9      	uxtb	r1, r1
 8003a04:	408b      	lsls	r3, r1
 8003a06:	4950      	ldr	r1, [pc, #320]	; (8003b48 <HAL_RCC_OscConfig+0x650>)
 8003a08:	4313      	orrs	r3, r2
 8003a0a:	600b      	str	r3, [r1, #0]
 8003a0c:	e06a      	b.n	8003ae4 <HAL_RCC_OscConfig+0x5ec>
 8003a0e:	2301      	movs	r3, #1
 8003a10:	f8c7 3138 	str.w	r3, [r7, #312]	; 0x138
 8003a14:	f8d7 3138 	ldr.w	r3, [r7, #312]	; 0x138
 8003a18:	fa93 f3a3 	rbit	r3, r3
 8003a1c:	f8c7 3134 	str.w	r3, [r7, #308]	; 0x134
 8003a20:	f8d7 3134 	ldr.w	r3, [r7, #308]	; 0x134
 8003a24:	fab3 f383 	clz	r3, r3
 8003a28:	b2db      	uxtb	r3, r3
 8003a2a:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8003a2e:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8003a32:	009b      	lsls	r3, r3, #2
 8003a34:	461a      	mov	r2, r3
 8003a36:	2300      	movs	r3, #0
 8003a38:	6013      	str	r3, [r2, #0]
 8003a3a:	f7ff fa69 	bl	8002f10 <HAL_GetTick>
 8003a3e:	f8c7 01f8 	str.w	r0, [r7, #504]	; 0x1f8
 8003a42:	e00a      	b.n	8003a5a <HAL_RCC_OscConfig+0x562>
 8003a44:	f7ff fa64 	bl	8002f10 <HAL_GetTick>
 8003a48:	4602      	mov	r2, r0
 8003a4a:	f8d7 31f8 	ldr.w	r3, [r7, #504]	; 0x1f8
 8003a4e:	1ad3      	subs	r3, r2, r3
 8003a50:	2b02      	cmp	r3, #2
 8003a52:	d902      	bls.n	8003a5a <HAL_RCC_OscConfig+0x562>
 8003a54:	2303      	movs	r3, #3
 8003a56:	f000 bc50 	b.w	80042fa <HAL_RCC_OscConfig+0xe02>
 8003a5a:	2302      	movs	r3, #2
 8003a5c:	f8c7 3130 	str.w	r3, [r7, #304]	; 0x130
 8003a60:	f8d7 3130 	ldr.w	r3, [r7, #304]	; 0x130
 8003a64:	fa93 f3a3 	rbit	r3, r3
 8003a68:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 8003a6c:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003a70:	fab3 f383 	clz	r3, r3
 8003a74:	b2db      	uxtb	r3, r3
 8003a76:	095b      	lsrs	r3, r3, #5
 8003a78:	b2db      	uxtb	r3, r3
 8003a7a:	f043 0301 	orr.w	r3, r3, #1
 8003a7e:	b2db      	uxtb	r3, r3
 8003a80:	2b01      	cmp	r3, #1
 8003a82:	d102      	bne.n	8003a8a <HAL_RCC_OscConfig+0x592>
 8003a84:	4b30      	ldr	r3, [pc, #192]	; (8003b48 <HAL_RCC_OscConfig+0x650>)
 8003a86:	681b      	ldr	r3, [r3, #0]
 8003a88:	e013      	b.n	8003ab2 <HAL_RCC_OscConfig+0x5ba>
 8003a8a:	2302      	movs	r3, #2
 8003a8c:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 8003a90:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 8003a94:	fa93 f3a3 	rbit	r3, r3
 8003a98:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 8003a9c:	2302      	movs	r3, #2
 8003a9e:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
 8003aa2:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 8003aa6:	fa93 f3a3 	rbit	r3, r3
 8003aaa:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
 8003aae:	4b26      	ldr	r3, [pc, #152]	; (8003b48 <HAL_RCC_OscConfig+0x650>)
 8003ab0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ab2:	2202      	movs	r2, #2
 8003ab4:	f8c7 2118 	str.w	r2, [r7, #280]	; 0x118
 8003ab8:	f8d7 2118 	ldr.w	r2, [r7, #280]	; 0x118
 8003abc:	fa92 f2a2 	rbit	r2, r2
 8003ac0:	f8c7 2114 	str.w	r2, [r7, #276]	; 0x114
 8003ac4:	f8d7 2114 	ldr.w	r2, [r7, #276]	; 0x114
 8003ac8:	fab2 f282 	clz	r2, r2
 8003acc:	b2d2      	uxtb	r2, r2
 8003ace:	f042 0220 	orr.w	r2, r2, #32
 8003ad2:	b2d2      	uxtb	r2, r2
 8003ad4:	f002 021f 	and.w	r2, r2, #31
 8003ad8:	2101      	movs	r1, #1
 8003ada:	fa01 f202 	lsl.w	r2, r1, r2
 8003ade:	4013      	ands	r3, r2
 8003ae0:	2b00      	cmp	r3, #0
 8003ae2:	d1af      	bne.n	8003a44 <HAL_RCC_OscConfig+0x54c>
 8003ae4:	1d3b      	adds	r3, r7, #4
 8003ae6:	681b      	ldr	r3, [r3, #0]
 8003ae8:	681b      	ldr	r3, [r3, #0]
 8003aea:	f003 0308 	and.w	r3, r3, #8
 8003aee:	2b00      	cmp	r3, #0
 8003af0:	f000 80da 	beq.w	8003ca8 <HAL_RCC_OscConfig+0x7b0>
 8003af4:	1d3b      	adds	r3, r7, #4
 8003af6:	681b      	ldr	r3, [r3, #0]
 8003af8:	699b      	ldr	r3, [r3, #24]
 8003afa:	2b00      	cmp	r3, #0
 8003afc:	d069      	beq.n	8003bd2 <HAL_RCC_OscConfig+0x6da>
 8003afe:	2301      	movs	r3, #1
 8003b00:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
 8003b04:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8003b08:	fa93 f3a3 	rbit	r3, r3
 8003b0c:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8003b10:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8003b14:	fab3 f383 	clz	r3, r3
 8003b18:	b2db      	uxtb	r3, r3
 8003b1a:	461a      	mov	r2, r3
 8003b1c:	4b0b      	ldr	r3, [pc, #44]	; (8003b4c <HAL_RCC_OscConfig+0x654>)
 8003b1e:	4413      	add	r3, r2
 8003b20:	009b      	lsls	r3, r3, #2
 8003b22:	461a      	mov	r2, r3
 8003b24:	2301      	movs	r3, #1
 8003b26:	6013      	str	r3, [r2, #0]
 8003b28:	f7ff f9f2 	bl	8002f10 <HAL_GetTick>
 8003b2c:	f8c7 01f8 	str.w	r0, [r7, #504]	; 0x1f8
 8003b30:	e00e      	b.n	8003b50 <HAL_RCC_OscConfig+0x658>
 8003b32:	f7ff f9ed 	bl	8002f10 <HAL_GetTick>
 8003b36:	4602      	mov	r2, r0
 8003b38:	f8d7 31f8 	ldr.w	r3, [r7, #504]	; 0x1f8
 8003b3c:	1ad3      	subs	r3, r2, r3
 8003b3e:	2b02      	cmp	r3, #2
 8003b40:	d906      	bls.n	8003b50 <HAL_RCC_OscConfig+0x658>
 8003b42:	2303      	movs	r3, #3
 8003b44:	e3d9      	b.n	80042fa <HAL_RCC_OscConfig+0xe02>
 8003b46:	bf00      	nop
 8003b48:	40021000 	.word	0x40021000
 8003b4c:	10908120 	.word	0x10908120
 8003b50:	2302      	movs	r3, #2
 8003b52:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
 8003b56:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
 8003b5a:	fa93 f3a3 	rbit	r3, r3
 8003b5e:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 8003b62:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8003b66:	2202      	movs	r2, #2
 8003b68:	601a      	str	r2, [r3, #0]
 8003b6a:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8003b6e:	681b      	ldr	r3, [r3, #0]
 8003b70:	fa93 f2a3 	rbit	r2, r3
 8003b74:	f107 03fc 	add.w	r3, r7, #252	; 0xfc
 8003b78:	601a      	str	r2, [r3, #0]
 8003b7a:	f107 03f8 	add.w	r3, r7, #248	; 0xf8
 8003b7e:	2202      	movs	r2, #2
 8003b80:	601a      	str	r2, [r3, #0]
 8003b82:	f107 03f8 	add.w	r3, r7, #248	; 0xf8
 8003b86:	681b      	ldr	r3, [r3, #0]
 8003b88:	fa93 f2a3 	rbit	r2, r3
 8003b8c:	f107 03f4 	add.w	r3, r7, #244	; 0xf4
 8003b90:	601a      	str	r2, [r3, #0]
 8003b92:	4ba5      	ldr	r3, [pc, #660]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003b94:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003b96:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
 8003b9a:	2102      	movs	r1, #2
 8003b9c:	6019      	str	r1, [r3, #0]
 8003b9e:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
 8003ba2:	681b      	ldr	r3, [r3, #0]
 8003ba4:	fa93 f1a3 	rbit	r1, r3
 8003ba8:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 8003bac:	6019      	str	r1, [r3, #0]
 8003bae:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 8003bb2:	681b      	ldr	r3, [r3, #0]
 8003bb4:	fab3 f383 	clz	r3, r3
 8003bb8:	b2db      	uxtb	r3, r3
 8003bba:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 8003bbe:	b2db      	uxtb	r3, r3
 8003bc0:	f003 031f 	and.w	r3, r3, #31
 8003bc4:	2101      	movs	r1, #1
 8003bc6:	fa01 f303 	lsl.w	r3, r1, r3
 8003bca:	4013      	ands	r3, r2
 8003bcc:	2b00      	cmp	r3, #0
 8003bce:	d0b0      	beq.n	8003b32 <HAL_RCC_OscConfig+0x63a>
 8003bd0:	e06a      	b.n	8003ca8 <HAL_RCC_OscConfig+0x7b0>
 8003bd2:	f107 03e8 	add.w	r3, r7, #232	; 0xe8
 8003bd6:	2201      	movs	r2, #1
 8003bd8:	601a      	str	r2, [r3, #0]
 8003bda:	f107 03e8 	add.w	r3, r7, #232	; 0xe8
 8003bde:	681b      	ldr	r3, [r3, #0]
 8003be0:	fa93 f2a3 	rbit	r2, r3
 8003be4:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8003be8:	601a      	str	r2, [r3, #0]
 8003bea:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8003bee:	681b      	ldr	r3, [r3, #0]
 8003bf0:	fab3 f383 	clz	r3, r3
 8003bf4:	b2db      	uxtb	r3, r3
 8003bf6:	461a      	mov	r2, r3
 8003bf8:	4b8c      	ldr	r3, [pc, #560]	; (8003e2c <HAL_RCC_OscConfig+0x934>)
 8003bfa:	4413      	add	r3, r2
 8003bfc:	009b      	lsls	r3, r3, #2
 8003bfe:	461a      	mov	r2, r3
 8003c00:	2300      	movs	r3, #0
 8003c02:	6013      	str	r3, [r2, #0]
 8003c04:	f7ff f984 	bl	8002f10 <HAL_GetTick>
 8003c08:	f8c7 01f8 	str.w	r0, [r7, #504]	; 0x1f8
 8003c0c:	e009      	b.n	8003c22 <HAL_RCC_OscConfig+0x72a>
 8003c0e:	f7ff f97f 	bl	8002f10 <HAL_GetTick>
 8003c12:	4602      	mov	r2, r0
 8003c14:	f8d7 31f8 	ldr.w	r3, [r7, #504]	; 0x1f8
 8003c18:	1ad3      	subs	r3, r2, r3
 8003c1a:	2b02      	cmp	r3, #2
 8003c1c:	d901      	bls.n	8003c22 <HAL_RCC_OscConfig+0x72a>
 8003c1e:	2303      	movs	r3, #3
 8003c20:	e36b      	b.n	80042fa <HAL_RCC_OscConfig+0xe02>
 8003c22:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 8003c26:	2202      	movs	r2, #2
 8003c28:	601a      	str	r2, [r3, #0]
 8003c2a:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 8003c2e:	681b      	ldr	r3, [r3, #0]
 8003c30:	fa93 f2a3 	rbit	r2, r3
 8003c34:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8003c38:	601a      	str	r2, [r3, #0]
 8003c3a:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 8003c3e:	2202      	movs	r2, #2
 8003c40:	601a      	str	r2, [r3, #0]
 8003c42:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	fa93 f2a3 	rbit	r2, r3
 8003c4c:	f107 03d4 	add.w	r3, r7, #212	; 0xd4
 8003c50:	601a      	str	r2, [r3, #0]
 8003c52:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
 8003c56:	2202      	movs	r2, #2
 8003c58:	601a      	str	r2, [r3, #0]
 8003c5a:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	fa93 f2a3 	rbit	r2, r3
 8003c64:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 8003c68:	601a      	str	r2, [r3, #0]
 8003c6a:	4b6f      	ldr	r3, [pc, #444]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003c6c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003c6e:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 8003c72:	2102      	movs	r1, #2
 8003c74:	6019      	str	r1, [r3, #0]
 8003c76:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 8003c7a:	681b      	ldr	r3, [r3, #0]
 8003c7c:	fa93 f1a3 	rbit	r1, r3
 8003c80:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 8003c84:	6019      	str	r1, [r3, #0]
 8003c86:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 8003c8a:	681b      	ldr	r3, [r3, #0]
 8003c8c:	fab3 f383 	clz	r3, r3
 8003c90:	b2db      	uxtb	r3, r3
 8003c92:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 8003c96:	b2db      	uxtb	r3, r3
 8003c98:	f003 031f 	and.w	r3, r3, #31
 8003c9c:	2101      	movs	r1, #1
 8003c9e:	fa01 f303 	lsl.w	r3, r1, r3
 8003ca2:	4013      	ands	r3, r2
 8003ca4:	2b00      	cmp	r3, #0
 8003ca6:	d1b2      	bne.n	8003c0e <HAL_RCC_OscConfig+0x716>
 8003ca8:	1d3b      	adds	r3, r7, #4
 8003caa:	681b      	ldr	r3, [r3, #0]
 8003cac:	681b      	ldr	r3, [r3, #0]
 8003cae:	f003 0304 	and.w	r3, r3, #4
 8003cb2:	2b00      	cmp	r3, #0
 8003cb4:	f000 8158 	beq.w	8003f68 <HAL_RCC_OscConfig+0xa70>
 8003cb8:	2300      	movs	r3, #0
 8003cba:	f887 31ff 	strb.w	r3, [r7, #511]	; 0x1ff
 8003cbe:	4b5a      	ldr	r3, [pc, #360]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003cc0:	69db      	ldr	r3, [r3, #28]
 8003cc2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003cc6:	2b00      	cmp	r3, #0
 8003cc8:	d112      	bne.n	8003cf0 <HAL_RCC_OscConfig+0x7f8>
 8003cca:	4b57      	ldr	r3, [pc, #348]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003ccc:	69db      	ldr	r3, [r3, #28]
 8003cce:	4a56      	ldr	r2, [pc, #344]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003cd0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003cd4:	61d3      	str	r3, [r2, #28]
 8003cd6:	4b54      	ldr	r3, [pc, #336]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003cd8:	69db      	ldr	r3, [r3, #28]
 8003cda:	f003 5280 	and.w	r2, r3, #268435456	; 0x10000000
 8003cde:	f107 0308 	add.w	r3, r7, #8
 8003ce2:	601a      	str	r2, [r3, #0]
 8003ce4:	f107 0308 	add.w	r3, r7, #8
 8003ce8:	681b      	ldr	r3, [r3, #0]
 8003cea:	2301      	movs	r3, #1
 8003cec:	f887 31ff 	strb.w	r3, [r7, #511]	; 0x1ff
 8003cf0:	4b4f      	ldr	r3, [pc, #316]	; (8003e30 <HAL_RCC_OscConfig+0x938>)
 8003cf2:	681b      	ldr	r3, [r3, #0]
 8003cf4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003cf8:	2b00      	cmp	r3, #0
 8003cfa:	d11a      	bne.n	8003d32 <HAL_RCC_OscConfig+0x83a>
 8003cfc:	4b4c      	ldr	r3, [pc, #304]	; (8003e30 <HAL_RCC_OscConfig+0x938>)
 8003cfe:	681b      	ldr	r3, [r3, #0]
 8003d00:	4a4b      	ldr	r2, [pc, #300]	; (8003e30 <HAL_RCC_OscConfig+0x938>)
 8003d02:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003d06:	6013      	str	r3, [r2, #0]
 8003d08:	f7ff f902 	bl	8002f10 <HAL_GetTick>
 8003d0c:	f8c7 01f8 	str.w	r0, [r7, #504]	; 0x1f8
 8003d10:	e009      	b.n	8003d26 <HAL_RCC_OscConfig+0x82e>
 8003d12:	f7ff f8fd 	bl	8002f10 <HAL_GetTick>
 8003d16:	4602      	mov	r2, r0
 8003d18:	f8d7 31f8 	ldr.w	r3, [r7, #504]	; 0x1f8
 8003d1c:	1ad3      	subs	r3, r2, r3
 8003d1e:	2b64      	cmp	r3, #100	; 0x64
 8003d20:	d901      	bls.n	8003d26 <HAL_RCC_OscConfig+0x82e>
 8003d22:	2303      	movs	r3, #3
 8003d24:	e2e9      	b.n	80042fa <HAL_RCC_OscConfig+0xe02>
 8003d26:	4b42      	ldr	r3, [pc, #264]	; (8003e30 <HAL_RCC_OscConfig+0x938>)
 8003d28:	681b      	ldr	r3, [r3, #0]
 8003d2a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003d2e:	2b00      	cmp	r3, #0
 8003d30:	d0ef      	beq.n	8003d12 <HAL_RCC_OscConfig+0x81a>
 8003d32:	1d3b      	adds	r3, r7, #4
 8003d34:	681b      	ldr	r3, [r3, #0]
 8003d36:	68db      	ldr	r3, [r3, #12]
 8003d38:	2b01      	cmp	r3, #1
 8003d3a:	d106      	bne.n	8003d4a <HAL_RCC_OscConfig+0x852>
 8003d3c:	4b3a      	ldr	r3, [pc, #232]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003d3e:	6a1b      	ldr	r3, [r3, #32]
 8003d40:	4a39      	ldr	r2, [pc, #228]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003d42:	f043 0301 	orr.w	r3, r3, #1
 8003d46:	6213      	str	r3, [r2, #32]
 8003d48:	e02f      	b.n	8003daa <HAL_RCC_OscConfig+0x8b2>
 8003d4a:	1d3b      	adds	r3, r7, #4
 8003d4c:	681b      	ldr	r3, [r3, #0]
 8003d4e:	68db      	ldr	r3, [r3, #12]
 8003d50:	2b00      	cmp	r3, #0
 8003d52:	d10c      	bne.n	8003d6e <HAL_RCC_OscConfig+0x876>
 8003d54:	4b34      	ldr	r3, [pc, #208]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003d56:	6a1b      	ldr	r3, [r3, #32]
 8003d58:	4a33      	ldr	r2, [pc, #204]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003d5a:	f023 0301 	bic.w	r3, r3, #1
 8003d5e:	6213      	str	r3, [r2, #32]
 8003d60:	4b31      	ldr	r3, [pc, #196]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003d62:	6a1b      	ldr	r3, [r3, #32]
 8003d64:	4a30      	ldr	r2, [pc, #192]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003d66:	f023 0304 	bic.w	r3, r3, #4
 8003d6a:	6213      	str	r3, [r2, #32]
 8003d6c:	e01d      	b.n	8003daa <HAL_RCC_OscConfig+0x8b2>
 8003d6e:	1d3b      	adds	r3, r7, #4
 8003d70:	681b      	ldr	r3, [r3, #0]
 8003d72:	68db      	ldr	r3, [r3, #12]
 8003d74:	2b05      	cmp	r3, #5
 8003d76:	d10c      	bne.n	8003d92 <HAL_RCC_OscConfig+0x89a>
 8003d78:	4b2b      	ldr	r3, [pc, #172]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003d7a:	6a1b      	ldr	r3, [r3, #32]
 8003d7c:	4a2a      	ldr	r2, [pc, #168]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003d7e:	f043 0304 	orr.w	r3, r3, #4
 8003d82:	6213      	str	r3, [r2, #32]
 8003d84:	4b28      	ldr	r3, [pc, #160]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003d86:	6a1b      	ldr	r3, [r3, #32]
 8003d88:	4a27      	ldr	r2, [pc, #156]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003d8a:	f043 0301 	orr.w	r3, r3, #1
 8003d8e:	6213      	str	r3, [r2, #32]
 8003d90:	e00b      	b.n	8003daa <HAL_RCC_OscConfig+0x8b2>
 8003d92:	4b25      	ldr	r3, [pc, #148]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003d94:	6a1b      	ldr	r3, [r3, #32]
 8003d96:	4a24      	ldr	r2, [pc, #144]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003d98:	f023 0301 	bic.w	r3, r3, #1
 8003d9c:	6213      	str	r3, [r2, #32]
 8003d9e:	4b22      	ldr	r3, [pc, #136]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003da0:	6a1b      	ldr	r3, [r3, #32]
 8003da2:	4a21      	ldr	r2, [pc, #132]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003da4:	f023 0304 	bic.w	r3, r3, #4
 8003da8:	6213      	str	r3, [r2, #32]
 8003daa:	1d3b      	adds	r3, r7, #4
 8003dac:	681b      	ldr	r3, [r3, #0]
 8003dae:	68db      	ldr	r3, [r3, #12]
 8003db0:	2b00      	cmp	r3, #0
 8003db2:	d06b      	beq.n	8003e8c <HAL_RCC_OscConfig+0x994>
 8003db4:	f7ff f8ac 	bl	8002f10 <HAL_GetTick>
 8003db8:	f8c7 01f8 	str.w	r0, [r7, #504]	; 0x1f8
 8003dbc:	e00b      	b.n	8003dd6 <HAL_RCC_OscConfig+0x8de>
 8003dbe:	f7ff f8a7 	bl	8002f10 <HAL_GetTick>
 8003dc2:	4602      	mov	r2, r0
 8003dc4:	f8d7 31f8 	ldr.w	r3, [r7, #504]	; 0x1f8
 8003dc8:	1ad3      	subs	r3, r2, r3
 8003dca:	f241 3288 	movw	r2, #5000	; 0x1388
 8003dce:	4293      	cmp	r3, r2
 8003dd0:	d901      	bls.n	8003dd6 <HAL_RCC_OscConfig+0x8de>
 8003dd2:	2303      	movs	r3, #3
 8003dd4:	e291      	b.n	80042fa <HAL_RCC_OscConfig+0xe02>
 8003dd6:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 8003dda:	2202      	movs	r2, #2
 8003ddc:	601a      	str	r2, [r3, #0]
 8003dde:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 8003de2:	681b      	ldr	r3, [r3, #0]
 8003de4:	fa93 f2a3 	rbit	r2, r3
 8003de8:	f107 03bc 	add.w	r3, r7, #188	; 0xbc
 8003dec:	601a      	str	r2, [r3, #0]
 8003dee:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 8003df2:	2202      	movs	r2, #2
 8003df4:	601a      	str	r2, [r3, #0]
 8003df6:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 8003dfa:	681b      	ldr	r3, [r3, #0]
 8003dfc:	fa93 f2a3 	rbit	r2, r3
 8003e00:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8003e04:	601a      	str	r2, [r3, #0]
 8003e06:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8003e0a:	681b      	ldr	r3, [r3, #0]
 8003e0c:	fab3 f383 	clz	r3, r3
 8003e10:	b2db      	uxtb	r3, r3
 8003e12:	095b      	lsrs	r3, r3, #5
 8003e14:	b2db      	uxtb	r3, r3
 8003e16:	f043 0302 	orr.w	r3, r3, #2
 8003e1a:	b2db      	uxtb	r3, r3
 8003e1c:	2b02      	cmp	r3, #2
 8003e1e:	d109      	bne.n	8003e34 <HAL_RCC_OscConfig+0x93c>
 8003e20:	4b01      	ldr	r3, [pc, #4]	; (8003e28 <HAL_RCC_OscConfig+0x930>)
 8003e22:	6a1b      	ldr	r3, [r3, #32]
 8003e24:	e014      	b.n	8003e50 <HAL_RCC_OscConfig+0x958>
 8003e26:	bf00      	nop
 8003e28:	40021000 	.word	0x40021000
 8003e2c:	10908120 	.word	0x10908120
 8003e30:	40007000 	.word	0x40007000
 8003e34:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
 8003e38:	2202      	movs	r2, #2
 8003e3a:	601a      	str	r2, [r3, #0]
 8003e3c:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
 8003e40:	681b      	ldr	r3, [r3, #0]
 8003e42:	fa93 f2a3 	rbit	r2, r3
 8003e46:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 8003e4a:	601a      	str	r2, [r3, #0]
 8003e4c:	4bbb      	ldr	r3, [pc, #748]	; (800413c <HAL_RCC_OscConfig+0xc44>)
 8003e4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e50:	f107 02a8 	add.w	r2, r7, #168	; 0xa8
 8003e54:	2102      	movs	r1, #2
 8003e56:	6011      	str	r1, [r2, #0]
 8003e58:	f107 02a8 	add.w	r2, r7, #168	; 0xa8
 8003e5c:	6812      	ldr	r2, [r2, #0]
 8003e5e:	fa92 f1a2 	rbit	r1, r2
 8003e62:	f107 02a4 	add.w	r2, r7, #164	; 0xa4
 8003e66:	6011      	str	r1, [r2, #0]
 8003e68:	f107 02a4 	add.w	r2, r7, #164	; 0xa4
 8003e6c:	6812      	ldr	r2, [r2, #0]
 8003e6e:	fab2 f282 	clz	r2, r2
 8003e72:	b2d2      	uxtb	r2, r2
 8003e74:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003e78:	b2d2      	uxtb	r2, r2
 8003e7a:	f002 021f 	and.w	r2, r2, #31
 8003e7e:	2101      	movs	r1, #1
 8003e80:	fa01 f202 	lsl.w	r2, r1, r2
 8003e84:	4013      	ands	r3, r2
 8003e86:	2b00      	cmp	r3, #0
 8003e88:	d099      	beq.n	8003dbe <HAL_RCC_OscConfig+0x8c6>
 8003e8a:	e063      	b.n	8003f54 <HAL_RCC_OscConfig+0xa5c>
 8003e8c:	f7ff f840 	bl	8002f10 <HAL_GetTick>
 8003e90:	f8c7 01f8 	str.w	r0, [r7, #504]	; 0x1f8
 8003e94:	e00b      	b.n	8003eae <HAL_RCC_OscConfig+0x9b6>
 8003e96:	f7ff f83b 	bl	8002f10 <HAL_GetTick>
 8003e9a:	4602      	mov	r2, r0
 8003e9c:	f8d7 31f8 	ldr.w	r3, [r7, #504]	; 0x1f8
 8003ea0:	1ad3      	subs	r3, r2, r3
 8003ea2:	f241 3288 	movw	r2, #5000	; 0x1388
 8003ea6:	4293      	cmp	r3, r2
 8003ea8:	d901      	bls.n	8003eae <HAL_RCC_OscConfig+0x9b6>
 8003eaa:	2303      	movs	r3, #3
 8003eac:	e225      	b.n	80042fa <HAL_RCC_OscConfig+0xe02>
 8003eae:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8003eb2:	2202      	movs	r2, #2
 8003eb4:	601a      	str	r2, [r3, #0]
 8003eb6:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8003eba:	681b      	ldr	r3, [r3, #0]
 8003ebc:	fa93 f2a3 	rbit	r2, r3
 8003ec0:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8003ec4:	601a      	str	r2, [r3, #0]
 8003ec6:	f107 0398 	add.w	r3, r7, #152	; 0x98
 8003eca:	2202      	movs	r2, #2
 8003ecc:	601a      	str	r2, [r3, #0]
 8003ece:	f107 0398 	add.w	r3, r7, #152	; 0x98
 8003ed2:	681b      	ldr	r3, [r3, #0]
 8003ed4:	fa93 f2a3 	rbit	r2, r3
 8003ed8:	f107 0394 	add.w	r3, r7, #148	; 0x94
 8003edc:	601a      	str	r2, [r3, #0]
 8003ede:	f107 0394 	add.w	r3, r7, #148	; 0x94
 8003ee2:	681b      	ldr	r3, [r3, #0]
 8003ee4:	fab3 f383 	clz	r3, r3
 8003ee8:	b2db      	uxtb	r3, r3
 8003eea:	095b      	lsrs	r3, r3, #5
 8003eec:	b2db      	uxtb	r3, r3
 8003eee:	f043 0302 	orr.w	r3, r3, #2
 8003ef2:	b2db      	uxtb	r3, r3
 8003ef4:	2b02      	cmp	r3, #2
 8003ef6:	d102      	bne.n	8003efe <HAL_RCC_OscConfig+0xa06>
 8003ef8:	4b90      	ldr	r3, [pc, #576]	; (800413c <HAL_RCC_OscConfig+0xc44>)
 8003efa:	6a1b      	ldr	r3, [r3, #32]
 8003efc:	e00d      	b.n	8003f1a <HAL_RCC_OscConfig+0xa22>
 8003efe:	f107 0390 	add.w	r3, r7, #144	; 0x90
 8003f02:	2202      	movs	r2, #2
 8003f04:	601a      	str	r2, [r3, #0]
 8003f06:	f107 0390 	add.w	r3, r7, #144	; 0x90
 8003f0a:	681b      	ldr	r3, [r3, #0]
 8003f0c:	fa93 f2a3 	rbit	r2, r3
 8003f10:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 8003f14:	601a      	str	r2, [r3, #0]
 8003f16:	4b89      	ldr	r3, [pc, #548]	; (800413c <HAL_RCC_OscConfig+0xc44>)
 8003f18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f1a:	f107 0288 	add.w	r2, r7, #136	; 0x88
 8003f1e:	2102      	movs	r1, #2
 8003f20:	6011      	str	r1, [r2, #0]
 8003f22:	f107 0288 	add.w	r2, r7, #136	; 0x88
 8003f26:	6812      	ldr	r2, [r2, #0]
 8003f28:	fa92 f1a2 	rbit	r1, r2
 8003f2c:	f107 0284 	add.w	r2, r7, #132	; 0x84
 8003f30:	6011      	str	r1, [r2, #0]
 8003f32:	f107 0284 	add.w	r2, r7, #132	; 0x84
 8003f36:	6812      	ldr	r2, [r2, #0]
 8003f38:	fab2 f282 	clz	r2, r2
 8003f3c:	b2d2      	uxtb	r2, r2
 8003f3e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003f42:	b2d2      	uxtb	r2, r2
 8003f44:	f002 021f 	and.w	r2, r2, #31
 8003f48:	2101      	movs	r1, #1
 8003f4a:	fa01 f202 	lsl.w	r2, r1, r2
 8003f4e:	4013      	ands	r3, r2
 8003f50:	2b00      	cmp	r3, #0
 8003f52:	d1a0      	bne.n	8003e96 <HAL_RCC_OscConfig+0x99e>
 8003f54:	f897 31ff 	ldrb.w	r3, [r7, #511]	; 0x1ff
 8003f58:	2b01      	cmp	r3, #1
 8003f5a:	d105      	bne.n	8003f68 <HAL_RCC_OscConfig+0xa70>
 8003f5c:	4b77      	ldr	r3, [pc, #476]	; (800413c <HAL_RCC_OscConfig+0xc44>)
 8003f5e:	69db      	ldr	r3, [r3, #28]
 8003f60:	4a76      	ldr	r2, [pc, #472]	; (800413c <HAL_RCC_OscConfig+0xc44>)
 8003f62:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003f66:	61d3      	str	r3, [r2, #28]
 8003f68:	1d3b      	adds	r3, r7, #4
 8003f6a:	681b      	ldr	r3, [r3, #0]
 8003f6c:	69db      	ldr	r3, [r3, #28]
 8003f6e:	2b00      	cmp	r3, #0
 8003f70:	f000 81c2 	beq.w	80042f8 <HAL_RCC_OscConfig+0xe00>
 8003f74:	4b71      	ldr	r3, [pc, #452]	; (800413c <HAL_RCC_OscConfig+0xc44>)
 8003f76:	685b      	ldr	r3, [r3, #4]
 8003f78:	f003 030c 	and.w	r3, r3, #12
 8003f7c:	2b08      	cmp	r3, #8
 8003f7e:	f000 819c 	beq.w	80042ba <HAL_RCC_OscConfig+0xdc2>
 8003f82:	1d3b      	adds	r3, r7, #4
 8003f84:	681b      	ldr	r3, [r3, #0]
 8003f86:	69db      	ldr	r3, [r3, #28]
 8003f88:	2b02      	cmp	r3, #2
 8003f8a:	f040 8114 	bne.w	80041b6 <HAL_RCC_OscConfig+0xcbe>
 8003f8e:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8003f92:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8003f96:	601a      	str	r2, [r3, #0]
 8003f98:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8003f9c:	681b      	ldr	r3, [r3, #0]
 8003f9e:	fa93 f2a3 	rbit	r2, r3
 8003fa2:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 8003fa6:	601a      	str	r2, [r3, #0]
 8003fa8:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 8003fac:	681b      	ldr	r3, [r3, #0]
 8003fae:	fab3 f383 	clz	r3, r3
 8003fb2:	b2db      	uxtb	r3, r3
 8003fb4:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8003fb8:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8003fbc:	009b      	lsls	r3, r3, #2
 8003fbe:	461a      	mov	r2, r3
 8003fc0:	2300      	movs	r3, #0
 8003fc2:	6013      	str	r3, [r2, #0]
 8003fc4:	f7fe ffa4 	bl	8002f10 <HAL_GetTick>
 8003fc8:	f8c7 01f8 	str.w	r0, [r7, #504]	; 0x1f8
 8003fcc:	e009      	b.n	8003fe2 <HAL_RCC_OscConfig+0xaea>
 8003fce:	f7fe ff9f 	bl	8002f10 <HAL_GetTick>
 8003fd2:	4602      	mov	r2, r0
 8003fd4:	f8d7 31f8 	ldr.w	r3, [r7, #504]	; 0x1f8
 8003fd8:	1ad3      	subs	r3, r2, r3
 8003fda:	2b02      	cmp	r3, #2
 8003fdc:	d901      	bls.n	8003fe2 <HAL_RCC_OscConfig+0xaea>
 8003fde:	2303      	movs	r3, #3
 8003fe0:	e18b      	b.n	80042fa <HAL_RCC_OscConfig+0xe02>
 8003fe2:	f107 0378 	add.w	r3, r7, #120	; 0x78
 8003fe6:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8003fea:	601a      	str	r2, [r3, #0]
 8003fec:	f107 0378 	add.w	r3, r7, #120	; 0x78
 8003ff0:	681b      	ldr	r3, [r3, #0]
 8003ff2:	fa93 f2a3 	rbit	r2, r3
 8003ff6:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8003ffa:	601a      	str	r2, [r3, #0]
 8003ffc:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8004000:	681b      	ldr	r3, [r3, #0]
 8004002:	fab3 f383 	clz	r3, r3
 8004006:	b2db      	uxtb	r3, r3
 8004008:	095b      	lsrs	r3, r3, #5
 800400a:	b2db      	uxtb	r3, r3
 800400c:	f043 0301 	orr.w	r3, r3, #1
 8004010:	b2db      	uxtb	r3, r3
 8004012:	2b01      	cmp	r3, #1
 8004014:	d102      	bne.n	800401c <HAL_RCC_OscConfig+0xb24>
 8004016:	4b49      	ldr	r3, [pc, #292]	; (800413c <HAL_RCC_OscConfig+0xc44>)
 8004018:	681b      	ldr	r3, [r3, #0]
 800401a:	e01b      	b.n	8004054 <HAL_RCC_OscConfig+0xb5c>
 800401c:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8004020:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8004024:	601a      	str	r2, [r3, #0]
 8004026:	f107 0370 	add.w	r3, r7, #112	; 0x70
 800402a:	681b      	ldr	r3, [r3, #0]
 800402c:	fa93 f2a3 	rbit	r2, r3
 8004030:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 8004034:	601a      	str	r2, [r3, #0]
 8004036:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800403a:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 800403e:	601a      	str	r2, [r3, #0]
 8004040:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8004044:	681b      	ldr	r3, [r3, #0]
 8004046:	fa93 f2a3 	rbit	r2, r3
 800404a:	f107 0364 	add.w	r3, r7, #100	; 0x64
 800404e:	601a      	str	r2, [r3, #0]
 8004050:	4b3a      	ldr	r3, [pc, #232]	; (800413c <HAL_RCC_OscConfig+0xc44>)
 8004052:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004054:	f107 0260 	add.w	r2, r7, #96	; 0x60
 8004058:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 800405c:	6011      	str	r1, [r2, #0]
 800405e:	f107 0260 	add.w	r2, r7, #96	; 0x60
 8004062:	6812      	ldr	r2, [r2, #0]
 8004064:	fa92 f1a2 	rbit	r1, r2
 8004068:	f107 025c 	add.w	r2, r7, #92	; 0x5c
 800406c:	6011      	str	r1, [r2, #0]
 800406e:	f107 025c 	add.w	r2, r7, #92	; 0x5c
 8004072:	6812      	ldr	r2, [r2, #0]
 8004074:	fab2 f282 	clz	r2, r2
 8004078:	b2d2      	uxtb	r2, r2
 800407a:	f042 0220 	orr.w	r2, r2, #32
 800407e:	b2d2      	uxtb	r2, r2
 8004080:	f002 021f 	and.w	r2, r2, #31
 8004084:	2101      	movs	r1, #1
 8004086:	fa01 f202 	lsl.w	r2, r1, r2
 800408a:	4013      	ands	r3, r2
 800408c:	2b00      	cmp	r3, #0
 800408e:	d19e      	bne.n	8003fce <HAL_RCC_OscConfig+0xad6>
 8004090:	4b2a      	ldr	r3, [pc, #168]	; (800413c <HAL_RCC_OscConfig+0xc44>)
 8004092:	685b      	ldr	r3, [r3, #4]
 8004094:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8004098:	1d3b      	adds	r3, r7, #4
 800409a:	681b      	ldr	r3, [r3, #0]
 800409c:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800409e:	1d3b      	adds	r3, r7, #4
 80040a0:	681b      	ldr	r3, [r3, #0]
 80040a2:	6a1b      	ldr	r3, [r3, #32]
 80040a4:	430b      	orrs	r3, r1
 80040a6:	4925      	ldr	r1, [pc, #148]	; (800413c <HAL_RCC_OscConfig+0xc44>)
 80040a8:	4313      	orrs	r3, r2
 80040aa:	604b      	str	r3, [r1, #4]
 80040ac:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80040b0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80040b4:	601a      	str	r2, [r3, #0]
 80040b6:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80040ba:	681b      	ldr	r3, [r3, #0]
 80040bc:	fa93 f2a3 	rbit	r2, r3
 80040c0:	f107 0354 	add.w	r3, r7, #84	; 0x54
 80040c4:	601a      	str	r2, [r3, #0]
 80040c6:	f107 0354 	add.w	r3, r7, #84	; 0x54
 80040ca:	681b      	ldr	r3, [r3, #0]
 80040cc:	fab3 f383 	clz	r3, r3
 80040d0:	b2db      	uxtb	r3, r3
 80040d2:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 80040d6:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 80040da:	009b      	lsls	r3, r3, #2
 80040dc:	461a      	mov	r2, r3
 80040de:	2301      	movs	r3, #1
 80040e0:	6013      	str	r3, [r2, #0]
 80040e2:	f7fe ff15 	bl	8002f10 <HAL_GetTick>
 80040e6:	f8c7 01f8 	str.w	r0, [r7, #504]	; 0x1f8
 80040ea:	e009      	b.n	8004100 <HAL_RCC_OscConfig+0xc08>
 80040ec:	f7fe ff10 	bl	8002f10 <HAL_GetTick>
 80040f0:	4602      	mov	r2, r0
 80040f2:	f8d7 31f8 	ldr.w	r3, [r7, #504]	; 0x1f8
 80040f6:	1ad3      	subs	r3, r2, r3
 80040f8:	2b02      	cmp	r3, #2
 80040fa:	d901      	bls.n	8004100 <HAL_RCC_OscConfig+0xc08>
 80040fc:	2303      	movs	r3, #3
 80040fe:	e0fc      	b.n	80042fa <HAL_RCC_OscConfig+0xe02>
 8004100:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8004104:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8004108:	601a      	str	r2, [r3, #0]
 800410a:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800410e:	681b      	ldr	r3, [r3, #0]
 8004110:	fa93 f2a3 	rbit	r2, r3
 8004114:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8004118:	601a      	str	r2, [r3, #0]
 800411a:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800411e:	681b      	ldr	r3, [r3, #0]
 8004120:	fab3 f383 	clz	r3, r3
 8004124:	b2db      	uxtb	r3, r3
 8004126:	095b      	lsrs	r3, r3, #5
 8004128:	b2db      	uxtb	r3, r3
 800412a:	f043 0301 	orr.w	r3, r3, #1
 800412e:	b2db      	uxtb	r3, r3
 8004130:	2b01      	cmp	r3, #1
 8004132:	d105      	bne.n	8004140 <HAL_RCC_OscConfig+0xc48>
 8004134:	4b01      	ldr	r3, [pc, #4]	; (800413c <HAL_RCC_OscConfig+0xc44>)
 8004136:	681b      	ldr	r3, [r3, #0]
 8004138:	e01e      	b.n	8004178 <HAL_RCC_OscConfig+0xc80>
 800413a:	bf00      	nop
 800413c:	40021000 	.word	0x40021000
 8004140:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8004144:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8004148:	601a      	str	r2, [r3, #0]
 800414a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800414e:	681b      	ldr	r3, [r3, #0]
 8004150:	fa93 f2a3 	rbit	r2, r3
 8004154:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8004158:	601a      	str	r2, [r3, #0]
 800415a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800415e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8004162:	601a      	str	r2, [r3, #0]
 8004164:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8004168:	681b      	ldr	r3, [r3, #0]
 800416a:	fa93 f2a3 	rbit	r2, r3
 800416e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8004172:	601a      	str	r2, [r3, #0]
 8004174:	4b63      	ldr	r3, [pc, #396]	; (8004304 <HAL_RCC_OscConfig+0xe0c>)
 8004176:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004178:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800417c:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8004180:	6011      	str	r1, [r2, #0]
 8004182:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8004186:	6812      	ldr	r2, [r2, #0]
 8004188:	fa92 f1a2 	rbit	r1, r2
 800418c:	f107 0234 	add.w	r2, r7, #52	; 0x34
 8004190:	6011      	str	r1, [r2, #0]
 8004192:	f107 0234 	add.w	r2, r7, #52	; 0x34
 8004196:	6812      	ldr	r2, [r2, #0]
 8004198:	fab2 f282 	clz	r2, r2
 800419c:	b2d2      	uxtb	r2, r2
 800419e:	f042 0220 	orr.w	r2, r2, #32
 80041a2:	b2d2      	uxtb	r2, r2
 80041a4:	f002 021f 	and.w	r2, r2, #31
 80041a8:	2101      	movs	r1, #1
 80041aa:	fa01 f202 	lsl.w	r2, r1, r2
 80041ae:	4013      	ands	r3, r2
 80041b0:	2b00      	cmp	r3, #0
 80041b2:	d09b      	beq.n	80040ec <HAL_RCC_OscConfig+0xbf4>
 80041b4:	e0a0      	b.n	80042f8 <HAL_RCC_OscConfig+0xe00>
 80041b6:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80041ba:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80041be:	601a      	str	r2, [r3, #0]
 80041c0:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80041c4:	681b      	ldr	r3, [r3, #0]
 80041c6:	fa93 f2a3 	rbit	r2, r3
 80041ca:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80041ce:	601a      	str	r2, [r3, #0]
 80041d0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80041d4:	681b      	ldr	r3, [r3, #0]
 80041d6:	fab3 f383 	clz	r3, r3
 80041da:	b2db      	uxtb	r3, r3
 80041dc:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 80041e0:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 80041e4:	009b      	lsls	r3, r3, #2
 80041e6:	461a      	mov	r2, r3
 80041e8:	2300      	movs	r3, #0
 80041ea:	6013      	str	r3, [r2, #0]
 80041ec:	f7fe fe90 	bl	8002f10 <HAL_GetTick>
 80041f0:	f8c7 01f8 	str.w	r0, [r7, #504]	; 0x1f8
 80041f4:	e009      	b.n	800420a <HAL_RCC_OscConfig+0xd12>
 80041f6:	f7fe fe8b 	bl	8002f10 <HAL_GetTick>
 80041fa:	4602      	mov	r2, r0
 80041fc:	f8d7 31f8 	ldr.w	r3, [r7, #504]	; 0x1f8
 8004200:	1ad3      	subs	r3, r2, r3
 8004202:	2b02      	cmp	r3, #2
 8004204:	d901      	bls.n	800420a <HAL_RCC_OscConfig+0xd12>
 8004206:	2303      	movs	r3, #3
 8004208:	e077      	b.n	80042fa <HAL_RCC_OscConfig+0xe02>
 800420a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800420e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8004212:	601a      	str	r2, [r3, #0]
 8004214:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8004218:	681b      	ldr	r3, [r3, #0]
 800421a:	fa93 f2a3 	rbit	r2, r3
 800421e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004222:	601a      	str	r2, [r3, #0]
 8004224:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004228:	681b      	ldr	r3, [r3, #0]
 800422a:	fab3 f383 	clz	r3, r3
 800422e:	b2db      	uxtb	r3, r3
 8004230:	095b      	lsrs	r3, r3, #5
 8004232:	b2db      	uxtb	r3, r3
 8004234:	f043 0301 	orr.w	r3, r3, #1
 8004238:	b2db      	uxtb	r3, r3
 800423a:	2b01      	cmp	r3, #1
 800423c:	d102      	bne.n	8004244 <HAL_RCC_OscConfig+0xd4c>
 800423e:	4b31      	ldr	r3, [pc, #196]	; (8004304 <HAL_RCC_OscConfig+0xe0c>)
 8004240:	681b      	ldr	r3, [r3, #0]
 8004242:	e01b      	b.n	800427c <HAL_RCC_OscConfig+0xd84>
 8004244:	f107 0320 	add.w	r3, r7, #32
 8004248:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 800424c:	601a      	str	r2, [r3, #0]
 800424e:	f107 0320 	add.w	r3, r7, #32
 8004252:	681b      	ldr	r3, [r3, #0]
 8004254:	fa93 f2a3 	rbit	r2, r3
 8004258:	f107 031c 	add.w	r3, r7, #28
 800425c:	601a      	str	r2, [r3, #0]
 800425e:	f107 0318 	add.w	r3, r7, #24
 8004262:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8004266:	601a      	str	r2, [r3, #0]
 8004268:	f107 0318 	add.w	r3, r7, #24
 800426c:	681b      	ldr	r3, [r3, #0]
 800426e:	fa93 f2a3 	rbit	r2, r3
 8004272:	f107 0314 	add.w	r3, r7, #20
 8004276:	601a      	str	r2, [r3, #0]
 8004278:	4b22      	ldr	r3, [pc, #136]	; (8004304 <HAL_RCC_OscConfig+0xe0c>)
 800427a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800427c:	f107 0210 	add.w	r2, r7, #16
 8004280:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8004284:	6011      	str	r1, [r2, #0]
 8004286:	f107 0210 	add.w	r2, r7, #16
 800428a:	6812      	ldr	r2, [r2, #0]
 800428c:	fa92 f1a2 	rbit	r1, r2
 8004290:	f107 020c 	add.w	r2, r7, #12
 8004294:	6011      	str	r1, [r2, #0]
 8004296:	f107 020c 	add.w	r2, r7, #12
 800429a:	6812      	ldr	r2, [r2, #0]
 800429c:	fab2 f282 	clz	r2, r2
 80042a0:	b2d2      	uxtb	r2, r2
 80042a2:	f042 0220 	orr.w	r2, r2, #32
 80042a6:	b2d2      	uxtb	r2, r2
 80042a8:	f002 021f 	and.w	r2, r2, #31
 80042ac:	2101      	movs	r1, #1
 80042ae:	fa01 f202 	lsl.w	r2, r1, r2
 80042b2:	4013      	ands	r3, r2
 80042b4:	2b00      	cmp	r3, #0
 80042b6:	d19e      	bne.n	80041f6 <HAL_RCC_OscConfig+0xcfe>
 80042b8:	e01e      	b.n	80042f8 <HAL_RCC_OscConfig+0xe00>
 80042ba:	1d3b      	adds	r3, r7, #4
 80042bc:	681b      	ldr	r3, [r3, #0]
 80042be:	69db      	ldr	r3, [r3, #28]
 80042c0:	2b01      	cmp	r3, #1
 80042c2:	d101      	bne.n	80042c8 <HAL_RCC_OscConfig+0xdd0>
 80042c4:	2301      	movs	r3, #1
 80042c6:	e018      	b.n	80042fa <HAL_RCC_OscConfig+0xe02>
 80042c8:	4b0e      	ldr	r3, [pc, #56]	; (8004304 <HAL_RCC_OscConfig+0xe0c>)
 80042ca:	685b      	ldr	r3, [r3, #4]
 80042cc:	f8c7 31f4 	str.w	r3, [r7, #500]	; 0x1f4
 80042d0:	f8d7 31f4 	ldr.w	r3, [r7, #500]	; 0x1f4
 80042d4:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 80042d8:	1d3b      	adds	r3, r7, #4
 80042da:	681b      	ldr	r3, [r3, #0]
 80042dc:	6a1b      	ldr	r3, [r3, #32]
 80042de:	429a      	cmp	r2, r3
 80042e0:	d108      	bne.n	80042f4 <HAL_RCC_OscConfig+0xdfc>
 80042e2:	f8d7 31f4 	ldr.w	r3, [r7, #500]	; 0x1f4
 80042e6:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 80042ea:	1d3b      	adds	r3, r7, #4
 80042ec:	681b      	ldr	r3, [r3, #0]
 80042ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80042f0:	429a      	cmp	r2, r3
 80042f2:	d001      	beq.n	80042f8 <HAL_RCC_OscConfig+0xe00>
 80042f4:	2301      	movs	r3, #1
 80042f6:	e000      	b.n	80042fa <HAL_RCC_OscConfig+0xe02>
 80042f8:	2300      	movs	r3, #0
 80042fa:	4618      	mov	r0, r3
 80042fc:	f507 7700 	add.w	r7, r7, #512	; 0x200
 8004300:	46bd      	mov	sp, r7
 8004302:	bd80      	pop	{r7, pc}
 8004304:	40021000 	.word	0x40021000

08004308 <HAL_RCC_ClockConfig>:
 8004308:	b580      	push	{r7, lr}
 800430a:	b09e      	sub	sp, #120	; 0x78
 800430c:	af00      	add	r7, sp, #0
 800430e:	6078      	str	r0, [r7, #4]
 8004310:	6039      	str	r1, [r7, #0]
 8004312:	2300      	movs	r3, #0
 8004314:	677b      	str	r3, [r7, #116]	; 0x74
 8004316:	687b      	ldr	r3, [r7, #4]
 8004318:	2b00      	cmp	r3, #0
 800431a:	d101      	bne.n	8004320 <HAL_RCC_ClockConfig+0x18>
 800431c:	2301      	movs	r3, #1
 800431e:	e162      	b.n	80045e6 <HAL_RCC_ClockConfig+0x2de>
 8004320:	4b90      	ldr	r3, [pc, #576]	; (8004564 <HAL_RCC_ClockConfig+0x25c>)
 8004322:	681b      	ldr	r3, [r3, #0]
 8004324:	f003 0307 	and.w	r3, r3, #7
 8004328:	683a      	ldr	r2, [r7, #0]
 800432a:	429a      	cmp	r2, r3
 800432c:	d910      	bls.n	8004350 <HAL_RCC_ClockConfig+0x48>
 800432e:	4b8d      	ldr	r3, [pc, #564]	; (8004564 <HAL_RCC_ClockConfig+0x25c>)
 8004330:	681b      	ldr	r3, [r3, #0]
 8004332:	f023 0207 	bic.w	r2, r3, #7
 8004336:	498b      	ldr	r1, [pc, #556]	; (8004564 <HAL_RCC_ClockConfig+0x25c>)
 8004338:	683b      	ldr	r3, [r7, #0]
 800433a:	4313      	orrs	r3, r2
 800433c:	600b      	str	r3, [r1, #0]
 800433e:	4b89      	ldr	r3, [pc, #548]	; (8004564 <HAL_RCC_ClockConfig+0x25c>)
 8004340:	681b      	ldr	r3, [r3, #0]
 8004342:	f003 0307 	and.w	r3, r3, #7
 8004346:	683a      	ldr	r2, [r7, #0]
 8004348:	429a      	cmp	r2, r3
 800434a:	d001      	beq.n	8004350 <HAL_RCC_ClockConfig+0x48>
 800434c:	2301      	movs	r3, #1
 800434e:	e14a      	b.n	80045e6 <HAL_RCC_ClockConfig+0x2de>
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	681b      	ldr	r3, [r3, #0]
 8004354:	f003 0302 	and.w	r3, r3, #2
 8004358:	2b00      	cmp	r3, #0
 800435a:	d008      	beq.n	800436e <HAL_RCC_ClockConfig+0x66>
 800435c:	4b82      	ldr	r3, [pc, #520]	; (8004568 <HAL_RCC_ClockConfig+0x260>)
 800435e:	685b      	ldr	r3, [r3, #4]
 8004360:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004364:	687b      	ldr	r3, [r7, #4]
 8004366:	689b      	ldr	r3, [r3, #8]
 8004368:	497f      	ldr	r1, [pc, #508]	; (8004568 <HAL_RCC_ClockConfig+0x260>)
 800436a:	4313      	orrs	r3, r2
 800436c:	604b      	str	r3, [r1, #4]
 800436e:	687b      	ldr	r3, [r7, #4]
 8004370:	681b      	ldr	r3, [r3, #0]
 8004372:	f003 0301 	and.w	r3, r3, #1
 8004376:	2b00      	cmp	r3, #0
 8004378:	f000 80dc 	beq.w	8004534 <HAL_RCC_ClockConfig+0x22c>
 800437c:	687b      	ldr	r3, [r7, #4]
 800437e:	685b      	ldr	r3, [r3, #4]
 8004380:	2b01      	cmp	r3, #1
 8004382:	d13c      	bne.n	80043fe <HAL_RCC_ClockConfig+0xf6>
 8004384:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8004388:	673b      	str	r3, [r7, #112]	; 0x70
 800438a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800438c:	fa93 f3a3 	rbit	r3, r3
 8004390:	66fb      	str	r3, [r7, #108]	; 0x6c
 8004392:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8004394:	fab3 f383 	clz	r3, r3
 8004398:	b2db      	uxtb	r3, r3
 800439a:	095b      	lsrs	r3, r3, #5
 800439c:	b2db      	uxtb	r3, r3
 800439e:	f043 0301 	orr.w	r3, r3, #1
 80043a2:	b2db      	uxtb	r3, r3
 80043a4:	2b01      	cmp	r3, #1
 80043a6:	d102      	bne.n	80043ae <HAL_RCC_ClockConfig+0xa6>
 80043a8:	4b6f      	ldr	r3, [pc, #444]	; (8004568 <HAL_RCC_ClockConfig+0x260>)
 80043aa:	681b      	ldr	r3, [r3, #0]
 80043ac:	e00f      	b.n	80043ce <HAL_RCC_ClockConfig+0xc6>
 80043ae:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80043b2:	66bb      	str	r3, [r7, #104]	; 0x68
 80043b4:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80043b6:	fa93 f3a3 	rbit	r3, r3
 80043ba:	667b      	str	r3, [r7, #100]	; 0x64
 80043bc:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80043c0:	663b      	str	r3, [r7, #96]	; 0x60
 80043c2:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80043c4:	fa93 f3a3 	rbit	r3, r3
 80043c8:	65fb      	str	r3, [r7, #92]	; 0x5c
 80043ca:	4b67      	ldr	r3, [pc, #412]	; (8004568 <HAL_RCC_ClockConfig+0x260>)
 80043cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043ce:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 80043d2:	65ba      	str	r2, [r7, #88]	; 0x58
 80043d4:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80043d6:	fa92 f2a2 	rbit	r2, r2
 80043da:	657a      	str	r2, [r7, #84]	; 0x54
 80043dc:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 80043de:	fab2 f282 	clz	r2, r2
 80043e2:	b2d2      	uxtb	r2, r2
 80043e4:	f042 0220 	orr.w	r2, r2, #32
 80043e8:	b2d2      	uxtb	r2, r2
 80043ea:	f002 021f 	and.w	r2, r2, #31
 80043ee:	2101      	movs	r1, #1
 80043f0:	fa01 f202 	lsl.w	r2, r1, r2
 80043f4:	4013      	ands	r3, r2
 80043f6:	2b00      	cmp	r3, #0
 80043f8:	d17b      	bne.n	80044f2 <HAL_RCC_ClockConfig+0x1ea>
 80043fa:	2301      	movs	r3, #1
 80043fc:	e0f3      	b.n	80045e6 <HAL_RCC_ClockConfig+0x2de>
 80043fe:	687b      	ldr	r3, [r7, #4]
 8004400:	685b      	ldr	r3, [r3, #4]
 8004402:	2b02      	cmp	r3, #2
 8004404:	d13c      	bne.n	8004480 <HAL_RCC_ClockConfig+0x178>
 8004406:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800440a:	653b      	str	r3, [r7, #80]	; 0x50
 800440c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800440e:	fa93 f3a3 	rbit	r3, r3
 8004412:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004414:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8004416:	fab3 f383 	clz	r3, r3
 800441a:	b2db      	uxtb	r3, r3
 800441c:	095b      	lsrs	r3, r3, #5
 800441e:	b2db      	uxtb	r3, r3
 8004420:	f043 0301 	orr.w	r3, r3, #1
 8004424:	b2db      	uxtb	r3, r3
 8004426:	2b01      	cmp	r3, #1
 8004428:	d102      	bne.n	8004430 <HAL_RCC_ClockConfig+0x128>
 800442a:	4b4f      	ldr	r3, [pc, #316]	; (8004568 <HAL_RCC_ClockConfig+0x260>)
 800442c:	681b      	ldr	r3, [r3, #0]
 800442e:	e00f      	b.n	8004450 <HAL_RCC_ClockConfig+0x148>
 8004430:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8004434:	64bb      	str	r3, [r7, #72]	; 0x48
 8004436:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8004438:	fa93 f3a3 	rbit	r3, r3
 800443c:	647b      	str	r3, [r7, #68]	; 0x44
 800443e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8004442:	643b      	str	r3, [r7, #64]	; 0x40
 8004444:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8004446:	fa93 f3a3 	rbit	r3, r3
 800444a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800444c:	4b46      	ldr	r3, [pc, #280]	; (8004568 <HAL_RCC_ClockConfig+0x260>)
 800444e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004450:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8004454:	63ba      	str	r2, [r7, #56]	; 0x38
 8004456:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8004458:	fa92 f2a2 	rbit	r2, r2
 800445c:	637a      	str	r2, [r7, #52]	; 0x34
 800445e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8004460:	fab2 f282 	clz	r2, r2
 8004464:	b2d2      	uxtb	r2, r2
 8004466:	f042 0220 	orr.w	r2, r2, #32
 800446a:	b2d2      	uxtb	r2, r2
 800446c:	f002 021f 	and.w	r2, r2, #31
 8004470:	2101      	movs	r1, #1
 8004472:	fa01 f202 	lsl.w	r2, r1, r2
 8004476:	4013      	ands	r3, r2
 8004478:	2b00      	cmp	r3, #0
 800447a:	d13a      	bne.n	80044f2 <HAL_RCC_ClockConfig+0x1ea>
 800447c:	2301      	movs	r3, #1
 800447e:	e0b2      	b.n	80045e6 <HAL_RCC_ClockConfig+0x2de>
 8004480:	2302      	movs	r3, #2
 8004482:	633b      	str	r3, [r7, #48]	; 0x30
 8004484:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004486:	fa93 f3a3 	rbit	r3, r3
 800448a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800448c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800448e:	fab3 f383 	clz	r3, r3
 8004492:	b2db      	uxtb	r3, r3
 8004494:	095b      	lsrs	r3, r3, #5
 8004496:	b2db      	uxtb	r3, r3
 8004498:	f043 0301 	orr.w	r3, r3, #1
 800449c:	b2db      	uxtb	r3, r3
 800449e:	2b01      	cmp	r3, #1
 80044a0:	d102      	bne.n	80044a8 <HAL_RCC_ClockConfig+0x1a0>
 80044a2:	4b31      	ldr	r3, [pc, #196]	; (8004568 <HAL_RCC_ClockConfig+0x260>)
 80044a4:	681b      	ldr	r3, [r3, #0]
 80044a6:	e00d      	b.n	80044c4 <HAL_RCC_ClockConfig+0x1bc>
 80044a8:	2302      	movs	r3, #2
 80044aa:	62bb      	str	r3, [r7, #40]	; 0x28
 80044ac:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80044ae:	fa93 f3a3 	rbit	r3, r3
 80044b2:	627b      	str	r3, [r7, #36]	; 0x24
 80044b4:	2302      	movs	r3, #2
 80044b6:	623b      	str	r3, [r7, #32]
 80044b8:	6a3b      	ldr	r3, [r7, #32]
 80044ba:	fa93 f3a3 	rbit	r3, r3
 80044be:	61fb      	str	r3, [r7, #28]
 80044c0:	4b29      	ldr	r3, [pc, #164]	; (8004568 <HAL_RCC_ClockConfig+0x260>)
 80044c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044c4:	2202      	movs	r2, #2
 80044c6:	61ba      	str	r2, [r7, #24]
 80044c8:	69ba      	ldr	r2, [r7, #24]
 80044ca:	fa92 f2a2 	rbit	r2, r2
 80044ce:	617a      	str	r2, [r7, #20]
 80044d0:	697a      	ldr	r2, [r7, #20]
 80044d2:	fab2 f282 	clz	r2, r2
 80044d6:	b2d2      	uxtb	r2, r2
 80044d8:	f042 0220 	orr.w	r2, r2, #32
 80044dc:	b2d2      	uxtb	r2, r2
 80044de:	f002 021f 	and.w	r2, r2, #31
 80044e2:	2101      	movs	r1, #1
 80044e4:	fa01 f202 	lsl.w	r2, r1, r2
 80044e8:	4013      	ands	r3, r2
 80044ea:	2b00      	cmp	r3, #0
 80044ec:	d101      	bne.n	80044f2 <HAL_RCC_ClockConfig+0x1ea>
 80044ee:	2301      	movs	r3, #1
 80044f0:	e079      	b.n	80045e6 <HAL_RCC_ClockConfig+0x2de>
 80044f2:	4b1d      	ldr	r3, [pc, #116]	; (8004568 <HAL_RCC_ClockConfig+0x260>)
 80044f4:	685b      	ldr	r3, [r3, #4]
 80044f6:	f023 0203 	bic.w	r2, r3, #3
 80044fa:	687b      	ldr	r3, [r7, #4]
 80044fc:	685b      	ldr	r3, [r3, #4]
 80044fe:	491a      	ldr	r1, [pc, #104]	; (8004568 <HAL_RCC_ClockConfig+0x260>)
 8004500:	4313      	orrs	r3, r2
 8004502:	604b      	str	r3, [r1, #4]
 8004504:	f7fe fd04 	bl	8002f10 <HAL_GetTick>
 8004508:	6778      	str	r0, [r7, #116]	; 0x74
 800450a:	e00a      	b.n	8004522 <HAL_RCC_ClockConfig+0x21a>
 800450c:	f7fe fd00 	bl	8002f10 <HAL_GetTick>
 8004510:	4602      	mov	r2, r0
 8004512:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8004514:	1ad3      	subs	r3, r2, r3
 8004516:	f241 3288 	movw	r2, #5000	; 0x1388
 800451a:	4293      	cmp	r3, r2
 800451c:	d901      	bls.n	8004522 <HAL_RCC_ClockConfig+0x21a>
 800451e:	2303      	movs	r3, #3
 8004520:	e061      	b.n	80045e6 <HAL_RCC_ClockConfig+0x2de>
 8004522:	4b11      	ldr	r3, [pc, #68]	; (8004568 <HAL_RCC_ClockConfig+0x260>)
 8004524:	685b      	ldr	r3, [r3, #4]
 8004526:	f003 020c 	and.w	r2, r3, #12
 800452a:	687b      	ldr	r3, [r7, #4]
 800452c:	685b      	ldr	r3, [r3, #4]
 800452e:	009b      	lsls	r3, r3, #2
 8004530:	429a      	cmp	r2, r3
 8004532:	d1eb      	bne.n	800450c <HAL_RCC_ClockConfig+0x204>
 8004534:	4b0b      	ldr	r3, [pc, #44]	; (8004564 <HAL_RCC_ClockConfig+0x25c>)
 8004536:	681b      	ldr	r3, [r3, #0]
 8004538:	f003 0307 	and.w	r3, r3, #7
 800453c:	683a      	ldr	r2, [r7, #0]
 800453e:	429a      	cmp	r2, r3
 8004540:	d214      	bcs.n	800456c <HAL_RCC_ClockConfig+0x264>
 8004542:	4b08      	ldr	r3, [pc, #32]	; (8004564 <HAL_RCC_ClockConfig+0x25c>)
 8004544:	681b      	ldr	r3, [r3, #0]
 8004546:	f023 0207 	bic.w	r2, r3, #7
 800454a:	4906      	ldr	r1, [pc, #24]	; (8004564 <HAL_RCC_ClockConfig+0x25c>)
 800454c:	683b      	ldr	r3, [r7, #0]
 800454e:	4313      	orrs	r3, r2
 8004550:	600b      	str	r3, [r1, #0]
 8004552:	4b04      	ldr	r3, [pc, #16]	; (8004564 <HAL_RCC_ClockConfig+0x25c>)
 8004554:	681b      	ldr	r3, [r3, #0]
 8004556:	f003 0307 	and.w	r3, r3, #7
 800455a:	683a      	ldr	r2, [r7, #0]
 800455c:	429a      	cmp	r2, r3
 800455e:	d005      	beq.n	800456c <HAL_RCC_ClockConfig+0x264>
 8004560:	2301      	movs	r3, #1
 8004562:	e040      	b.n	80045e6 <HAL_RCC_ClockConfig+0x2de>
 8004564:	40022000 	.word	0x40022000
 8004568:	40021000 	.word	0x40021000
 800456c:	687b      	ldr	r3, [r7, #4]
 800456e:	681b      	ldr	r3, [r3, #0]
 8004570:	f003 0304 	and.w	r3, r3, #4
 8004574:	2b00      	cmp	r3, #0
 8004576:	d008      	beq.n	800458a <HAL_RCC_ClockConfig+0x282>
 8004578:	4b1d      	ldr	r3, [pc, #116]	; (80045f0 <HAL_RCC_ClockConfig+0x2e8>)
 800457a:	685b      	ldr	r3, [r3, #4]
 800457c:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8004580:	687b      	ldr	r3, [r7, #4]
 8004582:	68db      	ldr	r3, [r3, #12]
 8004584:	491a      	ldr	r1, [pc, #104]	; (80045f0 <HAL_RCC_ClockConfig+0x2e8>)
 8004586:	4313      	orrs	r3, r2
 8004588:	604b      	str	r3, [r1, #4]
 800458a:	687b      	ldr	r3, [r7, #4]
 800458c:	681b      	ldr	r3, [r3, #0]
 800458e:	f003 0308 	and.w	r3, r3, #8
 8004592:	2b00      	cmp	r3, #0
 8004594:	d009      	beq.n	80045aa <HAL_RCC_ClockConfig+0x2a2>
 8004596:	4b16      	ldr	r3, [pc, #88]	; (80045f0 <HAL_RCC_ClockConfig+0x2e8>)
 8004598:	685b      	ldr	r3, [r3, #4]
 800459a:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 800459e:	687b      	ldr	r3, [r7, #4]
 80045a0:	691b      	ldr	r3, [r3, #16]
 80045a2:	00db      	lsls	r3, r3, #3
 80045a4:	4912      	ldr	r1, [pc, #72]	; (80045f0 <HAL_RCC_ClockConfig+0x2e8>)
 80045a6:	4313      	orrs	r3, r2
 80045a8:	604b      	str	r3, [r1, #4]
 80045aa:	f000 f829 	bl	8004600 <HAL_RCC_GetSysClockFreq>
 80045ae:	4601      	mov	r1, r0
 80045b0:	4b0f      	ldr	r3, [pc, #60]	; (80045f0 <HAL_RCC_ClockConfig+0x2e8>)
 80045b2:	685b      	ldr	r3, [r3, #4]
 80045b4:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80045b8:	22f0      	movs	r2, #240	; 0xf0
 80045ba:	613a      	str	r2, [r7, #16]
 80045bc:	693a      	ldr	r2, [r7, #16]
 80045be:	fa92 f2a2 	rbit	r2, r2
 80045c2:	60fa      	str	r2, [r7, #12]
 80045c4:	68fa      	ldr	r2, [r7, #12]
 80045c6:	fab2 f282 	clz	r2, r2
 80045ca:	b2d2      	uxtb	r2, r2
 80045cc:	40d3      	lsrs	r3, r2
 80045ce:	4a09      	ldr	r2, [pc, #36]	; (80045f4 <HAL_RCC_ClockConfig+0x2ec>)
 80045d0:	5cd3      	ldrb	r3, [r2, r3]
 80045d2:	fa21 f303 	lsr.w	r3, r1, r3
 80045d6:	4a08      	ldr	r2, [pc, #32]	; (80045f8 <HAL_RCC_ClockConfig+0x2f0>)
 80045d8:	6013      	str	r3, [r2, #0]
 80045da:	4b08      	ldr	r3, [pc, #32]	; (80045fc <HAL_RCC_ClockConfig+0x2f4>)
 80045dc:	681b      	ldr	r3, [r3, #0]
 80045de:	4618      	mov	r0, r3
 80045e0:	f7fe fc52 	bl	8002e88 <HAL_InitTick>
 80045e4:	2300      	movs	r3, #0
 80045e6:	4618      	mov	r0, r3
 80045e8:	3778      	adds	r7, #120	; 0x78
 80045ea:	46bd      	mov	sp, r7
 80045ec:	bd80      	pop	{r7, pc}
 80045ee:	bf00      	nop
 80045f0:	40021000 	.word	0x40021000
 80045f4:	08006ca0 	.word	0x08006ca0
 80045f8:	2000000c 	.word	0x2000000c
 80045fc:	2000003c 	.word	0x2000003c

08004600 <HAL_RCC_GetSysClockFreq>:
 8004600:	b480      	push	{r7}
 8004602:	b08b      	sub	sp, #44	; 0x2c
 8004604:	af00      	add	r7, sp, #0
 8004606:	2300      	movs	r3, #0
 8004608:	61fb      	str	r3, [r7, #28]
 800460a:	2300      	movs	r3, #0
 800460c:	61bb      	str	r3, [r7, #24]
 800460e:	2300      	movs	r3, #0
 8004610:	627b      	str	r3, [r7, #36]	; 0x24
 8004612:	2300      	movs	r3, #0
 8004614:	617b      	str	r3, [r7, #20]
 8004616:	2300      	movs	r3, #0
 8004618:	623b      	str	r3, [r7, #32]
 800461a:	4b29      	ldr	r3, [pc, #164]	; (80046c0 <HAL_RCC_GetSysClockFreq+0xc0>)
 800461c:	685b      	ldr	r3, [r3, #4]
 800461e:	61fb      	str	r3, [r7, #28]
 8004620:	69fb      	ldr	r3, [r7, #28]
 8004622:	f003 030c 	and.w	r3, r3, #12
 8004626:	2b04      	cmp	r3, #4
 8004628:	d002      	beq.n	8004630 <HAL_RCC_GetSysClockFreq+0x30>
 800462a:	2b08      	cmp	r3, #8
 800462c:	d003      	beq.n	8004636 <HAL_RCC_GetSysClockFreq+0x36>
 800462e:	e03c      	b.n	80046aa <HAL_RCC_GetSysClockFreq+0xaa>
 8004630:	4b24      	ldr	r3, [pc, #144]	; (80046c4 <HAL_RCC_GetSysClockFreq+0xc4>)
 8004632:	623b      	str	r3, [r7, #32]
 8004634:	e03c      	b.n	80046b0 <HAL_RCC_GetSysClockFreq+0xb0>
 8004636:	69fb      	ldr	r3, [r7, #28]
 8004638:	f403 1370 	and.w	r3, r3, #3932160	; 0x3c0000
 800463c:	f44f 1270 	mov.w	r2, #3932160	; 0x3c0000
 8004640:	60ba      	str	r2, [r7, #8]
 8004642:	68ba      	ldr	r2, [r7, #8]
 8004644:	fa92 f2a2 	rbit	r2, r2
 8004648:	607a      	str	r2, [r7, #4]
 800464a:	687a      	ldr	r2, [r7, #4]
 800464c:	fab2 f282 	clz	r2, r2
 8004650:	b2d2      	uxtb	r2, r2
 8004652:	40d3      	lsrs	r3, r2
 8004654:	4a1c      	ldr	r2, [pc, #112]	; (80046c8 <HAL_RCC_GetSysClockFreq+0xc8>)
 8004656:	5cd3      	ldrb	r3, [r2, r3]
 8004658:	617b      	str	r3, [r7, #20]
 800465a:	4b19      	ldr	r3, [pc, #100]	; (80046c0 <HAL_RCC_GetSysClockFreq+0xc0>)
 800465c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800465e:	f003 030f 	and.w	r3, r3, #15
 8004662:	220f      	movs	r2, #15
 8004664:	613a      	str	r2, [r7, #16]
 8004666:	693a      	ldr	r2, [r7, #16]
 8004668:	fa92 f2a2 	rbit	r2, r2
 800466c:	60fa      	str	r2, [r7, #12]
 800466e:	68fa      	ldr	r2, [r7, #12]
 8004670:	fab2 f282 	clz	r2, r2
 8004674:	b2d2      	uxtb	r2, r2
 8004676:	40d3      	lsrs	r3, r2
 8004678:	4a14      	ldr	r2, [pc, #80]	; (80046cc <HAL_RCC_GetSysClockFreq+0xcc>)
 800467a:	5cd3      	ldrb	r3, [r2, r3]
 800467c:	61bb      	str	r3, [r7, #24]
 800467e:	69fb      	ldr	r3, [r7, #28]
 8004680:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004684:	2b00      	cmp	r3, #0
 8004686:	d008      	beq.n	800469a <HAL_RCC_GetSysClockFreq+0x9a>
 8004688:	4a0e      	ldr	r2, [pc, #56]	; (80046c4 <HAL_RCC_GetSysClockFreq+0xc4>)
 800468a:	69bb      	ldr	r3, [r7, #24]
 800468c:	fbb2 f2f3 	udiv	r2, r2, r3
 8004690:	697b      	ldr	r3, [r7, #20]
 8004692:	fb02 f303 	mul.w	r3, r2, r3
 8004696:	627b      	str	r3, [r7, #36]	; 0x24
 8004698:	e004      	b.n	80046a4 <HAL_RCC_GetSysClockFreq+0xa4>
 800469a:	697b      	ldr	r3, [r7, #20]
 800469c:	4a0c      	ldr	r2, [pc, #48]	; (80046d0 <HAL_RCC_GetSysClockFreq+0xd0>)
 800469e:	fb02 f303 	mul.w	r3, r2, r3
 80046a2:	627b      	str	r3, [r7, #36]	; 0x24
 80046a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80046a6:	623b      	str	r3, [r7, #32]
 80046a8:	e002      	b.n	80046b0 <HAL_RCC_GetSysClockFreq+0xb0>
 80046aa:	4b0a      	ldr	r3, [pc, #40]	; (80046d4 <HAL_RCC_GetSysClockFreq+0xd4>)
 80046ac:	623b      	str	r3, [r7, #32]
 80046ae:	bf00      	nop
 80046b0:	6a3b      	ldr	r3, [r7, #32]
 80046b2:	4618      	mov	r0, r3
 80046b4:	372c      	adds	r7, #44	; 0x2c
 80046b6:	46bd      	mov	sp, r7
 80046b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046bc:	4770      	bx	lr
 80046be:	bf00      	nop
 80046c0:	40021000 	.word	0x40021000
 80046c4:	017d7840 	.word	0x017d7840
 80046c8:	08006cb8 	.word	0x08006cb8
 80046cc:	08006cc8 	.word	0x08006cc8
 80046d0:	003d0900 	.word	0x003d0900
 80046d4:	007a1200 	.word	0x007a1200

080046d8 <HAL_RCC_GetHCLKFreq>:
 80046d8:	b480      	push	{r7}
 80046da:	af00      	add	r7, sp, #0
 80046dc:	4b03      	ldr	r3, [pc, #12]	; (80046ec <HAL_RCC_GetHCLKFreq+0x14>)
 80046de:	681b      	ldr	r3, [r3, #0]
 80046e0:	4618      	mov	r0, r3
 80046e2:	46bd      	mov	sp, r7
 80046e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046e8:	4770      	bx	lr
 80046ea:	bf00      	nop
 80046ec:	2000000c 	.word	0x2000000c

080046f0 <HAL_RCC_GetPCLK1Freq>:
 80046f0:	b580      	push	{r7, lr}
 80046f2:	b082      	sub	sp, #8
 80046f4:	af00      	add	r7, sp, #0
 80046f6:	f7ff ffef 	bl	80046d8 <HAL_RCC_GetHCLKFreq>
 80046fa:	4601      	mov	r1, r0
 80046fc:	4b0b      	ldr	r3, [pc, #44]	; (800472c <HAL_RCC_GetPCLK1Freq+0x3c>)
 80046fe:	685b      	ldr	r3, [r3, #4]
 8004700:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8004704:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8004708:	607a      	str	r2, [r7, #4]
 800470a:	687a      	ldr	r2, [r7, #4]
 800470c:	fa92 f2a2 	rbit	r2, r2
 8004710:	603a      	str	r2, [r7, #0]
 8004712:	683a      	ldr	r2, [r7, #0]
 8004714:	fab2 f282 	clz	r2, r2
 8004718:	b2d2      	uxtb	r2, r2
 800471a:	40d3      	lsrs	r3, r2
 800471c:	4a04      	ldr	r2, [pc, #16]	; (8004730 <HAL_RCC_GetPCLK1Freq+0x40>)
 800471e:	5cd3      	ldrb	r3, [r2, r3]
 8004720:	fa21 f303 	lsr.w	r3, r1, r3
 8004724:	4618      	mov	r0, r3
 8004726:	3708      	adds	r7, #8
 8004728:	46bd      	mov	sp, r7
 800472a:	bd80      	pop	{r7, pc}
 800472c:	40021000 	.word	0x40021000
 8004730:	08006cb0 	.word	0x08006cb0

08004734 <HAL_RCC_GetPCLK2Freq>:
 8004734:	b580      	push	{r7, lr}
 8004736:	b082      	sub	sp, #8
 8004738:	af00      	add	r7, sp, #0
 800473a:	f7ff ffcd 	bl	80046d8 <HAL_RCC_GetHCLKFreq>
 800473e:	4601      	mov	r1, r0
 8004740:	4b0b      	ldr	r3, [pc, #44]	; (8004770 <HAL_RCC_GetPCLK2Freq+0x3c>)
 8004742:	685b      	ldr	r3, [r3, #4]
 8004744:	f403 5360 	and.w	r3, r3, #14336	; 0x3800
 8004748:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 800474c:	607a      	str	r2, [r7, #4]
 800474e:	687a      	ldr	r2, [r7, #4]
 8004750:	fa92 f2a2 	rbit	r2, r2
 8004754:	603a      	str	r2, [r7, #0]
 8004756:	683a      	ldr	r2, [r7, #0]
 8004758:	fab2 f282 	clz	r2, r2
 800475c:	b2d2      	uxtb	r2, r2
 800475e:	40d3      	lsrs	r3, r2
 8004760:	4a04      	ldr	r2, [pc, #16]	; (8004774 <HAL_RCC_GetPCLK2Freq+0x40>)
 8004762:	5cd3      	ldrb	r3, [r2, r3]
 8004764:	fa21 f303 	lsr.w	r3, r1, r3
 8004768:	4618      	mov	r0, r3
 800476a:	3708      	adds	r7, #8
 800476c:	46bd      	mov	sp, r7
 800476e:	bd80      	pop	{r7, pc}
 8004770:	40021000 	.word	0x40021000
 8004774:	08006cb0 	.word	0x08006cb0

08004778 <HAL_RCCEx_PeriphCLKConfig>:
 8004778:	b580      	push	{r7, lr}
 800477a:	b092      	sub	sp, #72	; 0x48
 800477c:	af00      	add	r7, sp, #0
 800477e:	6078      	str	r0, [r7, #4]
 8004780:	2300      	movs	r3, #0
 8004782:	643b      	str	r3, [r7, #64]	; 0x40
 8004784:	2300      	movs	r3, #0
 8004786:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004788:	2300      	movs	r3, #0
 800478a:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 800478e:	687b      	ldr	r3, [r7, #4]
 8004790:	681b      	ldr	r3, [r3, #0]
 8004792:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004796:	2b00      	cmp	r3, #0
 8004798:	f000 80d4 	beq.w	8004944 <HAL_RCCEx_PeriphCLKConfig+0x1cc>
 800479c:	4b4e      	ldr	r3, [pc, #312]	; (80048d8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800479e:	69db      	ldr	r3, [r3, #28]
 80047a0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80047a4:	2b00      	cmp	r3, #0
 80047a6:	d10e      	bne.n	80047c6 <HAL_RCCEx_PeriphCLKConfig+0x4e>
 80047a8:	4b4b      	ldr	r3, [pc, #300]	; (80048d8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80047aa:	69db      	ldr	r3, [r3, #28]
 80047ac:	4a4a      	ldr	r2, [pc, #296]	; (80048d8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80047ae:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80047b2:	61d3      	str	r3, [r2, #28]
 80047b4:	4b48      	ldr	r3, [pc, #288]	; (80048d8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80047b6:	69db      	ldr	r3, [r3, #28]
 80047b8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80047bc:	60bb      	str	r3, [r7, #8]
 80047be:	68bb      	ldr	r3, [r7, #8]
 80047c0:	2301      	movs	r3, #1
 80047c2:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 80047c6:	4b45      	ldr	r3, [pc, #276]	; (80048dc <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80047c8:	681b      	ldr	r3, [r3, #0]
 80047ca:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80047ce:	2b00      	cmp	r3, #0
 80047d0:	d118      	bne.n	8004804 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 80047d2:	4b42      	ldr	r3, [pc, #264]	; (80048dc <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80047d4:	681b      	ldr	r3, [r3, #0]
 80047d6:	4a41      	ldr	r2, [pc, #260]	; (80048dc <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80047d8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80047dc:	6013      	str	r3, [r2, #0]
 80047de:	f7fe fb97 	bl	8002f10 <HAL_GetTick>
 80047e2:	6438      	str	r0, [r7, #64]	; 0x40
 80047e4:	e008      	b.n	80047f8 <HAL_RCCEx_PeriphCLKConfig+0x80>
 80047e6:	f7fe fb93 	bl	8002f10 <HAL_GetTick>
 80047ea:	4602      	mov	r2, r0
 80047ec:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80047ee:	1ad3      	subs	r3, r2, r3
 80047f0:	2b64      	cmp	r3, #100	; 0x64
 80047f2:	d901      	bls.n	80047f8 <HAL_RCCEx_PeriphCLKConfig+0x80>
 80047f4:	2303      	movs	r3, #3
 80047f6:	e13c      	b.n	8004a72 <HAL_RCCEx_PeriphCLKConfig+0x2fa>
 80047f8:	4b38      	ldr	r3, [pc, #224]	; (80048dc <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80047fa:	681b      	ldr	r3, [r3, #0]
 80047fc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004800:	2b00      	cmp	r3, #0
 8004802:	d0f0      	beq.n	80047e6 <HAL_RCCEx_PeriphCLKConfig+0x6e>
 8004804:	4b34      	ldr	r3, [pc, #208]	; (80048d8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004806:	6a1b      	ldr	r3, [r3, #32]
 8004808:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800480c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800480e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004810:	2b00      	cmp	r3, #0
 8004812:	f000 8084 	beq.w	800491e <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8004816:	687b      	ldr	r3, [r7, #4]
 8004818:	685b      	ldr	r3, [r3, #4]
 800481a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800481e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8004820:	429a      	cmp	r2, r3
 8004822:	d07c      	beq.n	800491e <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8004824:	4b2c      	ldr	r3, [pc, #176]	; (80048d8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004826:	6a1b      	ldr	r3, [r3, #32]
 8004828:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800482c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800482e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8004832:	633b      	str	r3, [r7, #48]	; 0x30
 8004834:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004836:	fa93 f3a3 	rbit	r3, r3
 800483a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800483c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800483e:	fab3 f383 	clz	r3, r3
 8004842:	b2db      	uxtb	r3, r3
 8004844:	461a      	mov	r2, r3
 8004846:	4b26      	ldr	r3, [pc, #152]	; (80048e0 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8004848:	4413      	add	r3, r2
 800484a:	009b      	lsls	r3, r3, #2
 800484c:	461a      	mov	r2, r3
 800484e:	2301      	movs	r3, #1
 8004850:	6013      	str	r3, [r2, #0]
 8004852:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8004856:	63bb      	str	r3, [r7, #56]	; 0x38
 8004858:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800485a:	fa93 f3a3 	rbit	r3, r3
 800485e:	637b      	str	r3, [r7, #52]	; 0x34
 8004860:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004862:	fab3 f383 	clz	r3, r3
 8004866:	b2db      	uxtb	r3, r3
 8004868:	461a      	mov	r2, r3
 800486a:	4b1d      	ldr	r3, [pc, #116]	; (80048e0 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 800486c:	4413      	add	r3, r2
 800486e:	009b      	lsls	r3, r3, #2
 8004870:	461a      	mov	r2, r3
 8004872:	2300      	movs	r3, #0
 8004874:	6013      	str	r3, [r2, #0]
 8004876:	4a18      	ldr	r2, [pc, #96]	; (80048d8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004878:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800487a:	6213      	str	r3, [r2, #32]
 800487c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800487e:	f003 0301 	and.w	r3, r3, #1
 8004882:	2b00      	cmp	r3, #0
 8004884:	d04b      	beq.n	800491e <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8004886:	f7fe fb43 	bl	8002f10 <HAL_GetTick>
 800488a:	6438      	str	r0, [r7, #64]	; 0x40
 800488c:	e00a      	b.n	80048a4 <HAL_RCCEx_PeriphCLKConfig+0x12c>
 800488e:	f7fe fb3f 	bl	8002f10 <HAL_GetTick>
 8004892:	4602      	mov	r2, r0
 8004894:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8004896:	1ad3      	subs	r3, r2, r3
 8004898:	f241 3288 	movw	r2, #5000	; 0x1388
 800489c:	4293      	cmp	r3, r2
 800489e:	d901      	bls.n	80048a4 <HAL_RCCEx_PeriphCLKConfig+0x12c>
 80048a0:	2303      	movs	r3, #3
 80048a2:	e0e6      	b.n	8004a72 <HAL_RCCEx_PeriphCLKConfig+0x2fa>
 80048a4:	2302      	movs	r3, #2
 80048a6:	62bb      	str	r3, [r7, #40]	; 0x28
 80048a8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80048aa:	fa93 f3a3 	rbit	r3, r3
 80048ae:	627b      	str	r3, [r7, #36]	; 0x24
 80048b0:	2302      	movs	r3, #2
 80048b2:	623b      	str	r3, [r7, #32]
 80048b4:	6a3b      	ldr	r3, [r7, #32]
 80048b6:	fa93 f3a3 	rbit	r3, r3
 80048ba:	61fb      	str	r3, [r7, #28]
 80048bc:	69fb      	ldr	r3, [r7, #28]
 80048be:	fab3 f383 	clz	r3, r3
 80048c2:	b2db      	uxtb	r3, r3
 80048c4:	095b      	lsrs	r3, r3, #5
 80048c6:	b2db      	uxtb	r3, r3
 80048c8:	f043 0302 	orr.w	r3, r3, #2
 80048cc:	b2db      	uxtb	r3, r3
 80048ce:	2b02      	cmp	r3, #2
 80048d0:	d108      	bne.n	80048e4 <HAL_RCCEx_PeriphCLKConfig+0x16c>
 80048d2:	4b01      	ldr	r3, [pc, #4]	; (80048d8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80048d4:	6a1b      	ldr	r3, [r3, #32]
 80048d6:	e00d      	b.n	80048f4 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 80048d8:	40021000 	.word	0x40021000
 80048dc:	40007000 	.word	0x40007000
 80048e0:	10908100 	.word	0x10908100
 80048e4:	2302      	movs	r3, #2
 80048e6:	61bb      	str	r3, [r7, #24]
 80048e8:	69bb      	ldr	r3, [r7, #24]
 80048ea:	fa93 f3a3 	rbit	r3, r3
 80048ee:	617b      	str	r3, [r7, #20]
 80048f0:	4b62      	ldr	r3, [pc, #392]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 80048f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048f4:	2202      	movs	r2, #2
 80048f6:	613a      	str	r2, [r7, #16]
 80048f8:	693a      	ldr	r2, [r7, #16]
 80048fa:	fa92 f2a2 	rbit	r2, r2
 80048fe:	60fa      	str	r2, [r7, #12]
 8004900:	68fa      	ldr	r2, [r7, #12]
 8004902:	fab2 f282 	clz	r2, r2
 8004906:	b2d2      	uxtb	r2, r2
 8004908:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800490c:	b2d2      	uxtb	r2, r2
 800490e:	f002 021f 	and.w	r2, r2, #31
 8004912:	2101      	movs	r1, #1
 8004914:	fa01 f202 	lsl.w	r2, r1, r2
 8004918:	4013      	ands	r3, r2
 800491a:	2b00      	cmp	r3, #0
 800491c:	d0b7      	beq.n	800488e <HAL_RCCEx_PeriphCLKConfig+0x116>
 800491e:	4b57      	ldr	r3, [pc, #348]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8004920:	6a1b      	ldr	r3, [r3, #32]
 8004922:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8004926:	687b      	ldr	r3, [r7, #4]
 8004928:	685b      	ldr	r3, [r3, #4]
 800492a:	4954      	ldr	r1, [pc, #336]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800492c:	4313      	orrs	r3, r2
 800492e:	620b      	str	r3, [r1, #32]
 8004930:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 8004934:	2b01      	cmp	r3, #1
 8004936:	d105      	bne.n	8004944 <HAL_RCCEx_PeriphCLKConfig+0x1cc>
 8004938:	4b50      	ldr	r3, [pc, #320]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800493a:	69db      	ldr	r3, [r3, #28]
 800493c:	4a4f      	ldr	r2, [pc, #316]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800493e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004942:	61d3      	str	r3, [r2, #28]
 8004944:	687b      	ldr	r3, [r7, #4]
 8004946:	681b      	ldr	r3, [r3, #0]
 8004948:	f003 0301 	and.w	r3, r3, #1
 800494c:	2b00      	cmp	r3, #0
 800494e:	d008      	beq.n	8004962 <HAL_RCCEx_PeriphCLKConfig+0x1ea>
 8004950:	4b4a      	ldr	r3, [pc, #296]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8004952:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004954:	f023 0203 	bic.w	r2, r3, #3
 8004958:	687b      	ldr	r3, [r7, #4]
 800495a:	689b      	ldr	r3, [r3, #8]
 800495c:	4947      	ldr	r1, [pc, #284]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800495e:	4313      	orrs	r3, r2
 8004960:	630b      	str	r3, [r1, #48]	; 0x30
 8004962:	687b      	ldr	r3, [r7, #4]
 8004964:	681b      	ldr	r3, [r3, #0]
 8004966:	f003 0320 	and.w	r3, r3, #32
 800496a:	2b00      	cmp	r3, #0
 800496c:	d008      	beq.n	8004980 <HAL_RCCEx_PeriphCLKConfig+0x208>
 800496e:	4b43      	ldr	r3, [pc, #268]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8004970:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004972:	f023 0210 	bic.w	r2, r3, #16
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	68db      	ldr	r3, [r3, #12]
 800497a:	4940      	ldr	r1, [pc, #256]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800497c:	4313      	orrs	r3, r2
 800497e:	630b      	str	r3, [r1, #48]	; 0x30
 8004980:	687b      	ldr	r3, [r7, #4]
 8004982:	681b      	ldr	r3, [r3, #0]
 8004984:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004988:	2b00      	cmp	r3, #0
 800498a:	d008      	beq.n	800499e <HAL_RCCEx_PeriphCLKConfig+0x226>
 800498c:	4b3b      	ldr	r3, [pc, #236]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800498e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004990:	f023 0220 	bic.w	r2, r3, #32
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	691b      	ldr	r3, [r3, #16]
 8004998:	4938      	ldr	r1, [pc, #224]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 800499a:	4313      	orrs	r3, r2
 800499c:	630b      	str	r3, [r1, #48]	; 0x30
 800499e:	687b      	ldr	r3, [r7, #4]
 80049a0:	681b      	ldr	r3, [r3, #0]
 80049a2:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80049a6:	2b00      	cmp	r3, #0
 80049a8:	d008      	beq.n	80049bc <HAL_RCCEx_PeriphCLKConfig+0x244>
 80049aa:	4b34      	ldr	r3, [pc, #208]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 80049ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80049ae:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 80049b2:	687b      	ldr	r3, [r7, #4]
 80049b4:	695b      	ldr	r3, [r3, #20]
 80049b6:	4931      	ldr	r1, [pc, #196]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 80049b8:	4313      	orrs	r3, r2
 80049ba:	630b      	str	r3, [r1, #48]	; 0x30
 80049bc:	687b      	ldr	r3, [r7, #4]
 80049be:	681b      	ldr	r3, [r3, #0]
 80049c0:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80049c4:	2b00      	cmp	r3, #0
 80049c6:	d008      	beq.n	80049da <HAL_RCCEx_PeriphCLKConfig+0x262>
 80049c8:	4b2c      	ldr	r3, [pc, #176]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 80049ca:	685b      	ldr	r3, [r3, #4]
 80049cc:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 80049d0:	687b      	ldr	r3, [r7, #4]
 80049d2:	69db      	ldr	r3, [r3, #28]
 80049d4:	4929      	ldr	r1, [pc, #164]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 80049d6:	4313      	orrs	r3, r2
 80049d8:	604b      	str	r3, [r1, #4]
 80049da:	687b      	ldr	r3, [r7, #4]
 80049dc:	681b      	ldr	r3, [r3, #0]
 80049de:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80049e2:	2b00      	cmp	r3, #0
 80049e4:	d008      	beq.n	80049f8 <HAL_RCCEx_PeriphCLKConfig+0x280>
 80049e6:	4b25      	ldr	r3, [pc, #148]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 80049e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80049ea:	f423 72f8 	bic.w	r2, r3, #496	; 0x1f0
 80049ee:	687b      	ldr	r3, [r7, #4]
 80049f0:	699b      	ldr	r3, [r3, #24]
 80049f2:	4922      	ldr	r1, [pc, #136]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 80049f4:	4313      	orrs	r3, r2
 80049f6:	62cb      	str	r3, [r1, #44]	; 0x2c
 80049f8:	687b      	ldr	r3, [r7, #4]
 80049fa:	681b      	ldr	r3, [r3, #0]
 80049fc:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8004a00:	2b00      	cmp	r3, #0
 8004a02:	d008      	beq.n	8004a16 <HAL_RCCEx_PeriphCLKConfig+0x29e>
 8004a04:	4b1d      	ldr	r3, [pc, #116]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8004a06:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004a08:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8004a0c:	687b      	ldr	r3, [r7, #4]
 8004a0e:	6a1b      	ldr	r3, [r3, #32]
 8004a10:	491a      	ldr	r1, [pc, #104]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8004a12:	4313      	orrs	r3, r2
 8004a14:	630b      	str	r3, [r1, #48]	; 0x30
 8004a16:	687b      	ldr	r3, [r7, #4]
 8004a18:	681b      	ldr	r3, [r3, #0]
 8004a1a:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004a1e:	2b00      	cmp	r3, #0
 8004a20:	d008      	beq.n	8004a34 <HAL_RCCEx_PeriphCLKConfig+0x2bc>
 8004a22:	4b16      	ldr	r3, [pc, #88]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8004a24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004a26:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8004a2a:	687b      	ldr	r3, [r7, #4]
 8004a2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a2e:	4913      	ldr	r1, [pc, #76]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8004a30:	4313      	orrs	r3, r2
 8004a32:	630b      	str	r3, [r1, #48]	; 0x30
 8004a34:	687b      	ldr	r3, [r7, #4]
 8004a36:	681b      	ldr	r3, [r3, #0]
 8004a38:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004a3c:	2b00      	cmp	r3, #0
 8004a3e:	d008      	beq.n	8004a52 <HAL_RCCEx_PeriphCLKConfig+0x2da>
 8004a40:	4b0e      	ldr	r3, [pc, #56]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8004a42:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004a44:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8004a48:	687b      	ldr	r3, [r7, #4]
 8004a4a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004a4c:	490b      	ldr	r1, [pc, #44]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8004a4e:	4313      	orrs	r3, r2
 8004a50:	630b      	str	r3, [r1, #48]	; 0x30
 8004a52:	687b      	ldr	r3, [r7, #4]
 8004a54:	681b      	ldr	r3, [r3, #0]
 8004a56:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004a5a:	2b00      	cmp	r3, #0
 8004a5c:	d008      	beq.n	8004a70 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
 8004a5e:	4b07      	ldr	r3, [pc, #28]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8004a60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004a62:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8004a66:	687b      	ldr	r3, [r7, #4]
 8004a68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004a6a:	4904      	ldr	r1, [pc, #16]	; (8004a7c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8004a6c:	4313      	orrs	r3, r2
 8004a6e:	630b      	str	r3, [r1, #48]	; 0x30
 8004a70:	2300      	movs	r3, #0
 8004a72:	4618      	mov	r0, r3
 8004a74:	3748      	adds	r7, #72	; 0x48
 8004a76:	46bd      	mov	sp, r7
 8004a78:	bd80      	pop	{r7, pc}
 8004a7a:	bf00      	nop
 8004a7c:	40021000 	.word	0x40021000

08004a80 <HAL_RTC_Init>:
 8004a80:	b580      	push	{r7, lr}
 8004a82:	b082      	sub	sp, #8
 8004a84:	af00      	add	r7, sp, #0
 8004a86:	6078      	str	r0, [r7, #4]
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	2b00      	cmp	r3, #0
 8004a8c:	d101      	bne.n	8004a92 <HAL_RTC_Init+0x12>
 8004a8e:	2301      	movs	r3, #1
 8004a90:	e083      	b.n	8004b9a <HAL_RTC_Init+0x11a>
 8004a92:	687b      	ldr	r3, [r7, #4]
 8004a94:	7f5b      	ldrb	r3, [r3, #29]
 8004a96:	b2db      	uxtb	r3, r3
 8004a98:	2b00      	cmp	r3, #0
 8004a9a:	d105      	bne.n	8004aa8 <HAL_RTC_Init+0x28>
 8004a9c:	687b      	ldr	r3, [r7, #4]
 8004a9e:	2200      	movs	r2, #0
 8004aa0:	771a      	strb	r2, [r3, #28]
 8004aa2:	6878      	ldr	r0, [r7, #4]
 8004aa4:	f7fd f8cc 	bl	8001c40 <HAL_RTC_MspInit>
 8004aa8:	687b      	ldr	r3, [r7, #4]
 8004aaa:	2202      	movs	r2, #2
 8004aac:	775a      	strb	r2, [r3, #29]
 8004aae:	687b      	ldr	r3, [r7, #4]
 8004ab0:	681b      	ldr	r3, [r3, #0]
 8004ab2:	22ca      	movs	r2, #202	; 0xca
 8004ab4:	625a      	str	r2, [r3, #36]	; 0x24
 8004ab6:	687b      	ldr	r3, [r7, #4]
 8004ab8:	681b      	ldr	r3, [r3, #0]
 8004aba:	2253      	movs	r2, #83	; 0x53
 8004abc:	625a      	str	r2, [r3, #36]	; 0x24
 8004abe:	6878      	ldr	r0, [r7, #4]
 8004ac0:	f000 f9fb 	bl	8004eba <RTC_EnterInitMode>
 8004ac4:	4603      	mov	r3, r0
 8004ac6:	2b00      	cmp	r3, #0
 8004ac8:	d008      	beq.n	8004adc <HAL_RTC_Init+0x5c>
 8004aca:	687b      	ldr	r3, [r7, #4]
 8004acc:	681b      	ldr	r3, [r3, #0]
 8004ace:	22ff      	movs	r2, #255	; 0xff
 8004ad0:	625a      	str	r2, [r3, #36]	; 0x24
 8004ad2:	687b      	ldr	r3, [r7, #4]
 8004ad4:	2204      	movs	r2, #4
 8004ad6:	775a      	strb	r2, [r3, #29]
 8004ad8:	2301      	movs	r3, #1
 8004ada:	e05e      	b.n	8004b9a <HAL_RTC_Init+0x11a>
 8004adc:	687b      	ldr	r3, [r7, #4]
 8004ade:	681b      	ldr	r3, [r3, #0]
 8004ae0:	689b      	ldr	r3, [r3, #8]
 8004ae2:	687a      	ldr	r2, [r7, #4]
 8004ae4:	6812      	ldr	r2, [r2, #0]
 8004ae6:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8004aea:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004aee:	6093      	str	r3, [r2, #8]
 8004af0:	687b      	ldr	r3, [r7, #4]
 8004af2:	681b      	ldr	r3, [r3, #0]
 8004af4:	6899      	ldr	r1, [r3, #8]
 8004af6:	687b      	ldr	r3, [r7, #4]
 8004af8:	685a      	ldr	r2, [r3, #4]
 8004afa:	687b      	ldr	r3, [r7, #4]
 8004afc:	691b      	ldr	r3, [r3, #16]
 8004afe:	431a      	orrs	r2, r3
 8004b00:	687b      	ldr	r3, [r7, #4]
 8004b02:	695b      	ldr	r3, [r3, #20]
 8004b04:	431a      	orrs	r2, r3
 8004b06:	687b      	ldr	r3, [r7, #4]
 8004b08:	681b      	ldr	r3, [r3, #0]
 8004b0a:	430a      	orrs	r2, r1
 8004b0c:	609a      	str	r2, [r3, #8]
 8004b0e:	687b      	ldr	r3, [r7, #4]
 8004b10:	681b      	ldr	r3, [r3, #0]
 8004b12:	687a      	ldr	r2, [r7, #4]
 8004b14:	68d2      	ldr	r2, [r2, #12]
 8004b16:	611a      	str	r2, [r3, #16]
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	681b      	ldr	r3, [r3, #0]
 8004b1c:	6919      	ldr	r1, [r3, #16]
 8004b1e:	687b      	ldr	r3, [r7, #4]
 8004b20:	689b      	ldr	r3, [r3, #8]
 8004b22:	041a      	lsls	r2, r3, #16
 8004b24:	687b      	ldr	r3, [r7, #4]
 8004b26:	681b      	ldr	r3, [r3, #0]
 8004b28:	430a      	orrs	r2, r1
 8004b2a:	611a      	str	r2, [r3, #16]
 8004b2c:	687b      	ldr	r3, [r7, #4]
 8004b2e:	681b      	ldr	r3, [r3, #0]
 8004b30:	68da      	ldr	r2, [r3, #12]
 8004b32:	687b      	ldr	r3, [r7, #4]
 8004b34:	681b      	ldr	r3, [r3, #0]
 8004b36:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004b3a:	60da      	str	r2, [r3, #12]
 8004b3c:	687b      	ldr	r3, [r7, #4]
 8004b3e:	681b      	ldr	r3, [r3, #0]
 8004b40:	689b      	ldr	r3, [r3, #8]
 8004b42:	f003 0320 	and.w	r3, r3, #32
 8004b46:	2b00      	cmp	r3, #0
 8004b48:	d10e      	bne.n	8004b68 <HAL_RTC_Init+0xe8>
 8004b4a:	6878      	ldr	r0, [r7, #4]
 8004b4c:	f000 f98d 	bl	8004e6a <HAL_RTC_WaitForSynchro>
 8004b50:	4603      	mov	r3, r0
 8004b52:	2b00      	cmp	r3, #0
 8004b54:	d008      	beq.n	8004b68 <HAL_RTC_Init+0xe8>
 8004b56:	687b      	ldr	r3, [r7, #4]
 8004b58:	681b      	ldr	r3, [r3, #0]
 8004b5a:	22ff      	movs	r2, #255	; 0xff
 8004b5c:	625a      	str	r2, [r3, #36]	; 0x24
 8004b5e:	687b      	ldr	r3, [r7, #4]
 8004b60:	2204      	movs	r2, #4
 8004b62:	775a      	strb	r2, [r3, #29]
 8004b64:	2301      	movs	r3, #1
 8004b66:	e018      	b.n	8004b9a <HAL_RTC_Init+0x11a>
 8004b68:	687b      	ldr	r3, [r7, #4]
 8004b6a:	681b      	ldr	r3, [r3, #0]
 8004b6c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004b6e:	687b      	ldr	r3, [r7, #4]
 8004b70:	681b      	ldr	r3, [r3, #0]
 8004b72:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8004b76:	641a      	str	r2, [r3, #64]	; 0x40
 8004b78:	687b      	ldr	r3, [r7, #4]
 8004b7a:	681b      	ldr	r3, [r3, #0]
 8004b7c:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8004b7e:	687b      	ldr	r3, [r7, #4]
 8004b80:	699a      	ldr	r2, [r3, #24]
 8004b82:	687b      	ldr	r3, [r7, #4]
 8004b84:	681b      	ldr	r3, [r3, #0]
 8004b86:	430a      	orrs	r2, r1
 8004b88:	641a      	str	r2, [r3, #64]	; 0x40
 8004b8a:	687b      	ldr	r3, [r7, #4]
 8004b8c:	681b      	ldr	r3, [r3, #0]
 8004b8e:	22ff      	movs	r2, #255	; 0xff
 8004b90:	625a      	str	r2, [r3, #36]	; 0x24
 8004b92:	687b      	ldr	r3, [r7, #4]
 8004b94:	2201      	movs	r2, #1
 8004b96:	775a      	strb	r2, [r3, #29]
 8004b98:	2300      	movs	r3, #0
 8004b9a:	4618      	mov	r0, r3
 8004b9c:	3708      	adds	r7, #8
 8004b9e:	46bd      	mov	sp, r7
 8004ba0:	bd80      	pop	{r7, pc}

08004ba2 <HAL_RTC_SetTime>:
 8004ba2:	b590      	push	{r4, r7, lr}
 8004ba4:	b087      	sub	sp, #28
 8004ba6:	af00      	add	r7, sp, #0
 8004ba8:	60f8      	str	r0, [r7, #12]
 8004baa:	60b9      	str	r1, [r7, #8]
 8004bac:	607a      	str	r2, [r7, #4]
 8004bae:	2300      	movs	r3, #0
 8004bb0:	617b      	str	r3, [r7, #20]
 8004bb2:	68fb      	ldr	r3, [r7, #12]
 8004bb4:	7f1b      	ldrb	r3, [r3, #28]
 8004bb6:	2b01      	cmp	r3, #1
 8004bb8:	d101      	bne.n	8004bbe <HAL_RTC_SetTime+0x1c>
 8004bba:	2302      	movs	r3, #2
 8004bbc:	e0aa      	b.n	8004d14 <HAL_RTC_SetTime+0x172>
 8004bbe:	68fb      	ldr	r3, [r7, #12]
 8004bc0:	2201      	movs	r2, #1
 8004bc2:	771a      	strb	r2, [r3, #28]
 8004bc4:	68fb      	ldr	r3, [r7, #12]
 8004bc6:	2202      	movs	r2, #2
 8004bc8:	775a      	strb	r2, [r3, #29]
 8004bca:	687b      	ldr	r3, [r7, #4]
 8004bcc:	2b00      	cmp	r3, #0
 8004bce:	d126      	bne.n	8004c1e <HAL_RTC_SetTime+0x7c>
 8004bd0:	68fb      	ldr	r3, [r7, #12]
 8004bd2:	681b      	ldr	r3, [r3, #0]
 8004bd4:	689b      	ldr	r3, [r3, #8]
 8004bd6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004bda:	2b00      	cmp	r3, #0
 8004bdc:	d102      	bne.n	8004be4 <HAL_RTC_SetTime+0x42>
 8004bde:	68bb      	ldr	r3, [r7, #8]
 8004be0:	2200      	movs	r2, #0
 8004be2:	70da      	strb	r2, [r3, #3]
 8004be4:	68bb      	ldr	r3, [r7, #8]
 8004be6:	781b      	ldrb	r3, [r3, #0]
 8004be8:	4618      	mov	r0, r3
 8004bea:	f000 f992 	bl	8004f12 <RTC_ByteToBcd2>
 8004bee:	4603      	mov	r3, r0
 8004bf0:	041c      	lsls	r4, r3, #16
 8004bf2:	68bb      	ldr	r3, [r7, #8]
 8004bf4:	785b      	ldrb	r3, [r3, #1]
 8004bf6:	4618      	mov	r0, r3
 8004bf8:	f000 f98b 	bl	8004f12 <RTC_ByteToBcd2>
 8004bfc:	4603      	mov	r3, r0
 8004bfe:	021b      	lsls	r3, r3, #8
 8004c00:	431c      	orrs	r4, r3
 8004c02:	68bb      	ldr	r3, [r7, #8]
 8004c04:	789b      	ldrb	r3, [r3, #2]
 8004c06:	4618      	mov	r0, r3
 8004c08:	f000 f983 	bl	8004f12 <RTC_ByteToBcd2>
 8004c0c:	4603      	mov	r3, r0
 8004c0e:	ea44 0203 	orr.w	r2, r4, r3
 8004c12:	68bb      	ldr	r3, [r7, #8]
 8004c14:	78db      	ldrb	r3, [r3, #3]
 8004c16:	041b      	lsls	r3, r3, #16
 8004c18:	4313      	orrs	r3, r2
 8004c1a:	617b      	str	r3, [r7, #20]
 8004c1c:	e018      	b.n	8004c50 <HAL_RTC_SetTime+0xae>
 8004c1e:	68fb      	ldr	r3, [r7, #12]
 8004c20:	681b      	ldr	r3, [r3, #0]
 8004c22:	689b      	ldr	r3, [r3, #8]
 8004c24:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004c28:	2b00      	cmp	r3, #0
 8004c2a:	d102      	bne.n	8004c32 <HAL_RTC_SetTime+0x90>
 8004c2c:	68bb      	ldr	r3, [r7, #8]
 8004c2e:	2200      	movs	r2, #0
 8004c30:	70da      	strb	r2, [r3, #3]
 8004c32:	68bb      	ldr	r3, [r7, #8]
 8004c34:	781b      	ldrb	r3, [r3, #0]
 8004c36:	041a      	lsls	r2, r3, #16
 8004c38:	68bb      	ldr	r3, [r7, #8]
 8004c3a:	785b      	ldrb	r3, [r3, #1]
 8004c3c:	021b      	lsls	r3, r3, #8
 8004c3e:	4313      	orrs	r3, r2
 8004c40:	68ba      	ldr	r2, [r7, #8]
 8004c42:	7892      	ldrb	r2, [r2, #2]
 8004c44:	431a      	orrs	r2, r3
 8004c46:	68bb      	ldr	r3, [r7, #8]
 8004c48:	78db      	ldrb	r3, [r3, #3]
 8004c4a:	041b      	lsls	r3, r3, #16
 8004c4c:	4313      	orrs	r3, r2
 8004c4e:	617b      	str	r3, [r7, #20]
 8004c50:	68fb      	ldr	r3, [r7, #12]
 8004c52:	681b      	ldr	r3, [r3, #0]
 8004c54:	22ca      	movs	r2, #202	; 0xca
 8004c56:	625a      	str	r2, [r3, #36]	; 0x24
 8004c58:	68fb      	ldr	r3, [r7, #12]
 8004c5a:	681b      	ldr	r3, [r3, #0]
 8004c5c:	2253      	movs	r2, #83	; 0x53
 8004c5e:	625a      	str	r2, [r3, #36]	; 0x24
 8004c60:	68f8      	ldr	r0, [r7, #12]
 8004c62:	f000 f92a 	bl	8004eba <RTC_EnterInitMode>
 8004c66:	4603      	mov	r3, r0
 8004c68:	2b00      	cmp	r3, #0
 8004c6a:	d00b      	beq.n	8004c84 <HAL_RTC_SetTime+0xe2>
 8004c6c:	68fb      	ldr	r3, [r7, #12]
 8004c6e:	681b      	ldr	r3, [r3, #0]
 8004c70:	22ff      	movs	r2, #255	; 0xff
 8004c72:	625a      	str	r2, [r3, #36]	; 0x24
 8004c74:	68fb      	ldr	r3, [r7, #12]
 8004c76:	2204      	movs	r2, #4
 8004c78:	775a      	strb	r2, [r3, #29]
 8004c7a:	68fb      	ldr	r3, [r7, #12]
 8004c7c:	2200      	movs	r2, #0
 8004c7e:	771a      	strb	r2, [r3, #28]
 8004c80:	2301      	movs	r3, #1
 8004c82:	e047      	b.n	8004d14 <HAL_RTC_SetTime+0x172>
 8004c84:	68fb      	ldr	r3, [r7, #12]
 8004c86:	681a      	ldr	r2, [r3, #0]
 8004c88:	697b      	ldr	r3, [r7, #20]
 8004c8a:	f003 337f 	and.w	r3, r3, #2139062143	; 0x7f7f7f7f
 8004c8e:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
 8004c92:	6013      	str	r3, [r2, #0]
 8004c94:	68fb      	ldr	r3, [r7, #12]
 8004c96:	681b      	ldr	r3, [r3, #0]
 8004c98:	689a      	ldr	r2, [r3, #8]
 8004c9a:	68fb      	ldr	r3, [r7, #12]
 8004c9c:	681b      	ldr	r3, [r3, #0]
 8004c9e:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8004ca2:	609a      	str	r2, [r3, #8]
 8004ca4:	68fb      	ldr	r3, [r7, #12]
 8004ca6:	681b      	ldr	r3, [r3, #0]
 8004ca8:	6899      	ldr	r1, [r3, #8]
 8004caa:	68bb      	ldr	r3, [r7, #8]
 8004cac:	68da      	ldr	r2, [r3, #12]
 8004cae:	68bb      	ldr	r3, [r7, #8]
 8004cb0:	691b      	ldr	r3, [r3, #16]
 8004cb2:	431a      	orrs	r2, r3
 8004cb4:	68fb      	ldr	r3, [r7, #12]
 8004cb6:	681b      	ldr	r3, [r3, #0]
 8004cb8:	430a      	orrs	r2, r1
 8004cba:	609a      	str	r2, [r3, #8]
 8004cbc:	68fb      	ldr	r3, [r7, #12]
 8004cbe:	681b      	ldr	r3, [r3, #0]
 8004cc0:	68da      	ldr	r2, [r3, #12]
 8004cc2:	68fb      	ldr	r3, [r7, #12]
 8004cc4:	681b      	ldr	r3, [r3, #0]
 8004cc6:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004cca:	60da      	str	r2, [r3, #12]
 8004ccc:	68fb      	ldr	r3, [r7, #12]
 8004cce:	681b      	ldr	r3, [r3, #0]
 8004cd0:	689b      	ldr	r3, [r3, #8]
 8004cd2:	f003 0320 	and.w	r3, r3, #32
 8004cd6:	2b00      	cmp	r3, #0
 8004cd8:	d111      	bne.n	8004cfe <HAL_RTC_SetTime+0x15c>
 8004cda:	68f8      	ldr	r0, [r7, #12]
 8004cdc:	f000 f8c5 	bl	8004e6a <HAL_RTC_WaitForSynchro>
 8004ce0:	4603      	mov	r3, r0
 8004ce2:	2b00      	cmp	r3, #0
 8004ce4:	d00b      	beq.n	8004cfe <HAL_RTC_SetTime+0x15c>
 8004ce6:	68fb      	ldr	r3, [r7, #12]
 8004ce8:	681b      	ldr	r3, [r3, #0]
 8004cea:	22ff      	movs	r2, #255	; 0xff
 8004cec:	625a      	str	r2, [r3, #36]	; 0x24
 8004cee:	68fb      	ldr	r3, [r7, #12]
 8004cf0:	2204      	movs	r2, #4
 8004cf2:	775a      	strb	r2, [r3, #29]
 8004cf4:	68fb      	ldr	r3, [r7, #12]
 8004cf6:	2200      	movs	r2, #0
 8004cf8:	771a      	strb	r2, [r3, #28]
 8004cfa:	2301      	movs	r3, #1
 8004cfc:	e00a      	b.n	8004d14 <HAL_RTC_SetTime+0x172>
 8004cfe:	68fb      	ldr	r3, [r7, #12]
 8004d00:	681b      	ldr	r3, [r3, #0]
 8004d02:	22ff      	movs	r2, #255	; 0xff
 8004d04:	625a      	str	r2, [r3, #36]	; 0x24
 8004d06:	68fb      	ldr	r3, [r7, #12]
 8004d08:	2201      	movs	r2, #1
 8004d0a:	775a      	strb	r2, [r3, #29]
 8004d0c:	68fb      	ldr	r3, [r7, #12]
 8004d0e:	2200      	movs	r2, #0
 8004d10:	771a      	strb	r2, [r3, #28]
 8004d12:	2300      	movs	r3, #0
 8004d14:	4618      	mov	r0, r3
 8004d16:	371c      	adds	r7, #28
 8004d18:	46bd      	mov	sp, r7
 8004d1a:	bd90      	pop	{r4, r7, pc}

08004d1c <HAL_RTC_SetDate>:
 8004d1c:	b590      	push	{r4, r7, lr}
 8004d1e:	b087      	sub	sp, #28
 8004d20:	af00      	add	r7, sp, #0
 8004d22:	60f8      	str	r0, [r7, #12]
 8004d24:	60b9      	str	r1, [r7, #8]
 8004d26:	607a      	str	r2, [r7, #4]
 8004d28:	2300      	movs	r3, #0
 8004d2a:	617b      	str	r3, [r7, #20]
 8004d2c:	68fb      	ldr	r3, [r7, #12]
 8004d2e:	7f1b      	ldrb	r3, [r3, #28]
 8004d30:	2b01      	cmp	r3, #1
 8004d32:	d101      	bne.n	8004d38 <HAL_RTC_SetDate+0x1c>
 8004d34:	2302      	movs	r3, #2
 8004d36:	e094      	b.n	8004e62 <HAL_RTC_SetDate+0x146>
 8004d38:	68fb      	ldr	r3, [r7, #12]
 8004d3a:	2201      	movs	r2, #1
 8004d3c:	771a      	strb	r2, [r3, #28]
 8004d3e:	68fb      	ldr	r3, [r7, #12]
 8004d40:	2202      	movs	r2, #2
 8004d42:	775a      	strb	r2, [r3, #29]
 8004d44:	687b      	ldr	r3, [r7, #4]
 8004d46:	2b00      	cmp	r3, #0
 8004d48:	d10e      	bne.n	8004d68 <HAL_RTC_SetDate+0x4c>
 8004d4a:	68bb      	ldr	r3, [r7, #8]
 8004d4c:	785b      	ldrb	r3, [r3, #1]
 8004d4e:	f003 0310 	and.w	r3, r3, #16
 8004d52:	2b00      	cmp	r3, #0
 8004d54:	d008      	beq.n	8004d68 <HAL_RTC_SetDate+0x4c>
 8004d56:	68bb      	ldr	r3, [r7, #8]
 8004d58:	785b      	ldrb	r3, [r3, #1]
 8004d5a:	f023 0310 	bic.w	r3, r3, #16
 8004d5e:	b2db      	uxtb	r3, r3
 8004d60:	330a      	adds	r3, #10
 8004d62:	b2da      	uxtb	r2, r3
 8004d64:	68bb      	ldr	r3, [r7, #8]
 8004d66:	705a      	strb	r2, [r3, #1]
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	2b00      	cmp	r3, #0
 8004d6c:	d11c      	bne.n	8004da8 <HAL_RTC_SetDate+0x8c>
 8004d6e:	68bb      	ldr	r3, [r7, #8]
 8004d70:	78db      	ldrb	r3, [r3, #3]
 8004d72:	4618      	mov	r0, r3
 8004d74:	f000 f8cd 	bl	8004f12 <RTC_ByteToBcd2>
 8004d78:	4603      	mov	r3, r0
 8004d7a:	041c      	lsls	r4, r3, #16
 8004d7c:	68bb      	ldr	r3, [r7, #8]
 8004d7e:	785b      	ldrb	r3, [r3, #1]
 8004d80:	4618      	mov	r0, r3
 8004d82:	f000 f8c6 	bl	8004f12 <RTC_ByteToBcd2>
 8004d86:	4603      	mov	r3, r0
 8004d88:	021b      	lsls	r3, r3, #8
 8004d8a:	431c      	orrs	r4, r3
 8004d8c:	68bb      	ldr	r3, [r7, #8]
 8004d8e:	789b      	ldrb	r3, [r3, #2]
 8004d90:	4618      	mov	r0, r3
 8004d92:	f000 f8be 	bl	8004f12 <RTC_ByteToBcd2>
 8004d96:	4603      	mov	r3, r0
 8004d98:	ea44 0203 	orr.w	r2, r4, r3
 8004d9c:	68bb      	ldr	r3, [r7, #8]
 8004d9e:	781b      	ldrb	r3, [r3, #0]
 8004da0:	035b      	lsls	r3, r3, #13
 8004da2:	4313      	orrs	r3, r2
 8004da4:	617b      	str	r3, [r7, #20]
 8004da6:	e00e      	b.n	8004dc6 <HAL_RTC_SetDate+0xaa>
 8004da8:	68bb      	ldr	r3, [r7, #8]
 8004daa:	78db      	ldrb	r3, [r3, #3]
 8004dac:	041a      	lsls	r2, r3, #16
 8004dae:	68bb      	ldr	r3, [r7, #8]
 8004db0:	785b      	ldrb	r3, [r3, #1]
 8004db2:	021b      	lsls	r3, r3, #8
 8004db4:	4313      	orrs	r3, r2
 8004db6:	68ba      	ldr	r2, [r7, #8]
 8004db8:	7892      	ldrb	r2, [r2, #2]
 8004dba:	431a      	orrs	r2, r3
 8004dbc:	68bb      	ldr	r3, [r7, #8]
 8004dbe:	781b      	ldrb	r3, [r3, #0]
 8004dc0:	035b      	lsls	r3, r3, #13
 8004dc2:	4313      	orrs	r3, r2
 8004dc4:	617b      	str	r3, [r7, #20]
 8004dc6:	68fb      	ldr	r3, [r7, #12]
 8004dc8:	681b      	ldr	r3, [r3, #0]
 8004dca:	22ca      	movs	r2, #202	; 0xca
 8004dcc:	625a      	str	r2, [r3, #36]	; 0x24
 8004dce:	68fb      	ldr	r3, [r7, #12]
 8004dd0:	681b      	ldr	r3, [r3, #0]
 8004dd2:	2253      	movs	r2, #83	; 0x53
 8004dd4:	625a      	str	r2, [r3, #36]	; 0x24
 8004dd6:	68f8      	ldr	r0, [r7, #12]
 8004dd8:	f000 f86f 	bl	8004eba <RTC_EnterInitMode>
 8004ddc:	4603      	mov	r3, r0
 8004dde:	2b00      	cmp	r3, #0
 8004de0:	d00b      	beq.n	8004dfa <HAL_RTC_SetDate+0xde>
 8004de2:	68fb      	ldr	r3, [r7, #12]
 8004de4:	681b      	ldr	r3, [r3, #0]
 8004de6:	22ff      	movs	r2, #255	; 0xff
 8004de8:	625a      	str	r2, [r3, #36]	; 0x24
 8004dea:	68fb      	ldr	r3, [r7, #12]
 8004dec:	2204      	movs	r2, #4
 8004dee:	775a      	strb	r2, [r3, #29]
 8004df0:	68fb      	ldr	r3, [r7, #12]
 8004df2:	2200      	movs	r2, #0
 8004df4:	771a      	strb	r2, [r3, #28]
 8004df6:	2301      	movs	r3, #1
 8004df8:	e033      	b.n	8004e62 <HAL_RTC_SetDate+0x146>
 8004dfa:	68fb      	ldr	r3, [r7, #12]
 8004dfc:	681a      	ldr	r2, [r3, #0]
 8004dfe:	697b      	ldr	r3, [r7, #20]
 8004e00:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8004e04:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8004e08:	6053      	str	r3, [r2, #4]
 8004e0a:	68fb      	ldr	r3, [r7, #12]
 8004e0c:	681b      	ldr	r3, [r3, #0]
 8004e0e:	68da      	ldr	r2, [r3, #12]
 8004e10:	68fb      	ldr	r3, [r7, #12]
 8004e12:	681b      	ldr	r3, [r3, #0]
 8004e14:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004e18:	60da      	str	r2, [r3, #12]
 8004e1a:	68fb      	ldr	r3, [r7, #12]
 8004e1c:	681b      	ldr	r3, [r3, #0]
 8004e1e:	689b      	ldr	r3, [r3, #8]
 8004e20:	f003 0320 	and.w	r3, r3, #32
 8004e24:	2b00      	cmp	r3, #0
 8004e26:	d111      	bne.n	8004e4c <HAL_RTC_SetDate+0x130>
 8004e28:	68f8      	ldr	r0, [r7, #12]
 8004e2a:	f000 f81e 	bl	8004e6a <HAL_RTC_WaitForSynchro>
 8004e2e:	4603      	mov	r3, r0
 8004e30:	2b00      	cmp	r3, #0
 8004e32:	d00b      	beq.n	8004e4c <HAL_RTC_SetDate+0x130>
 8004e34:	68fb      	ldr	r3, [r7, #12]
 8004e36:	681b      	ldr	r3, [r3, #0]
 8004e38:	22ff      	movs	r2, #255	; 0xff
 8004e3a:	625a      	str	r2, [r3, #36]	; 0x24
 8004e3c:	68fb      	ldr	r3, [r7, #12]
 8004e3e:	2204      	movs	r2, #4
 8004e40:	775a      	strb	r2, [r3, #29]
 8004e42:	68fb      	ldr	r3, [r7, #12]
 8004e44:	2200      	movs	r2, #0
 8004e46:	771a      	strb	r2, [r3, #28]
 8004e48:	2301      	movs	r3, #1
 8004e4a:	e00a      	b.n	8004e62 <HAL_RTC_SetDate+0x146>
 8004e4c:	68fb      	ldr	r3, [r7, #12]
 8004e4e:	681b      	ldr	r3, [r3, #0]
 8004e50:	22ff      	movs	r2, #255	; 0xff
 8004e52:	625a      	str	r2, [r3, #36]	; 0x24
 8004e54:	68fb      	ldr	r3, [r7, #12]
 8004e56:	2201      	movs	r2, #1
 8004e58:	775a      	strb	r2, [r3, #29]
 8004e5a:	68fb      	ldr	r3, [r7, #12]
 8004e5c:	2200      	movs	r2, #0
 8004e5e:	771a      	strb	r2, [r3, #28]
 8004e60:	2300      	movs	r3, #0
 8004e62:	4618      	mov	r0, r3
 8004e64:	371c      	adds	r7, #28
 8004e66:	46bd      	mov	sp, r7
 8004e68:	bd90      	pop	{r4, r7, pc}

08004e6a <HAL_RTC_WaitForSynchro>:
 8004e6a:	b580      	push	{r7, lr}
 8004e6c:	b084      	sub	sp, #16
 8004e6e:	af00      	add	r7, sp, #0
 8004e70:	6078      	str	r0, [r7, #4]
 8004e72:	2300      	movs	r3, #0
 8004e74:	60fb      	str	r3, [r7, #12]
 8004e76:	687b      	ldr	r3, [r7, #4]
 8004e78:	681b      	ldr	r3, [r3, #0]
 8004e7a:	68da      	ldr	r2, [r3, #12]
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	681b      	ldr	r3, [r3, #0]
 8004e80:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 8004e84:	60da      	str	r2, [r3, #12]
 8004e86:	f7fe f843 	bl	8002f10 <HAL_GetTick>
 8004e8a:	60f8      	str	r0, [r7, #12]
 8004e8c:	e009      	b.n	8004ea2 <HAL_RTC_WaitForSynchro+0x38>
 8004e8e:	f7fe f83f 	bl	8002f10 <HAL_GetTick>
 8004e92:	4602      	mov	r2, r0
 8004e94:	68fb      	ldr	r3, [r7, #12]
 8004e96:	1ad3      	subs	r3, r2, r3
 8004e98:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8004e9c:	d901      	bls.n	8004ea2 <HAL_RTC_WaitForSynchro+0x38>
 8004e9e:	2303      	movs	r3, #3
 8004ea0:	e007      	b.n	8004eb2 <HAL_RTC_WaitForSynchro+0x48>
 8004ea2:	687b      	ldr	r3, [r7, #4]
 8004ea4:	681b      	ldr	r3, [r3, #0]
 8004ea6:	68db      	ldr	r3, [r3, #12]
 8004ea8:	f003 0320 	and.w	r3, r3, #32
 8004eac:	2b00      	cmp	r3, #0
 8004eae:	d0ee      	beq.n	8004e8e <HAL_RTC_WaitForSynchro+0x24>
 8004eb0:	2300      	movs	r3, #0
 8004eb2:	4618      	mov	r0, r3
 8004eb4:	3710      	adds	r7, #16
 8004eb6:	46bd      	mov	sp, r7
 8004eb8:	bd80      	pop	{r7, pc}

08004eba <RTC_EnterInitMode>:
 8004eba:	b580      	push	{r7, lr}
 8004ebc:	b084      	sub	sp, #16
 8004ebe:	af00      	add	r7, sp, #0
 8004ec0:	6078      	str	r0, [r7, #4]
 8004ec2:	2300      	movs	r3, #0
 8004ec4:	60fb      	str	r3, [r7, #12]
 8004ec6:	687b      	ldr	r3, [r7, #4]
 8004ec8:	681b      	ldr	r3, [r3, #0]
 8004eca:	68db      	ldr	r3, [r3, #12]
 8004ecc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004ed0:	2b00      	cmp	r3, #0
 8004ed2:	d119      	bne.n	8004f08 <RTC_EnterInitMode+0x4e>
 8004ed4:	687b      	ldr	r3, [r7, #4]
 8004ed6:	681b      	ldr	r3, [r3, #0]
 8004ed8:	f04f 32ff 	mov.w	r2, #4294967295
 8004edc:	60da      	str	r2, [r3, #12]
 8004ede:	f7fe f817 	bl	8002f10 <HAL_GetTick>
 8004ee2:	60f8      	str	r0, [r7, #12]
 8004ee4:	e009      	b.n	8004efa <RTC_EnterInitMode+0x40>
 8004ee6:	f7fe f813 	bl	8002f10 <HAL_GetTick>
 8004eea:	4602      	mov	r2, r0
 8004eec:	68fb      	ldr	r3, [r7, #12]
 8004eee:	1ad3      	subs	r3, r2, r3
 8004ef0:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8004ef4:	d901      	bls.n	8004efa <RTC_EnterInitMode+0x40>
 8004ef6:	2303      	movs	r3, #3
 8004ef8:	e007      	b.n	8004f0a <RTC_EnterInitMode+0x50>
 8004efa:	687b      	ldr	r3, [r7, #4]
 8004efc:	681b      	ldr	r3, [r3, #0]
 8004efe:	68db      	ldr	r3, [r3, #12]
 8004f00:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004f04:	2b00      	cmp	r3, #0
 8004f06:	d0ee      	beq.n	8004ee6 <RTC_EnterInitMode+0x2c>
 8004f08:	2300      	movs	r3, #0
 8004f0a:	4618      	mov	r0, r3
 8004f0c:	3710      	adds	r7, #16
 8004f0e:	46bd      	mov	sp, r7
 8004f10:	bd80      	pop	{r7, pc}

08004f12 <RTC_ByteToBcd2>:
 8004f12:	b480      	push	{r7}
 8004f14:	b085      	sub	sp, #20
 8004f16:	af00      	add	r7, sp, #0
 8004f18:	4603      	mov	r3, r0
 8004f1a:	71fb      	strb	r3, [r7, #7]
 8004f1c:	2300      	movs	r3, #0
 8004f1e:	60fb      	str	r3, [r7, #12]
 8004f20:	e005      	b.n	8004f2e <RTC_ByteToBcd2+0x1c>
 8004f22:	68fb      	ldr	r3, [r7, #12]
 8004f24:	3301      	adds	r3, #1
 8004f26:	60fb      	str	r3, [r7, #12]
 8004f28:	79fb      	ldrb	r3, [r7, #7]
 8004f2a:	3b0a      	subs	r3, #10
 8004f2c:	71fb      	strb	r3, [r7, #7]
 8004f2e:	79fb      	ldrb	r3, [r7, #7]
 8004f30:	2b09      	cmp	r3, #9
 8004f32:	d8f6      	bhi.n	8004f22 <RTC_ByteToBcd2+0x10>
 8004f34:	68fb      	ldr	r3, [r7, #12]
 8004f36:	b2db      	uxtb	r3, r3
 8004f38:	011b      	lsls	r3, r3, #4
 8004f3a:	b2da      	uxtb	r2, r3
 8004f3c:	79fb      	ldrb	r3, [r7, #7]
 8004f3e:	4313      	orrs	r3, r2
 8004f40:	b2db      	uxtb	r3, r3
 8004f42:	4618      	mov	r0, r3
 8004f44:	3714      	adds	r7, #20
 8004f46:	46bd      	mov	sp, r7
 8004f48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f4c:	4770      	bx	lr

08004f4e <HAL_SPI_Init>:
 8004f4e:	b580      	push	{r7, lr}
 8004f50:	b084      	sub	sp, #16
 8004f52:	af00      	add	r7, sp, #0
 8004f54:	6078      	str	r0, [r7, #4]
 8004f56:	687b      	ldr	r3, [r7, #4]
 8004f58:	2b00      	cmp	r3, #0
 8004f5a:	d101      	bne.n	8004f60 <HAL_SPI_Init+0x12>
 8004f5c:	2301      	movs	r3, #1
 8004f5e:	e09d      	b.n	800509c <HAL_SPI_Init+0x14e>
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f64:	2b00      	cmp	r3, #0
 8004f66:	d108      	bne.n	8004f7a <HAL_SPI_Init+0x2c>
 8004f68:	687b      	ldr	r3, [r7, #4]
 8004f6a:	685b      	ldr	r3, [r3, #4]
 8004f6c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8004f70:	d009      	beq.n	8004f86 <HAL_SPI_Init+0x38>
 8004f72:	687b      	ldr	r3, [r7, #4]
 8004f74:	2200      	movs	r2, #0
 8004f76:	61da      	str	r2, [r3, #28]
 8004f78:	e005      	b.n	8004f86 <HAL_SPI_Init+0x38>
 8004f7a:	687b      	ldr	r3, [r7, #4]
 8004f7c:	2200      	movs	r2, #0
 8004f7e:	611a      	str	r2, [r3, #16]
 8004f80:	687b      	ldr	r3, [r7, #4]
 8004f82:	2200      	movs	r2, #0
 8004f84:	615a      	str	r2, [r3, #20]
 8004f86:	687b      	ldr	r3, [r7, #4]
 8004f88:	2200      	movs	r2, #0
 8004f8a:	629a      	str	r2, [r3, #40]	; 0x28
 8004f8c:	687b      	ldr	r3, [r7, #4]
 8004f8e:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8004f92:	b2db      	uxtb	r3, r3
 8004f94:	2b00      	cmp	r3, #0
 8004f96:	d106      	bne.n	8004fa6 <HAL_SPI_Init+0x58>
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	2200      	movs	r2, #0
 8004f9c:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 8004fa0:	6878      	ldr	r0, [r7, #4]
 8004fa2:	f7fc fe73 	bl	8001c8c <HAL_SPI_MspInit>
 8004fa6:	687b      	ldr	r3, [r7, #4]
 8004fa8:	2202      	movs	r2, #2
 8004faa:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8004fae:	687b      	ldr	r3, [r7, #4]
 8004fb0:	681b      	ldr	r3, [r3, #0]
 8004fb2:	681a      	ldr	r2, [r3, #0]
 8004fb4:	687b      	ldr	r3, [r7, #4]
 8004fb6:	681b      	ldr	r3, [r3, #0]
 8004fb8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004fbc:	601a      	str	r2, [r3, #0]
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	68db      	ldr	r3, [r3, #12]
 8004fc2:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8004fc6:	d902      	bls.n	8004fce <HAL_SPI_Init+0x80>
 8004fc8:	2300      	movs	r3, #0
 8004fca:	60fb      	str	r3, [r7, #12]
 8004fcc:	e002      	b.n	8004fd4 <HAL_SPI_Init+0x86>
 8004fce:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004fd2:	60fb      	str	r3, [r7, #12]
 8004fd4:	687b      	ldr	r3, [r7, #4]
 8004fd6:	68db      	ldr	r3, [r3, #12]
 8004fd8:	f5b3 6f70 	cmp.w	r3, #3840	; 0xf00
 8004fdc:	d007      	beq.n	8004fee <HAL_SPI_Init+0xa0>
 8004fde:	687b      	ldr	r3, [r7, #4]
 8004fe0:	68db      	ldr	r3, [r3, #12]
 8004fe2:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8004fe6:	d002      	beq.n	8004fee <HAL_SPI_Init+0xa0>
 8004fe8:	687b      	ldr	r3, [r7, #4]
 8004fea:	2200      	movs	r2, #0
 8004fec:	629a      	str	r2, [r3, #40]	; 0x28
 8004fee:	687b      	ldr	r3, [r7, #4]
 8004ff0:	685b      	ldr	r3, [r3, #4]
 8004ff2:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8004ff6:	687b      	ldr	r3, [r7, #4]
 8004ff8:	689b      	ldr	r3, [r3, #8]
 8004ffa:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8004ffe:	431a      	orrs	r2, r3
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	691b      	ldr	r3, [r3, #16]
 8005004:	f003 0302 	and.w	r3, r3, #2
 8005008:	431a      	orrs	r2, r3
 800500a:	687b      	ldr	r3, [r7, #4]
 800500c:	695b      	ldr	r3, [r3, #20]
 800500e:	f003 0301 	and.w	r3, r3, #1
 8005012:	431a      	orrs	r2, r3
 8005014:	687b      	ldr	r3, [r7, #4]
 8005016:	699b      	ldr	r3, [r3, #24]
 8005018:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800501c:	431a      	orrs	r2, r3
 800501e:	687b      	ldr	r3, [r7, #4]
 8005020:	69db      	ldr	r3, [r3, #28]
 8005022:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8005026:	431a      	orrs	r2, r3
 8005028:	687b      	ldr	r3, [r7, #4]
 800502a:	6a1b      	ldr	r3, [r3, #32]
 800502c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005030:	ea42 0103 	orr.w	r1, r2, r3
 8005034:	687b      	ldr	r3, [r7, #4]
 8005036:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005038:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 800503c:	687b      	ldr	r3, [r7, #4]
 800503e:	681b      	ldr	r3, [r3, #0]
 8005040:	430a      	orrs	r2, r1
 8005042:	601a      	str	r2, [r3, #0]
 8005044:	687b      	ldr	r3, [r7, #4]
 8005046:	699b      	ldr	r3, [r3, #24]
 8005048:	0c1b      	lsrs	r3, r3, #16
 800504a:	f003 0204 	and.w	r2, r3, #4
 800504e:	687b      	ldr	r3, [r7, #4]
 8005050:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005052:	f003 0310 	and.w	r3, r3, #16
 8005056:	431a      	orrs	r2, r3
 8005058:	687b      	ldr	r3, [r7, #4]
 800505a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800505c:	f003 0308 	and.w	r3, r3, #8
 8005060:	431a      	orrs	r2, r3
 8005062:	687b      	ldr	r3, [r7, #4]
 8005064:	68db      	ldr	r3, [r3, #12]
 8005066:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800506a:	ea42 0103 	orr.w	r1, r2, r3
 800506e:	68fb      	ldr	r3, [r7, #12]
 8005070:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	430a      	orrs	r2, r1
 800507a:	605a      	str	r2, [r3, #4]
 800507c:	687b      	ldr	r3, [r7, #4]
 800507e:	681b      	ldr	r3, [r3, #0]
 8005080:	69da      	ldr	r2, [r3, #28]
 8005082:	687b      	ldr	r3, [r7, #4]
 8005084:	681b      	ldr	r3, [r3, #0]
 8005086:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800508a:	61da      	str	r2, [r3, #28]
 800508c:	687b      	ldr	r3, [r7, #4]
 800508e:	2200      	movs	r2, #0
 8005090:	661a      	str	r2, [r3, #96]	; 0x60
 8005092:	687b      	ldr	r3, [r7, #4]
 8005094:	2201      	movs	r2, #1
 8005096:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 800509a:	2300      	movs	r3, #0
 800509c:	4618      	mov	r0, r3
 800509e:	3710      	adds	r7, #16
 80050a0:	46bd      	mov	sp, r7
 80050a2:	bd80      	pop	{r7, pc}

080050a4 <HAL_SPI_Transmit>:
 80050a4:	b580      	push	{r7, lr}
 80050a6:	b088      	sub	sp, #32
 80050a8:	af00      	add	r7, sp, #0
 80050aa:	60f8      	str	r0, [r7, #12]
 80050ac:	60b9      	str	r1, [r7, #8]
 80050ae:	603b      	str	r3, [r7, #0]
 80050b0:	4613      	mov	r3, r2
 80050b2:	80fb      	strh	r3, [r7, #6]
 80050b4:	2300      	movs	r3, #0
 80050b6:	77fb      	strb	r3, [r7, #31]
 80050b8:	68fb      	ldr	r3, [r7, #12]
 80050ba:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 80050be:	2b01      	cmp	r3, #1
 80050c0:	d101      	bne.n	80050c6 <HAL_SPI_Transmit+0x22>
 80050c2:	2302      	movs	r3, #2
 80050c4:	e158      	b.n	8005378 <HAL_SPI_Transmit+0x2d4>
 80050c6:	68fb      	ldr	r3, [r7, #12]
 80050c8:	2201      	movs	r2, #1
 80050ca:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 80050ce:	f7fd ff1f 	bl	8002f10 <HAL_GetTick>
 80050d2:	61b8      	str	r0, [r7, #24]
 80050d4:	88fb      	ldrh	r3, [r7, #6]
 80050d6:	82fb      	strh	r3, [r7, #22]
 80050d8:	68fb      	ldr	r3, [r7, #12]
 80050da:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 80050de:	b2db      	uxtb	r3, r3
 80050e0:	2b01      	cmp	r3, #1
 80050e2:	d002      	beq.n	80050ea <HAL_SPI_Transmit+0x46>
 80050e4:	2302      	movs	r3, #2
 80050e6:	77fb      	strb	r3, [r7, #31]
 80050e8:	e13d      	b.n	8005366 <HAL_SPI_Transmit+0x2c2>
 80050ea:	68bb      	ldr	r3, [r7, #8]
 80050ec:	2b00      	cmp	r3, #0
 80050ee:	d002      	beq.n	80050f6 <HAL_SPI_Transmit+0x52>
 80050f0:	88fb      	ldrh	r3, [r7, #6]
 80050f2:	2b00      	cmp	r3, #0
 80050f4:	d102      	bne.n	80050fc <HAL_SPI_Transmit+0x58>
 80050f6:	2301      	movs	r3, #1
 80050f8:	77fb      	strb	r3, [r7, #31]
 80050fa:	e134      	b.n	8005366 <HAL_SPI_Transmit+0x2c2>
 80050fc:	68fb      	ldr	r3, [r7, #12]
 80050fe:	2203      	movs	r2, #3
 8005100:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8005104:	68fb      	ldr	r3, [r7, #12]
 8005106:	2200      	movs	r2, #0
 8005108:	661a      	str	r2, [r3, #96]	; 0x60
 800510a:	68fb      	ldr	r3, [r7, #12]
 800510c:	68ba      	ldr	r2, [r7, #8]
 800510e:	639a      	str	r2, [r3, #56]	; 0x38
 8005110:	68fb      	ldr	r3, [r7, #12]
 8005112:	88fa      	ldrh	r2, [r7, #6]
 8005114:	879a      	strh	r2, [r3, #60]	; 0x3c
 8005116:	68fb      	ldr	r3, [r7, #12]
 8005118:	88fa      	ldrh	r2, [r7, #6]
 800511a:	87da      	strh	r2, [r3, #62]	; 0x3e
 800511c:	68fb      	ldr	r3, [r7, #12]
 800511e:	2200      	movs	r2, #0
 8005120:	641a      	str	r2, [r3, #64]	; 0x40
 8005122:	68fb      	ldr	r3, [r7, #12]
 8005124:	2200      	movs	r2, #0
 8005126:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 800512a:	68fb      	ldr	r3, [r7, #12]
 800512c:	2200      	movs	r2, #0
 800512e:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8005132:	68fb      	ldr	r3, [r7, #12]
 8005134:	2200      	movs	r2, #0
 8005136:	651a      	str	r2, [r3, #80]	; 0x50
 8005138:	68fb      	ldr	r3, [r7, #12]
 800513a:	2200      	movs	r2, #0
 800513c:	64da      	str	r2, [r3, #76]	; 0x4c
 800513e:	68fb      	ldr	r3, [r7, #12]
 8005140:	689b      	ldr	r3, [r3, #8]
 8005142:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005146:	d10f      	bne.n	8005168 <HAL_SPI_Transmit+0xc4>
 8005148:	68fb      	ldr	r3, [r7, #12]
 800514a:	681b      	ldr	r3, [r3, #0]
 800514c:	681a      	ldr	r2, [r3, #0]
 800514e:	68fb      	ldr	r3, [r7, #12]
 8005150:	681b      	ldr	r3, [r3, #0]
 8005152:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005156:	601a      	str	r2, [r3, #0]
 8005158:	68fb      	ldr	r3, [r7, #12]
 800515a:	681b      	ldr	r3, [r3, #0]
 800515c:	681a      	ldr	r2, [r3, #0]
 800515e:	68fb      	ldr	r3, [r7, #12]
 8005160:	681b      	ldr	r3, [r3, #0]
 8005162:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8005166:	601a      	str	r2, [r3, #0]
 8005168:	68fb      	ldr	r3, [r7, #12]
 800516a:	681b      	ldr	r3, [r3, #0]
 800516c:	681b      	ldr	r3, [r3, #0]
 800516e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005172:	2b40      	cmp	r3, #64	; 0x40
 8005174:	d007      	beq.n	8005186 <HAL_SPI_Transmit+0xe2>
 8005176:	68fb      	ldr	r3, [r7, #12]
 8005178:	681b      	ldr	r3, [r3, #0]
 800517a:	681a      	ldr	r2, [r3, #0]
 800517c:	68fb      	ldr	r3, [r7, #12]
 800517e:	681b      	ldr	r3, [r3, #0]
 8005180:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005184:	601a      	str	r2, [r3, #0]
 8005186:	68fb      	ldr	r3, [r7, #12]
 8005188:	68db      	ldr	r3, [r3, #12]
 800518a:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 800518e:	d94b      	bls.n	8005228 <HAL_SPI_Transmit+0x184>
 8005190:	68fb      	ldr	r3, [r7, #12]
 8005192:	685b      	ldr	r3, [r3, #4]
 8005194:	2b00      	cmp	r3, #0
 8005196:	d002      	beq.n	800519e <HAL_SPI_Transmit+0xfa>
 8005198:	8afb      	ldrh	r3, [r7, #22]
 800519a:	2b01      	cmp	r3, #1
 800519c:	d13e      	bne.n	800521c <HAL_SPI_Transmit+0x178>
 800519e:	68fb      	ldr	r3, [r7, #12]
 80051a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80051a2:	881a      	ldrh	r2, [r3, #0]
 80051a4:	68fb      	ldr	r3, [r7, #12]
 80051a6:	681b      	ldr	r3, [r3, #0]
 80051a8:	60da      	str	r2, [r3, #12]
 80051aa:	68fb      	ldr	r3, [r7, #12]
 80051ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80051ae:	1c9a      	adds	r2, r3, #2
 80051b0:	68fb      	ldr	r3, [r7, #12]
 80051b2:	639a      	str	r2, [r3, #56]	; 0x38
 80051b4:	68fb      	ldr	r3, [r7, #12]
 80051b6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80051b8:	b29b      	uxth	r3, r3
 80051ba:	3b01      	subs	r3, #1
 80051bc:	b29a      	uxth	r2, r3
 80051be:	68fb      	ldr	r3, [r7, #12]
 80051c0:	87da      	strh	r2, [r3, #62]	; 0x3e
 80051c2:	e02b      	b.n	800521c <HAL_SPI_Transmit+0x178>
 80051c4:	68fb      	ldr	r3, [r7, #12]
 80051c6:	681b      	ldr	r3, [r3, #0]
 80051c8:	689b      	ldr	r3, [r3, #8]
 80051ca:	f003 0302 	and.w	r3, r3, #2
 80051ce:	2b02      	cmp	r3, #2
 80051d0:	d112      	bne.n	80051f8 <HAL_SPI_Transmit+0x154>
 80051d2:	68fb      	ldr	r3, [r7, #12]
 80051d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80051d6:	881a      	ldrh	r2, [r3, #0]
 80051d8:	68fb      	ldr	r3, [r7, #12]
 80051da:	681b      	ldr	r3, [r3, #0]
 80051dc:	60da      	str	r2, [r3, #12]
 80051de:	68fb      	ldr	r3, [r7, #12]
 80051e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80051e2:	1c9a      	adds	r2, r3, #2
 80051e4:	68fb      	ldr	r3, [r7, #12]
 80051e6:	639a      	str	r2, [r3, #56]	; 0x38
 80051e8:	68fb      	ldr	r3, [r7, #12]
 80051ea:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80051ec:	b29b      	uxth	r3, r3
 80051ee:	3b01      	subs	r3, #1
 80051f0:	b29a      	uxth	r2, r3
 80051f2:	68fb      	ldr	r3, [r7, #12]
 80051f4:	87da      	strh	r2, [r3, #62]	; 0x3e
 80051f6:	e011      	b.n	800521c <HAL_SPI_Transmit+0x178>
 80051f8:	f7fd fe8a 	bl	8002f10 <HAL_GetTick>
 80051fc:	4602      	mov	r2, r0
 80051fe:	69bb      	ldr	r3, [r7, #24]
 8005200:	1ad3      	subs	r3, r2, r3
 8005202:	683a      	ldr	r2, [r7, #0]
 8005204:	429a      	cmp	r2, r3
 8005206:	d803      	bhi.n	8005210 <HAL_SPI_Transmit+0x16c>
 8005208:	683b      	ldr	r3, [r7, #0]
 800520a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800520e:	d102      	bne.n	8005216 <HAL_SPI_Transmit+0x172>
 8005210:	683b      	ldr	r3, [r7, #0]
 8005212:	2b00      	cmp	r3, #0
 8005214:	d102      	bne.n	800521c <HAL_SPI_Transmit+0x178>
 8005216:	2303      	movs	r3, #3
 8005218:	77fb      	strb	r3, [r7, #31]
 800521a:	e0a4      	b.n	8005366 <HAL_SPI_Transmit+0x2c2>
 800521c:	68fb      	ldr	r3, [r7, #12]
 800521e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005220:	b29b      	uxth	r3, r3
 8005222:	2b00      	cmp	r3, #0
 8005224:	d1ce      	bne.n	80051c4 <HAL_SPI_Transmit+0x120>
 8005226:	e07c      	b.n	8005322 <HAL_SPI_Transmit+0x27e>
 8005228:	68fb      	ldr	r3, [r7, #12]
 800522a:	685b      	ldr	r3, [r3, #4]
 800522c:	2b00      	cmp	r3, #0
 800522e:	d002      	beq.n	8005236 <HAL_SPI_Transmit+0x192>
 8005230:	8afb      	ldrh	r3, [r7, #22]
 8005232:	2b01      	cmp	r3, #1
 8005234:	d170      	bne.n	8005318 <HAL_SPI_Transmit+0x274>
 8005236:	68fb      	ldr	r3, [r7, #12]
 8005238:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800523a:	b29b      	uxth	r3, r3
 800523c:	2b01      	cmp	r3, #1
 800523e:	d912      	bls.n	8005266 <HAL_SPI_Transmit+0x1c2>
 8005240:	68fb      	ldr	r3, [r7, #12]
 8005242:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005244:	881a      	ldrh	r2, [r3, #0]
 8005246:	68fb      	ldr	r3, [r7, #12]
 8005248:	681b      	ldr	r3, [r3, #0]
 800524a:	60da      	str	r2, [r3, #12]
 800524c:	68fb      	ldr	r3, [r7, #12]
 800524e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005250:	1c9a      	adds	r2, r3, #2
 8005252:	68fb      	ldr	r3, [r7, #12]
 8005254:	639a      	str	r2, [r3, #56]	; 0x38
 8005256:	68fb      	ldr	r3, [r7, #12]
 8005258:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800525a:	b29b      	uxth	r3, r3
 800525c:	3b02      	subs	r3, #2
 800525e:	b29a      	uxth	r2, r3
 8005260:	68fb      	ldr	r3, [r7, #12]
 8005262:	87da      	strh	r2, [r3, #62]	; 0x3e
 8005264:	e058      	b.n	8005318 <HAL_SPI_Transmit+0x274>
 8005266:	68fb      	ldr	r3, [r7, #12]
 8005268:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800526a:	68fb      	ldr	r3, [r7, #12]
 800526c:	681b      	ldr	r3, [r3, #0]
 800526e:	330c      	adds	r3, #12
 8005270:	7812      	ldrb	r2, [r2, #0]
 8005272:	701a      	strb	r2, [r3, #0]
 8005274:	68fb      	ldr	r3, [r7, #12]
 8005276:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005278:	1c5a      	adds	r2, r3, #1
 800527a:	68fb      	ldr	r3, [r7, #12]
 800527c:	639a      	str	r2, [r3, #56]	; 0x38
 800527e:	68fb      	ldr	r3, [r7, #12]
 8005280:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005282:	b29b      	uxth	r3, r3
 8005284:	3b01      	subs	r3, #1
 8005286:	b29a      	uxth	r2, r3
 8005288:	68fb      	ldr	r3, [r7, #12]
 800528a:	87da      	strh	r2, [r3, #62]	; 0x3e
 800528c:	e044      	b.n	8005318 <HAL_SPI_Transmit+0x274>
 800528e:	68fb      	ldr	r3, [r7, #12]
 8005290:	681b      	ldr	r3, [r3, #0]
 8005292:	689b      	ldr	r3, [r3, #8]
 8005294:	f003 0302 	and.w	r3, r3, #2
 8005298:	2b02      	cmp	r3, #2
 800529a:	d12b      	bne.n	80052f4 <HAL_SPI_Transmit+0x250>
 800529c:	68fb      	ldr	r3, [r7, #12]
 800529e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80052a0:	b29b      	uxth	r3, r3
 80052a2:	2b01      	cmp	r3, #1
 80052a4:	d912      	bls.n	80052cc <HAL_SPI_Transmit+0x228>
 80052a6:	68fb      	ldr	r3, [r7, #12]
 80052a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80052aa:	881a      	ldrh	r2, [r3, #0]
 80052ac:	68fb      	ldr	r3, [r7, #12]
 80052ae:	681b      	ldr	r3, [r3, #0]
 80052b0:	60da      	str	r2, [r3, #12]
 80052b2:	68fb      	ldr	r3, [r7, #12]
 80052b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80052b6:	1c9a      	adds	r2, r3, #2
 80052b8:	68fb      	ldr	r3, [r7, #12]
 80052ba:	639a      	str	r2, [r3, #56]	; 0x38
 80052bc:	68fb      	ldr	r3, [r7, #12]
 80052be:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80052c0:	b29b      	uxth	r3, r3
 80052c2:	3b02      	subs	r3, #2
 80052c4:	b29a      	uxth	r2, r3
 80052c6:	68fb      	ldr	r3, [r7, #12]
 80052c8:	87da      	strh	r2, [r3, #62]	; 0x3e
 80052ca:	e025      	b.n	8005318 <HAL_SPI_Transmit+0x274>
 80052cc:	68fb      	ldr	r3, [r7, #12]
 80052ce:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80052d0:	68fb      	ldr	r3, [r7, #12]
 80052d2:	681b      	ldr	r3, [r3, #0]
 80052d4:	330c      	adds	r3, #12
 80052d6:	7812      	ldrb	r2, [r2, #0]
 80052d8:	701a      	strb	r2, [r3, #0]
 80052da:	68fb      	ldr	r3, [r7, #12]
 80052dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80052de:	1c5a      	adds	r2, r3, #1
 80052e0:	68fb      	ldr	r3, [r7, #12]
 80052e2:	639a      	str	r2, [r3, #56]	; 0x38
 80052e4:	68fb      	ldr	r3, [r7, #12]
 80052e6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80052e8:	b29b      	uxth	r3, r3
 80052ea:	3b01      	subs	r3, #1
 80052ec:	b29a      	uxth	r2, r3
 80052ee:	68fb      	ldr	r3, [r7, #12]
 80052f0:	87da      	strh	r2, [r3, #62]	; 0x3e
 80052f2:	e011      	b.n	8005318 <HAL_SPI_Transmit+0x274>
 80052f4:	f7fd fe0c 	bl	8002f10 <HAL_GetTick>
 80052f8:	4602      	mov	r2, r0
 80052fa:	69bb      	ldr	r3, [r7, #24]
 80052fc:	1ad3      	subs	r3, r2, r3
 80052fe:	683a      	ldr	r2, [r7, #0]
 8005300:	429a      	cmp	r2, r3
 8005302:	d803      	bhi.n	800530c <HAL_SPI_Transmit+0x268>
 8005304:	683b      	ldr	r3, [r7, #0]
 8005306:	f1b3 3fff 	cmp.w	r3, #4294967295
 800530a:	d102      	bne.n	8005312 <HAL_SPI_Transmit+0x26e>
 800530c:	683b      	ldr	r3, [r7, #0]
 800530e:	2b00      	cmp	r3, #0
 8005310:	d102      	bne.n	8005318 <HAL_SPI_Transmit+0x274>
 8005312:	2303      	movs	r3, #3
 8005314:	77fb      	strb	r3, [r7, #31]
 8005316:	e026      	b.n	8005366 <HAL_SPI_Transmit+0x2c2>
 8005318:	68fb      	ldr	r3, [r7, #12]
 800531a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800531c:	b29b      	uxth	r3, r3
 800531e:	2b00      	cmp	r3, #0
 8005320:	d1b5      	bne.n	800528e <HAL_SPI_Transmit+0x1ea>
 8005322:	69ba      	ldr	r2, [r7, #24]
 8005324:	6839      	ldr	r1, [r7, #0]
 8005326:	68f8      	ldr	r0, [r7, #12]
 8005328:	f000 fce4 	bl	8005cf4 <SPI_EndRxTxTransaction>
 800532c:	4603      	mov	r3, r0
 800532e:	2b00      	cmp	r3, #0
 8005330:	d002      	beq.n	8005338 <HAL_SPI_Transmit+0x294>
 8005332:	68fb      	ldr	r3, [r7, #12]
 8005334:	2220      	movs	r2, #32
 8005336:	661a      	str	r2, [r3, #96]	; 0x60
 8005338:	68fb      	ldr	r3, [r7, #12]
 800533a:	689b      	ldr	r3, [r3, #8]
 800533c:	2b00      	cmp	r3, #0
 800533e:	d10a      	bne.n	8005356 <HAL_SPI_Transmit+0x2b2>
 8005340:	2300      	movs	r3, #0
 8005342:	613b      	str	r3, [r7, #16]
 8005344:	68fb      	ldr	r3, [r7, #12]
 8005346:	681b      	ldr	r3, [r3, #0]
 8005348:	68db      	ldr	r3, [r3, #12]
 800534a:	613b      	str	r3, [r7, #16]
 800534c:	68fb      	ldr	r3, [r7, #12]
 800534e:	681b      	ldr	r3, [r3, #0]
 8005350:	689b      	ldr	r3, [r3, #8]
 8005352:	613b      	str	r3, [r7, #16]
 8005354:	693b      	ldr	r3, [r7, #16]
 8005356:	68fb      	ldr	r3, [r7, #12]
 8005358:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800535a:	2b00      	cmp	r3, #0
 800535c:	d002      	beq.n	8005364 <HAL_SPI_Transmit+0x2c0>
 800535e:	2301      	movs	r3, #1
 8005360:	77fb      	strb	r3, [r7, #31]
 8005362:	e000      	b.n	8005366 <HAL_SPI_Transmit+0x2c2>
 8005364:	bf00      	nop
 8005366:	68fb      	ldr	r3, [r7, #12]
 8005368:	2201      	movs	r2, #1
 800536a:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 800536e:	68fb      	ldr	r3, [r7, #12]
 8005370:	2200      	movs	r2, #0
 8005372:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 8005376:	7ffb      	ldrb	r3, [r7, #31]
 8005378:	4618      	mov	r0, r3
 800537a:	3720      	adds	r7, #32
 800537c:	46bd      	mov	sp, r7
 800537e:	bd80      	pop	{r7, pc}

08005380 <HAL_SPI_Receive>:
 8005380:	b580      	push	{r7, lr}
 8005382:	b088      	sub	sp, #32
 8005384:	af02      	add	r7, sp, #8
 8005386:	60f8      	str	r0, [r7, #12]
 8005388:	60b9      	str	r1, [r7, #8]
 800538a:	603b      	str	r3, [r7, #0]
 800538c:	4613      	mov	r3, r2
 800538e:	80fb      	strh	r3, [r7, #6]
 8005390:	2300      	movs	r3, #0
 8005392:	75fb      	strb	r3, [r7, #23]
 8005394:	68fb      	ldr	r3, [r7, #12]
 8005396:	685b      	ldr	r3, [r3, #4]
 8005398:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800539c:	d112      	bne.n	80053c4 <HAL_SPI_Receive+0x44>
 800539e:	68fb      	ldr	r3, [r7, #12]
 80053a0:	689b      	ldr	r3, [r3, #8]
 80053a2:	2b00      	cmp	r3, #0
 80053a4:	d10e      	bne.n	80053c4 <HAL_SPI_Receive+0x44>
 80053a6:	68fb      	ldr	r3, [r7, #12]
 80053a8:	2204      	movs	r2, #4
 80053aa:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80053ae:	88fa      	ldrh	r2, [r7, #6]
 80053b0:	683b      	ldr	r3, [r7, #0]
 80053b2:	9300      	str	r3, [sp, #0]
 80053b4:	4613      	mov	r3, r2
 80053b6:	68ba      	ldr	r2, [r7, #8]
 80053b8:	68b9      	ldr	r1, [r7, #8]
 80053ba:	68f8      	ldr	r0, [r7, #12]
 80053bc:	f000 f910 	bl	80055e0 <HAL_SPI_TransmitReceive>
 80053c0:	4603      	mov	r3, r0
 80053c2:	e109      	b.n	80055d8 <HAL_SPI_Receive+0x258>
 80053c4:	68fb      	ldr	r3, [r7, #12]
 80053c6:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 80053ca:	2b01      	cmp	r3, #1
 80053cc:	d101      	bne.n	80053d2 <HAL_SPI_Receive+0x52>
 80053ce:	2302      	movs	r3, #2
 80053d0:	e102      	b.n	80055d8 <HAL_SPI_Receive+0x258>
 80053d2:	68fb      	ldr	r3, [r7, #12]
 80053d4:	2201      	movs	r2, #1
 80053d6:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 80053da:	f7fd fd99 	bl	8002f10 <HAL_GetTick>
 80053de:	6138      	str	r0, [r7, #16]
 80053e0:	68fb      	ldr	r3, [r7, #12]
 80053e2:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 80053e6:	b2db      	uxtb	r3, r3
 80053e8:	2b01      	cmp	r3, #1
 80053ea:	d002      	beq.n	80053f2 <HAL_SPI_Receive+0x72>
 80053ec:	2302      	movs	r3, #2
 80053ee:	75fb      	strb	r3, [r7, #23]
 80053f0:	e0e9      	b.n	80055c6 <HAL_SPI_Receive+0x246>
 80053f2:	68bb      	ldr	r3, [r7, #8]
 80053f4:	2b00      	cmp	r3, #0
 80053f6:	d002      	beq.n	80053fe <HAL_SPI_Receive+0x7e>
 80053f8:	88fb      	ldrh	r3, [r7, #6]
 80053fa:	2b00      	cmp	r3, #0
 80053fc:	d102      	bne.n	8005404 <HAL_SPI_Receive+0x84>
 80053fe:	2301      	movs	r3, #1
 8005400:	75fb      	strb	r3, [r7, #23]
 8005402:	e0e0      	b.n	80055c6 <HAL_SPI_Receive+0x246>
 8005404:	68fb      	ldr	r3, [r7, #12]
 8005406:	2204      	movs	r2, #4
 8005408:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 800540c:	68fb      	ldr	r3, [r7, #12]
 800540e:	2200      	movs	r2, #0
 8005410:	661a      	str	r2, [r3, #96]	; 0x60
 8005412:	68fb      	ldr	r3, [r7, #12]
 8005414:	68ba      	ldr	r2, [r7, #8]
 8005416:	641a      	str	r2, [r3, #64]	; 0x40
 8005418:	68fb      	ldr	r3, [r7, #12]
 800541a:	88fa      	ldrh	r2, [r7, #6]
 800541c:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8005420:	68fb      	ldr	r3, [r7, #12]
 8005422:	88fa      	ldrh	r2, [r7, #6]
 8005424:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8005428:	68fb      	ldr	r3, [r7, #12]
 800542a:	2200      	movs	r2, #0
 800542c:	639a      	str	r2, [r3, #56]	; 0x38
 800542e:	68fb      	ldr	r3, [r7, #12]
 8005430:	2200      	movs	r2, #0
 8005432:	879a      	strh	r2, [r3, #60]	; 0x3c
 8005434:	68fb      	ldr	r3, [r7, #12]
 8005436:	2200      	movs	r2, #0
 8005438:	87da      	strh	r2, [r3, #62]	; 0x3e
 800543a:	68fb      	ldr	r3, [r7, #12]
 800543c:	2200      	movs	r2, #0
 800543e:	64da      	str	r2, [r3, #76]	; 0x4c
 8005440:	68fb      	ldr	r3, [r7, #12]
 8005442:	2200      	movs	r2, #0
 8005444:	651a      	str	r2, [r3, #80]	; 0x50
 8005446:	68fb      	ldr	r3, [r7, #12]
 8005448:	68db      	ldr	r3, [r3, #12]
 800544a:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 800544e:	d908      	bls.n	8005462 <HAL_SPI_Receive+0xe2>
 8005450:	68fb      	ldr	r3, [r7, #12]
 8005452:	681b      	ldr	r3, [r3, #0]
 8005454:	685a      	ldr	r2, [r3, #4]
 8005456:	68fb      	ldr	r3, [r7, #12]
 8005458:	681b      	ldr	r3, [r3, #0]
 800545a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800545e:	605a      	str	r2, [r3, #4]
 8005460:	e007      	b.n	8005472 <HAL_SPI_Receive+0xf2>
 8005462:	68fb      	ldr	r3, [r7, #12]
 8005464:	681b      	ldr	r3, [r3, #0]
 8005466:	685a      	ldr	r2, [r3, #4]
 8005468:	68fb      	ldr	r3, [r7, #12]
 800546a:	681b      	ldr	r3, [r3, #0]
 800546c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8005470:	605a      	str	r2, [r3, #4]
 8005472:	68fb      	ldr	r3, [r7, #12]
 8005474:	689b      	ldr	r3, [r3, #8]
 8005476:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800547a:	d10f      	bne.n	800549c <HAL_SPI_Receive+0x11c>
 800547c:	68fb      	ldr	r3, [r7, #12]
 800547e:	681b      	ldr	r3, [r3, #0]
 8005480:	681a      	ldr	r2, [r3, #0]
 8005482:	68fb      	ldr	r3, [r7, #12]
 8005484:	681b      	ldr	r3, [r3, #0]
 8005486:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800548a:	601a      	str	r2, [r3, #0]
 800548c:	68fb      	ldr	r3, [r7, #12]
 800548e:	681b      	ldr	r3, [r3, #0]
 8005490:	681a      	ldr	r2, [r3, #0]
 8005492:	68fb      	ldr	r3, [r7, #12]
 8005494:	681b      	ldr	r3, [r3, #0]
 8005496:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800549a:	601a      	str	r2, [r3, #0]
 800549c:	68fb      	ldr	r3, [r7, #12]
 800549e:	681b      	ldr	r3, [r3, #0]
 80054a0:	681b      	ldr	r3, [r3, #0]
 80054a2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80054a6:	2b40      	cmp	r3, #64	; 0x40
 80054a8:	d007      	beq.n	80054ba <HAL_SPI_Receive+0x13a>
 80054aa:	68fb      	ldr	r3, [r7, #12]
 80054ac:	681b      	ldr	r3, [r3, #0]
 80054ae:	681a      	ldr	r2, [r3, #0]
 80054b0:	68fb      	ldr	r3, [r7, #12]
 80054b2:	681b      	ldr	r3, [r3, #0]
 80054b4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80054b8:	601a      	str	r2, [r3, #0]
 80054ba:	68fb      	ldr	r3, [r7, #12]
 80054bc:	68db      	ldr	r3, [r3, #12]
 80054be:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 80054c2:	d867      	bhi.n	8005594 <HAL_SPI_Receive+0x214>
 80054c4:	e030      	b.n	8005528 <HAL_SPI_Receive+0x1a8>
 80054c6:	68fb      	ldr	r3, [r7, #12]
 80054c8:	681b      	ldr	r3, [r3, #0]
 80054ca:	689b      	ldr	r3, [r3, #8]
 80054cc:	f003 0301 	and.w	r3, r3, #1
 80054d0:	2b01      	cmp	r3, #1
 80054d2:	d117      	bne.n	8005504 <HAL_SPI_Receive+0x184>
 80054d4:	68fb      	ldr	r3, [r7, #12]
 80054d6:	681b      	ldr	r3, [r3, #0]
 80054d8:	f103 020c 	add.w	r2, r3, #12
 80054dc:	68fb      	ldr	r3, [r7, #12]
 80054de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80054e0:	7812      	ldrb	r2, [r2, #0]
 80054e2:	b2d2      	uxtb	r2, r2
 80054e4:	701a      	strb	r2, [r3, #0]
 80054e6:	68fb      	ldr	r3, [r7, #12]
 80054e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80054ea:	1c5a      	adds	r2, r3, #1
 80054ec:	68fb      	ldr	r3, [r7, #12]
 80054ee:	641a      	str	r2, [r3, #64]	; 0x40
 80054f0:	68fb      	ldr	r3, [r7, #12]
 80054f2:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 80054f6:	b29b      	uxth	r3, r3
 80054f8:	3b01      	subs	r3, #1
 80054fa:	b29a      	uxth	r2, r3
 80054fc:	68fb      	ldr	r3, [r7, #12]
 80054fe:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8005502:	e011      	b.n	8005528 <HAL_SPI_Receive+0x1a8>
 8005504:	f7fd fd04 	bl	8002f10 <HAL_GetTick>
 8005508:	4602      	mov	r2, r0
 800550a:	693b      	ldr	r3, [r7, #16]
 800550c:	1ad3      	subs	r3, r2, r3
 800550e:	683a      	ldr	r2, [r7, #0]
 8005510:	429a      	cmp	r2, r3
 8005512:	d803      	bhi.n	800551c <HAL_SPI_Receive+0x19c>
 8005514:	683b      	ldr	r3, [r7, #0]
 8005516:	f1b3 3fff 	cmp.w	r3, #4294967295
 800551a:	d102      	bne.n	8005522 <HAL_SPI_Receive+0x1a2>
 800551c:	683b      	ldr	r3, [r7, #0]
 800551e:	2b00      	cmp	r3, #0
 8005520:	d102      	bne.n	8005528 <HAL_SPI_Receive+0x1a8>
 8005522:	2303      	movs	r3, #3
 8005524:	75fb      	strb	r3, [r7, #23]
 8005526:	e04e      	b.n	80055c6 <HAL_SPI_Receive+0x246>
 8005528:	68fb      	ldr	r3, [r7, #12]
 800552a:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 800552e:	b29b      	uxth	r3, r3
 8005530:	2b00      	cmp	r3, #0
 8005532:	d1c8      	bne.n	80054c6 <HAL_SPI_Receive+0x146>
 8005534:	e034      	b.n	80055a0 <HAL_SPI_Receive+0x220>
 8005536:	68fb      	ldr	r3, [r7, #12]
 8005538:	681b      	ldr	r3, [r3, #0]
 800553a:	689b      	ldr	r3, [r3, #8]
 800553c:	f003 0301 	and.w	r3, r3, #1
 8005540:	2b01      	cmp	r3, #1
 8005542:	d115      	bne.n	8005570 <HAL_SPI_Receive+0x1f0>
 8005544:	68fb      	ldr	r3, [r7, #12]
 8005546:	681b      	ldr	r3, [r3, #0]
 8005548:	68da      	ldr	r2, [r3, #12]
 800554a:	68fb      	ldr	r3, [r7, #12]
 800554c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800554e:	b292      	uxth	r2, r2
 8005550:	801a      	strh	r2, [r3, #0]
 8005552:	68fb      	ldr	r3, [r7, #12]
 8005554:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005556:	1c9a      	adds	r2, r3, #2
 8005558:	68fb      	ldr	r3, [r7, #12]
 800555a:	641a      	str	r2, [r3, #64]	; 0x40
 800555c:	68fb      	ldr	r3, [r7, #12]
 800555e:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8005562:	b29b      	uxth	r3, r3
 8005564:	3b01      	subs	r3, #1
 8005566:	b29a      	uxth	r2, r3
 8005568:	68fb      	ldr	r3, [r7, #12]
 800556a:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 800556e:	e011      	b.n	8005594 <HAL_SPI_Receive+0x214>
 8005570:	f7fd fcce 	bl	8002f10 <HAL_GetTick>
 8005574:	4602      	mov	r2, r0
 8005576:	693b      	ldr	r3, [r7, #16]
 8005578:	1ad3      	subs	r3, r2, r3
 800557a:	683a      	ldr	r2, [r7, #0]
 800557c:	429a      	cmp	r2, r3
 800557e:	d803      	bhi.n	8005588 <HAL_SPI_Receive+0x208>
 8005580:	683b      	ldr	r3, [r7, #0]
 8005582:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005586:	d102      	bne.n	800558e <HAL_SPI_Receive+0x20e>
 8005588:	683b      	ldr	r3, [r7, #0]
 800558a:	2b00      	cmp	r3, #0
 800558c:	d102      	bne.n	8005594 <HAL_SPI_Receive+0x214>
 800558e:	2303      	movs	r3, #3
 8005590:	75fb      	strb	r3, [r7, #23]
 8005592:	e018      	b.n	80055c6 <HAL_SPI_Receive+0x246>
 8005594:	68fb      	ldr	r3, [r7, #12]
 8005596:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 800559a:	b29b      	uxth	r3, r3
 800559c:	2b00      	cmp	r3, #0
 800559e:	d1ca      	bne.n	8005536 <HAL_SPI_Receive+0x1b6>
 80055a0:	693a      	ldr	r2, [r7, #16]
 80055a2:	6839      	ldr	r1, [r7, #0]
 80055a4:	68f8      	ldr	r0, [r7, #12]
 80055a6:	f000 fb4d 	bl	8005c44 <SPI_EndRxTransaction>
 80055aa:	4603      	mov	r3, r0
 80055ac:	2b00      	cmp	r3, #0
 80055ae:	d002      	beq.n	80055b6 <HAL_SPI_Receive+0x236>
 80055b0:	68fb      	ldr	r3, [r7, #12]
 80055b2:	2220      	movs	r2, #32
 80055b4:	661a      	str	r2, [r3, #96]	; 0x60
 80055b6:	68fb      	ldr	r3, [r7, #12]
 80055b8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80055ba:	2b00      	cmp	r3, #0
 80055bc:	d002      	beq.n	80055c4 <HAL_SPI_Receive+0x244>
 80055be:	2301      	movs	r3, #1
 80055c0:	75fb      	strb	r3, [r7, #23]
 80055c2:	e000      	b.n	80055c6 <HAL_SPI_Receive+0x246>
 80055c4:	bf00      	nop
 80055c6:	68fb      	ldr	r3, [r7, #12]
 80055c8:	2201      	movs	r2, #1
 80055ca:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80055ce:	68fb      	ldr	r3, [r7, #12]
 80055d0:	2200      	movs	r2, #0
 80055d2:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 80055d6:	7dfb      	ldrb	r3, [r7, #23]
 80055d8:	4618      	mov	r0, r3
 80055da:	3718      	adds	r7, #24
 80055dc:	46bd      	mov	sp, r7
 80055de:	bd80      	pop	{r7, pc}

080055e0 <HAL_SPI_TransmitReceive>:
 80055e0:	b580      	push	{r7, lr}
 80055e2:	b08a      	sub	sp, #40	; 0x28
 80055e4:	af00      	add	r7, sp, #0
 80055e6:	60f8      	str	r0, [r7, #12]
 80055e8:	60b9      	str	r1, [r7, #8]
 80055ea:	607a      	str	r2, [r7, #4]
 80055ec:	807b      	strh	r3, [r7, #2]
 80055ee:	2301      	movs	r3, #1
 80055f0:	627b      	str	r3, [r7, #36]	; 0x24
 80055f2:	2300      	movs	r3, #0
 80055f4:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80055f8:	68fb      	ldr	r3, [r7, #12]
 80055fa:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 80055fe:	2b01      	cmp	r3, #1
 8005600:	d101      	bne.n	8005606 <HAL_SPI_TransmitReceive+0x26>
 8005602:	2302      	movs	r3, #2
 8005604:	e1fb      	b.n	80059fe <HAL_SPI_TransmitReceive+0x41e>
 8005606:	68fb      	ldr	r3, [r7, #12]
 8005608:	2201      	movs	r2, #1
 800560a:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 800560e:	f7fd fc7f 	bl	8002f10 <HAL_GetTick>
 8005612:	61f8      	str	r0, [r7, #28]
 8005614:	68fb      	ldr	r3, [r7, #12]
 8005616:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 800561a:	76fb      	strb	r3, [r7, #27]
 800561c:	68fb      	ldr	r3, [r7, #12]
 800561e:	685b      	ldr	r3, [r3, #4]
 8005620:	617b      	str	r3, [r7, #20]
 8005622:	887b      	ldrh	r3, [r7, #2]
 8005624:	827b      	strh	r3, [r7, #18]
 8005626:	887b      	ldrh	r3, [r7, #2]
 8005628:	823b      	strh	r3, [r7, #16]
 800562a:	7efb      	ldrb	r3, [r7, #27]
 800562c:	2b01      	cmp	r3, #1
 800562e:	d00e      	beq.n	800564e <HAL_SPI_TransmitReceive+0x6e>
 8005630:	697b      	ldr	r3, [r7, #20]
 8005632:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005636:	d106      	bne.n	8005646 <HAL_SPI_TransmitReceive+0x66>
 8005638:	68fb      	ldr	r3, [r7, #12]
 800563a:	689b      	ldr	r3, [r3, #8]
 800563c:	2b00      	cmp	r3, #0
 800563e:	d102      	bne.n	8005646 <HAL_SPI_TransmitReceive+0x66>
 8005640:	7efb      	ldrb	r3, [r7, #27]
 8005642:	2b04      	cmp	r3, #4
 8005644:	d003      	beq.n	800564e <HAL_SPI_TransmitReceive+0x6e>
 8005646:	2302      	movs	r3, #2
 8005648:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800564c:	e1cd      	b.n	80059ea <HAL_SPI_TransmitReceive+0x40a>
 800564e:	68bb      	ldr	r3, [r7, #8]
 8005650:	2b00      	cmp	r3, #0
 8005652:	d005      	beq.n	8005660 <HAL_SPI_TransmitReceive+0x80>
 8005654:	687b      	ldr	r3, [r7, #4]
 8005656:	2b00      	cmp	r3, #0
 8005658:	d002      	beq.n	8005660 <HAL_SPI_TransmitReceive+0x80>
 800565a:	887b      	ldrh	r3, [r7, #2]
 800565c:	2b00      	cmp	r3, #0
 800565e:	d103      	bne.n	8005668 <HAL_SPI_TransmitReceive+0x88>
 8005660:	2301      	movs	r3, #1
 8005662:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005666:	e1c0      	b.n	80059ea <HAL_SPI_TransmitReceive+0x40a>
 8005668:	68fb      	ldr	r3, [r7, #12]
 800566a:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 800566e:	b2db      	uxtb	r3, r3
 8005670:	2b04      	cmp	r3, #4
 8005672:	d003      	beq.n	800567c <HAL_SPI_TransmitReceive+0x9c>
 8005674:	68fb      	ldr	r3, [r7, #12]
 8005676:	2205      	movs	r2, #5
 8005678:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 800567c:	68fb      	ldr	r3, [r7, #12]
 800567e:	2200      	movs	r2, #0
 8005680:	661a      	str	r2, [r3, #96]	; 0x60
 8005682:	68fb      	ldr	r3, [r7, #12]
 8005684:	687a      	ldr	r2, [r7, #4]
 8005686:	641a      	str	r2, [r3, #64]	; 0x40
 8005688:	68fb      	ldr	r3, [r7, #12]
 800568a:	887a      	ldrh	r2, [r7, #2]
 800568c:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8005690:	68fb      	ldr	r3, [r7, #12]
 8005692:	887a      	ldrh	r2, [r7, #2]
 8005694:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8005698:	68fb      	ldr	r3, [r7, #12]
 800569a:	68ba      	ldr	r2, [r7, #8]
 800569c:	639a      	str	r2, [r3, #56]	; 0x38
 800569e:	68fb      	ldr	r3, [r7, #12]
 80056a0:	887a      	ldrh	r2, [r7, #2]
 80056a2:	87da      	strh	r2, [r3, #62]	; 0x3e
 80056a4:	68fb      	ldr	r3, [r7, #12]
 80056a6:	887a      	ldrh	r2, [r7, #2]
 80056a8:	879a      	strh	r2, [r3, #60]	; 0x3c
 80056aa:	68fb      	ldr	r3, [r7, #12]
 80056ac:	2200      	movs	r2, #0
 80056ae:	64da      	str	r2, [r3, #76]	; 0x4c
 80056b0:	68fb      	ldr	r3, [r7, #12]
 80056b2:	2200      	movs	r2, #0
 80056b4:	651a      	str	r2, [r3, #80]	; 0x50
 80056b6:	68fb      	ldr	r3, [r7, #12]
 80056b8:	68db      	ldr	r3, [r3, #12]
 80056ba:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 80056be:	d802      	bhi.n	80056c6 <HAL_SPI_TransmitReceive+0xe6>
 80056c0:	8a3b      	ldrh	r3, [r7, #16]
 80056c2:	2b01      	cmp	r3, #1
 80056c4:	d908      	bls.n	80056d8 <HAL_SPI_TransmitReceive+0xf8>
 80056c6:	68fb      	ldr	r3, [r7, #12]
 80056c8:	681b      	ldr	r3, [r3, #0]
 80056ca:	685a      	ldr	r2, [r3, #4]
 80056cc:	68fb      	ldr	r3, [r7, #12]
 80056ce:	681b      	ldr	r3, [r3, #0]
 80056d0:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80056d4:	605a      	str	r2, [r3, #4]
 80056d6:	e007      	b.n	80056e8 <HAL_SPI_TransmitReceive+0x108>
 80056d8:	68fb      	ldr	r3, [r7, #12]
 80056da:	681b      	ldr	r3, [r3, #0]
 80056dc:	685a      	ldr	r2, [r3, #4]
 80056de:	68fb      	ldr	r3, [r7, #12]
 80056e0:	681b      	ldr	r3, [r3, #0]
 80056e2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80056e6:	605a      	str	r2, [r3, #4]
 80056e8:	68fb      	ldr	r3, [r7, #12]
 80056ea:	681b      	ldr	r3, [r3, #0]
 80056ec:	681b      	ldr	r3, [r3, #0]
 80056ee:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80056f2:	2b40      	cmp	r3, #64	; 0x40
 80056f4:	d007      	beq.n	8005706 <HAL_SPI_TransmitReceive+0x126>
 80056f6:	68fb      	ldr	r3, [r7, #12]
 80056f8:	681b      	ldr	r3, [r3, #0]
 80056fa:	681a      	ldr	r2, [r3, #0]
 80056fc:	68fb      	ldr	r3, [r7, #12]
 80056fe:	681b      	ldr	r3, [r3, #0]
 8005700:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005704:	601a      	str	r2, [r3, #0]
 8005706:	68fb      	ldr	r3, [r7, #12]
 8005708:	68db      	ldr	r3, [r3, #12]
 800570a:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 800570e:	d97c      	bls.n	800580a <HAL_SPI_TransmitReceive+0x22a>
 8005710:	68fb      	ldr	r3, [r7, #12]
 8005712:	685b      	ldr	r3, [r3, #4]
 8005714:	2b00      	cmp	r3, #0
 8005716:	d002      	beq.n	800571e <HAL_SPI_TransmitReceive+0x13e>
 8005718:	8a7b      	ldrh	r3, [r7, #18]
 800571a:	2b01      	cmp	r3, #1
 800571c:	d169      	bne.n	80057f2 <HAL_SPI_TransmitReceive+0x212>
 800571e:	68fb      	ldr	r3, [r7, #12]
 8005720:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005722:	881a      	ldrh	r2, [r3, #0]
 8005724:	68fb      	ldr	r3, [r7, #12]
 8005726:	681b      	ldr	r3, [r3, #0]
 8005728:	60da      	str	r2, [r3, #12]
 800572a:	68fb      	ldr	r3, [r7, #12]
 800572c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800572e:	1c9a      	adds	r2, r3, #2
 8005730:	68fb      	ldr	r3, [r7, #12]
 8005732:	639a      	str	r2, [r3, #56]	; 0x38
 8005734:	68fb      	ldr	r3, [r7, #12]
 8005736:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005738:	b29b      	uxth	r3, r3
 800573a:	3b01      	subs	r3, #1
 800573c:	b29a      	uxth	r2, r3
 800573e:	68fb      	ldr	r3, [r7, #12]
 8005740:	87da      	strh	r2, [r3, #62]	; 0x3e
 8005742:	e056      	b.n	80057f2 <HAL_SPI_TransmitReceive+0x212>
 8005744:	68fb      	ldr	r3, [r7, #12]
 8005746:	681b      	ldr	r3, [r3, #0]
 8005748:	689b      	ldr	r3, [r3, #8]
 800574a:	f003 0302 	and.w	r3, r3, #2
 800574e:	2b02      	cmp	r3, #2
 8005750:	d11b      	bne.n	800578a <HAL_SPI_TransmitReceive+0x1aa>
 8005752:	68fb      	ldr	r3, [r7, #12]
 8005754:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005756:	b29b      	uxth	r3, r3
 8005758:	2b00      	cmp	r3, #0
 800575a:	d016      	beq.n	800578a <HAL_SPI_TransmitReceive+0x1aa>
 800575c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800575e:	2b01      	cmp	r3, #1
 8005760:	d113      	bne.n	800578a <HAL_SPI_TransmitReceive+0x1aa>
 8005762:	68fb      	ldr	r3, [r7, #12]
 8005764:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005766:	881a      	ldrh	r2, [r3, #0]
 8005768:	68fb      	ldr	r3, [r7, #12]
 800576a:	681b      	ldr	r3, [r3, #0]
 800576c:	60da      	str	r2, [r3, #12]
 800576e:	68fb      	ldr	r3, [r7, #12]
 8005770:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005772:	1c9a      	adds	r2, r3, #2
 8005774:	68fb      	ldr	r3, [r7, #12]
 8005776:	639a      	str	r2, [r3, #56]	; 0x38
 8005778:	68fb      	ldr	r3, [r7, #12]
 800577a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800577c:	b29b      	uxth	r3, r3
 800577e:	3b01      	subs	r3, #1
 8005780:	b29a      	uxth	r2, r3
 8005782:	68fb      	ldr	r3, [r7, #12]
 8005784:	87da      	strh	r2, [r3, #62]	; 0x3e
 8005786:	2300      	movs	r3, #0
 8005788:	627b      	str	r3, [r7, #36]	; 0x24
 800578a:	68fb      	ldr	r3, [r7, #12]
 800578c:	681b      	ldr	r3, [r3, #0]
 800578e:	689b      	ldr	r3, [r3, #8]
 8005790:	f003 0301 	and.w	r3, r3, #1
 8005794:	2b01      	cmp	r3, #1
 8005796:	d11c      	bne.n	80057d2 <HAL_SPI_TransmitReceive+0x1f2>
 8005798:	68fb      	ldr	r3, [r7, #12]
 800579a:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 800579e:	b29b      	uxth	r3, r3
 80057a0:	2b00      	cmp	r3, #0
 80057a2:	d016      	beq.n	80057d2 <HAL_SPI_TransmitReceive+0x1f2>
 80057a4:	68fb      	ldr	r3, [r7, #12]
 80057a6:	681b      	ldr	r3, [r3, #0]
 80057a8:	68da      	ldr	r2, [r3, #12]
 80057aa:	68fb      	ldr	r3, [r7, #12]
 80057ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80057ae:	b292      	uxth	r2, r2
 80057b0:	801a      	strh	r2, [r3, #0]
 80057b2:	68fb      	ldr	r3, [r7, #12]
 80057b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80057b6:	1c9a      	adds	r2, r3, #2
 80057b8:	68fb      	ldr	r3, [r7, #12]
 80057ba:	641a      	str	r2, [r3, #64]	; 0x40
 80057bc:	68fb      	ldr	r3, [r7, #12]
 80057be:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 80057c2:	b29b      	uxth	r3, r3
 80057c4:	3b01      	subs	r3, #1
 80057c6:	b29a      	uxth	r2, r3
 80057c8:	68fb      	ldr	r3, [r7, #12]
 80057ca:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 80057ce:	2301      	movs	r3, #1
 80057d0:	627b      	str	r3, [r7, #36]	; 0x24
 80057d2:	f7fd fb9d 	bl	8002f10 <HAL_GetTick>
 80057d6:	4602      	mov	r2, r0
 80057d8:	69fb      	ldr	r3, [r7, #28]
 80057da:	1ad3      	subs	r3, r2, r3
 80057dc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80057de:	429a      	cmp	r2, r3
 80057e0:	d807      	bhi.n	80057f2 <HAL_SPI_TransmitReceive+0x212>
 80057e2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80057e4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80057e8:	d003      	beq.n	80057f2 <HAL_SPI_TransmitReceive+0x212>
 80057ea:	2303      	movs	r3, #3
 80057ec:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80057f0:	e0fb      	b.n	80059ea <HAL_SPI_TransmitReceive+0x40a>
 80057f2:	68fb      	ldr	r3, [r7, #12]
 80057f4:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80057f6:	b29b      	uxth	r3, r3
 80057f8:	2b00      	cmp	r3, #0
 80057fa:	d1a3      	bne.n	8005744 <HAL_SPI_TransmitReceive+0x164>
 80057fc:	68fb      	ldr	r3, [r7, #12]
 80057fe:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8005802:	b29b      	uxth	r3, r3
 8005804:	2b00      	cmp	r3, #0
 8005806:	d19d      	bne.n	8005744 <HAL_SPI_TransmitReceive+0x164>
 8005808:	e0df      	b.n	80059ca <HAL_SPI_TransmitReceive+0x3ea>
 800580a:	68fb      	ldr	r3, [r7, #12]
 800580c:	685b      	ldr	r3, [r3, #4]
 800580e:	2b00      	cmp	r3, #0
 8005810:	d003      	beq.n	800581a <HAL_SPI_TransmitReceive+0x23a>
 8005812:	8a7b      	ldrh	r3, [r7, #18]
 8005814:	2b01      	cmp	r3, #1
 8005816:	f040 80cb 	bne.w	80059b0 <HAL_SPI_TransmitReceive+0x3d0>
 800581a:	68fb      	ldr	r3, [r7, #12]
 800581c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800581e:	b29b      	uxth	r3, r3
 8005820:	2b01      	cmp	r3, #1
 8005822:	d912      	bls.n	800584a <HAL_SPI_TransmitReceive+0x26a>
 8005824:	68fb      	ldr	r3, [r7, #12]
 8005826:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005828:	881a      	ldrh	r2, [r3, #0]
 800582a:	68fb      	ldr	r3, [r7, #12]
 800582c:	681b      	ldr	r3, [r3, #0]
 800582e:	60da      	str	r2, [r3, #12]
 8005830:	68fb      	ldr	r3, [r7, #12]
 8005832:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005834:	1c9a      	adds	r2, r3, #2
 8005836:	68fb      	ldr	r3, [r7, #12]
 8005838:	639a      	str	r2, [r3, #56]	; 0x38
 800583a:	68fb      	ldr	r3, [r7, #12]
 800583c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800583e:	b29b      	uxth	r3, r3
 8005840:	3b02      	subs	r3, #2
 8005842:	b29a      	uxth	r2, r3
 8005844:	68fb      	ldr	r3, [r7, #12]
 8005846:	87da      	strh	r2, [r3, #62]	; 0x3e
 8005848:	e0b2      	b.n	80059b0 <HAL_SPI_TransmitReceive+0x3d0>
 800584a:	68fb      	ldr	r3, [r7, #12]
 800584c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800584e:	68fb      	ldr	r3, [r7, #12]
 8005850:	681b      	ldr	r3, [r3, #0]
 8005852:	330c      	adds	r3, #12
 8005854:	7812      	ldrb	r2, [r2, #0]
 8005856:	701a      	strb	r2, [r3, #0]
 8005858:	68fb      	ldr	r3, [r7, #12]
 800585a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800585c:	1c5a      	adds	r2, r3, #1
 800585e:	68fb      	ldr	r3, [r7, #12]
 8005860:	639a      	str	r2, [r3, #56]	; 0x38
 8005862:	68fb      	ldr	r3, [r7, #12]
 8005864:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005866:	b29b      	uxth	r3, r3
 8005868:	3b01      	subs	r3, #1
 800586a:	b29a      	uxth	r2, r3
 800586c:	68fb      	ldr	r3, [r7, #12]
 800586e:	87da      	strh	r2, [r3, #62]	; 0x3e
 8005870:	e09e      	b.n	80059b0 <HAL_SPI_TransmitReceive+0x3d0>
 8005872:	68fb      	ldr	r3, [r7, #12]
 8005874:	681b      	ldr	r3, [r3, #0]
 8005876:	689b      	ldr	r3, [r3, #8]
 8005878:	f003 0302 	and.w	r3, r3, #2
 800587c:	2b02      	cmp	r3, #2
 800587e:	d134      	bne.n	80058ea <HAL_SPI_TransmitReceive+0x30a>
 8005880:	68fb      	ldr	r3, [r7, #12]
 8005882:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005884:	b29b      	uxth	r3, r3
 8005886:	2b00      	cmp	r3, #0
 8005888:	d02f      	beq.n	80058ea <HAL_SPI_TransmitReceive+0x30a>
 800588a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800588c:	2b01      	cmp	r3, #1
 800588e:	d12c      	bne.n	80058ea <HAL_SPI_TransmitReceive+0x30a>
 8005890:	68fb      	ldr	r3, [r7, #12]
 8005892:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005894:	b29b      	uxth	r3, r3
 8005896:	2b01      	cmp	r3, #1
 8005898:	d912      	bls.n	80058c0 <HAL_SPI_TransmitReceive+0x2e0>
 800589a:	68fb      	ldr	r3, [r7, #12]
 800589c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800589e:	881a      	ldrh	r2, [r3, #0]
 80058a0:	68fb      	ldr	r3, [r7, #12]
 80058a2:	681b      	ldr	r3, [r3, #0]
 80058a4:	60da      	str	r2, [r3, #12]
 80058a6:	68fb      	ldr	r3, [r7, #12]
 80058a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80058aa:	1c9a      	adds	r2, r3, #2
 80058ac:	68fb      	ldr	r3, [r7, #12]
 80058ae:	639a      	str	r2, [r3, #56]	; 0x38
 80058b0:	68fb      	ldr	r3, [r7, #12]
 80058b2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80058b4:	b29b      	uxth	r3, r3
 80058b6:	3b02      	subs	r3, #2
 80058b8:	b29a      	uxth	r2, r3
 80058ba:	68fb      	ldr	r3, [r7, #12]
 80058bc:	87da      	strh	r2, [r3, #62]	; 0x3e
 80058be:	e012      	b.n	80058e6 <HAL_SPI_TransmitReceive+0x306>
 80058c0:	68fb      	ldr	r3, [r7, #12]
 80058c2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80058c4:	68fb      	ldr	r3, [r7, #12]
 80058c6:	681b      	ldr	r3, [r3, #0]
 80058c8:	330c      	adds	r3, #12
 80058ca:	7812      	ldrb	r2, [r2, #0]
 80058cc:	701a      	strb	r2, [r3, #0]
 80058ce:	68fb      	ldr	r3, [r7, #12]
 80058d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80058d2:	1c5a      	adds	r2, r3, #1
 80058d4:	68fb      	ldr	r3, [r7, #12]
 80058d6:	639a      	str	r2, [r3, #56]	; 0x38
 80058d8:	68fb      	ldr	r3, [r7, #12]
 80058da:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80058dc:	b29b      	uxth	r3, r3
 80058de:	3b01      	subs	r3, #1
 80058e0:	b29a      	uxth	r2, r3
 80058e2:	68fb      	ldr	r3, [r7, #12]
 80058e4:	87da      	strh	r2, [r3, #62]	; 0x3e
 80058e6:	2300      	movs	r3, #0
 80058e8:	627b      	str	r3, [r7, #36]	; 0x24
 80058ea:	68fb      	ldr	r3, [r7, #12]
 80058ec:	681b      	ldr	r3, [r3, #0]
 80058ee:	689b      	ldr	r3, [r3, #8]
 80058f0:	f003 0301 	and.w	r3, r3, #1
 80058f4:	2b01      	cmp	r3, #1
 80058f6:	d148      	bne.n	800598a <HAL_SPI_TransmitReceive+0x3aa>
 80058f8:	68fb      	ldr	r3, [r7, #12]
 80058fa:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 80058fe:	b29b      	uxth	r3, r3
 8005900:	2b00      	cmp	r3, #0
 8005902:	d042      	beq.n	800598a <HAL_SPI_TransmitReceive+0x3aa>
 8005904:	68fb      	ldr	r3, [r7, #12]
 8005906:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 800590a:	b29b      	uxth	r3, r3
 800590c:	2b01      	cmp	r3, #1
 800590e:	d923      	bls.n	8005958 <HAL_SPI_TransmitReceive+0x378>
 8005910:	68fb      	ldr	r3, [r7, #12]
 8005912:	681b      	ldr	r3, [r3, #0]
 8005914:	68da      	ldr	r2, [r3, #12]
 8005916:	68fb      	ldr	r3, [r7, #12]
 8005918:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800591a:	b292      	uxth	r2, r2
 800591c:	801a      	strh	r2, [r3, #0]
 800591e:	68fb      	ldr	r3, [r7, #12]
 8005920:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005922:	1c9a      	adds	r2, r3, #2
 8005924:	68fb      	ldr	r3, [r7, #12]
 8005926:	641a      	str	r2, [r3, #64]	; 0x40
 8005928:	68fb      	ldr	r3, [r7, #12]
 800592a:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 800592e:	b29b      	uxth	r3, r3
 8005930:	3b02      	subs	r3, #2
 8005932:	b29a      	uxth	r2, r3
 8005934:	68fb      	ldr	r3, [r7, #12]
 8005936:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 800593a:	68fb      	ldr	r3, [r7, #12]
 800593c:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8005940:	b29b      	uxth	r3, r3
 8005942:	2b01      	cmp	r3, #1
 8005944:	d81f      	bhi.n	8005986 <HAL_SPI_TransmitReceive+0x3a6>
 8005946:	68fb      	ldr	r3, [r7, #12]
 8005948:	681b      	ldr	r3, [r3, #0]
 800594a:	685a      	ldr	r2, [r3, #4]
 800594c:	68fb      	ldr	r3, [r7, #12]
 800594e:	681b      	ldr	r3, [r3, #0]
 8005950:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8005954:	605a      	str	r2, [r3, #4]
 8005956:	e016      	b.n	8005986 <HAL_SPI_TransmitReceive+0x3a6>
 8005958:	68fb      	ldr	r3, [r7, #12]
 800595a:	681b      	ldr	r3, [r3, #0]
 800595c:	f103 020c 	add.w	r2, r3, #12
 8005960:	68fb      	ldr	r3, [r7, #12]
 8005962:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005964:	7812      	ldrb	r2, [r2, #0]
 8005966:	b2d2      	uxtb	r2, r2
 8005968:	701a      	strb	r2, [r3, #0]
 800596a:	68fb      	ldr	r3, [r7, #12]
 800596c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800596e:	1c5a      	adds	r2, r3, #1
 8005970:	68fb      	ldr	r3, [r7, #12]
 8005972:	641a      	str	r2, [r3, #64]	; 0x40
 8005974:	68fb      	ldr	r3, [r7, #12]
 8005976:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 800597a:	b29b      	uxth	r3, r3
 800597c:	3b01      	subs	r3, #1
 800597e:	b29a      	uxth	r2, r3
 8005980:	68fb      	ldr	r3, [r7, #12]
 8005982:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8005986:	2301      	movs	r3, #1
 8005988:	627b      	str	r3, [r7, #36]	; 0x24
 800598a:	f7fd fac1 	bl	8002f10 <HAL_GetTick>
 800598e:	4602      	mov	r2, r0
 8005990:	69fb      	ldr	r3, [r7, #28]
 8005992:	1ad3      	subs	r3, r2, r3
 8005994:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005996:	429a      	cmp	r2, r3
 8005998:	d803      	bhi.n	80059a2 <HAL_SPI_TransmitReceive+0x3c2>
 800599a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800599c:	f1b3 3fff 	cmp.w	r3, #4294967295
 80059a0:	d102      	bne.n	80059a8 <HAL_SPI_TransmitReceive+0x3c8>
 80059a2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80059a4:	2b00      	cmp	r3, #0
 80059a6:	d103      	bne.n	80059b0 <HAL_SPI_TransmitReceive+0x3d0>
 80059a8:	2303      	movs	r3, #3
 80059aa:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80059ae:	e01c      	b.n	80059ea <HAL_SPI_TransmitReceive+0x40a>
 80059b0:	68fb      	ldr	r3, [r7, #12]
 80059b2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80059b4:	b29b      	uxth	r3, r3
 80059b6:	2b00      	cmp	r3, #0
 80059b8:	f47f af5b 	bne.w	8005872 <HAL_SPI_TransmitReceive+0x292>
 80059bc:	68fb      	ldr	r3, [r7, #12]
 80059be:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 80059c2:	b29b      	uxth	r3, r3
 80059c4:	2b00      	cmp	r3, #0
 80059c6:	f47f af54 	bne.w	8005872 <HAL_SPI_TransmitReceive+0x292>
 80059ca:	69fa      	ldr	r2, [r7, #28]
 80059cc:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80059ce:	68f8      	ldr	r0, [r7, #12]
 80059d0:	f000 f990 	bl	8005cf4 <SPI_EndRxTxTransaction>
 80059d4:	4603      	mov	r3, r0
 80059d6:	2b00      	cmp	r3, #0
 80059d8:	d006      	beq.n	80059e8 <HAL_SPI_TransmitReceive+0x408>
 80059da:	2301      	movs	r3, #1
 80059dc:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80059e0:	68fb      	ldr	r3, [r7, #12]
 80059e2:	2220      	movs	r2, #32
 80059e4:	661a      	str	r2, [r3, #96]	; 0x60
 80059e6:	e000      	b.n	80059ea <HAL_SPI_TransmitReceive+0x40a>
 80059e8:	bf00      	nop
 80059ea:	68fb      	ldr	r3, [r7, #12]
 80059ec:	2201      	movs	r2, #1
 80059ee:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80059f2:	68fb      	ldr	r3, [r7, #12]
 80059f4:	2200      	movs	r2, #0
 80059f6:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 80059fa:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80059fe:	4618      	mov	r0, r3
 8005a00:	3728      	adds	r7, #40	; 0x28
 8005a02:	46bd      	mov	sp, r7
 8005a04:	bd80      	pop	{r7, pc}
	...

08005a08 <SPI_WaitFlagStateUntilTimeout>:
 8005a08:	b580      	push	{r7, lr}
 8005a0a:	b088      	sub	sp, #32
 8005a0c:	af00      	add	r7, sp, #0
 8005a0e:	60f8      	str	r0, [r7, #12]
 8005a10:	60b9      	str	r1, [r7, #8]
 8005a12:	603b      	str	r3, [r7, #0]
 8005a14:	4613      	mov	r3, r2
 8005a16:	71fb      	strb	r3, [r7, #7]
 8005a18:	f7fd fa7a 	bl	8002f10 <HAL_GetTick>
 8005a1c:	4602      	mov	r2, r0
 8005a1e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005a20:	1a9b      	subs	r3, r3, r2
 8005a22:	683a      	ldr	r2, [r7, #0]
 8005a24:	4413      	add	r3, r2
 8005a26:	61fb      	str	r3, [r7, #28]
 8005a28:	f7fd fa72 	bl	8002f10 <HAL_GetTick>
 8005a2c:	61b8      	str	r0, [r7, #24]
 8005a2e:	4b39      	ldr	r3, [pc, #228]	; (8005b14 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8005a30:	681b      	ldr	r3, [r3, #0]
 8005a32:	015b      	lsls	r3, r3, #5
 8005a34:	0d1b      	lsrs	r3, r3, #20
 8005a36:	69fa      	ldr	r2, [r7, #28]
 8005a38:	fb02 f303 	mul.w	r3, r2, r3
 8005a3c:	617b      	str	r3, [r7, #20]
 8005a3e:	e054      	b.n	8005aea <SPI_WaitFlagStateUntilTimeout+0xe2>
 8005a40:	683b      	ldr	r3, [r7, #0]
 8005a42:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005a46:	d050      	beq.n	8005aea <SPI_WaitFlagStateUntilTimeout+0xe2>
 8005a48:	f7fd fa62 	bl	8002f10 <HAL_GetTick>
 8005a4c:	4602      	mov	r2, r0
 8005a4e:	69bb      	ldr	r3, [r7, #24]
 8005a50:	1ad3      	subs	r3, r2, r3
 8005a52:	69fa      	ldr	r2, [r7, #28]
 8005a54:	429a      	cmp	r2, r3
 8005a56:	d902      	bls.n	8005a5e <SPI_WaitFlagStateUntilTimeout+0x56>
 8005a58:	69fb      	ldr	r3, [r7, #28]
 8005a5a:	2b00      	cmp	r3, #0
 8005a5c:	d13d      	bne.n	8005ada <SPI_WaitFlagStateUntilTimeout+0xd2>
 8005a5e:	68fb      	ldr	r3, [r7, #12]
 8005a60:	681b      	ldr	r3, [r3, #0]
 8005a62:	685a      	ldr	r2, [r3, #4]
 8005a64:	68fb      	ldr	r3, [r7, #12]
 8005a66:	681b      	ldr	r3, [r3, #0]
 8005a68:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8005a6c:	605a      	str	r2, [r3, #4]
 8005a6e:	68fb      	ldr	r3, [r7, #12]
 8005a70:	685b      	ldr	r3, [r3, #4]
 8005a72:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005a76:	d111      	bne.n	8005a9c <SPI_WaitFlagStateUntilTimeout+0x94>
 8005a78:	68fb      	ldr	r3, [r7, #12]
 8005a7a:	689b      	ldr	r3, [r3, #8]
 8005a7c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005a80:	d004      	beq.n	8005a8c <SPI_WaitFlagStateUntilTimeout+0x84>
 8005a82:	68fb      	ldr	r3, [r7, #12]
 8005a84:	689b      	ldr	r3, [r3, #8]
 8005a86:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005a8a:	d107      	bne.n	8005a9c <SPI_WaitFlagStateUntilTimeout+0x94>
 8005a8c:	68fb      	ldr	r3, [r7, #12]
 8005a8e:	681b      	ldr	r3, [r3, #0]
 8005a90:	681a      	ldr	r2, [r3, #0]
 8005a92:	68fb      	ldr	r3, [r7, #12]
 8005a94:	681b      	ldr	r3, [r3, #0]
 8005a96:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005a9a:	601a      	str	r2, [r3, #0]
 8005a9c:	68fb      	ldr	r3, [r7, #12]
 8005a9e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005aa0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005aa4:	d10f      	bne.n	8005ac6 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8005aa6:	68fb      	ldr	r3, [r7, #12]
 8005aa8:	681b      	ldr	r3, [r3, #0]
 8005aaa:	681a      	ldr	r2, [r3, #0]
 8005aac:	68fb      	ldr	r3, [r7, #12]
 8005aae:	681b      	ldr	r3, [r3, #0]
 8005ab0:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005ab4:	601a      	str	r2, [r3, #0]
 8005ab6:	68fb      	ldr	r3, [r7, #12]
 8005ab8:	681b      	ldr	r3, [r3, #0]
 8005aba:	681a      	ldr	r2, [r3, #0]
 8005abc:	68fb      	ldr	r3, [r7, #12]
 8005abe:	681b      	ldr	r3, [r3, #0]
 8005ac0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8005ac4:	601a      	str	r2, [r3, #0]
 8005ac6:	68fb      	ldr	r3, [r7, #12]
 8005ac8:	2201      	movs	r2, #1
 8005aca:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8005ace:	68fb      	ldr	r3, [r7, #12]
 8005ad0:	2200      	movs	r2, #0
 8005ad2:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 8005ad6:	2303      	movs	r3, #3
 8005ad8:	e017      	b.n	8005b0a <SPI_WaitFlagStateUntilTimeout+0x102>
 8005ada:	697b      	ldr	r3, [r7, #20]
 8005adc:	2b00      	cmp	r3, #0
 8005ade:	d101      	bne.n	8005ae4 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8005ae0:	2300      	movs	r3, #0
 8005ae2:	61fb      	str	r3, [r7, #28]
 8005ae4:	697b      	ldr	r3, [r7, #20]
 8005ae6:	3b01      	subs	r3, #1
 8005ae8:	617b      	str	r3, [r7, #20]
 8005aea:	68fb      	ldr	r3, [r7, #12]
 8005aec:	681b      	ldr	r3, [r3, #0]
 8005aee:	689a      	ldr	r2, [r3, #8]
 8005af0:	68bb      	ldr	r3, [r7, #8]
 8005af2:	4013      	ands	r3, r2
 8005af4:	68ba      	ldr	r2, [r7, #8]
 8005af6:	429a      	cmp	r2, r3
 8005af8:	bf0c      	ite	eq
 8005afa:	2301      	moveq	r3, #1
 8005afc:	2300      	movne	r3, #0
 8005afe:	b2db      	uxtb	r3, r3
 8005b00:	461a      	mov	r2, r3
 8005b02:	79fb      	ldrb	r3, [r7, #7]
 8005b04:	429a      	cmp	r2, r3
 8005b06:	d19b      	bne.n	8005a40 <SPI_WaitFlagStateUntilTimeout+0x38>
 8005b08:	2300      	movs	r3, #0
 8005b0a:	4618      	mov	r0, r3
 8005b0c:	3720      	adds	r7, #32
 8005b0e:	46bd      	mov	sp, r7
 8005b10:	bd80      	pop	{r7, pc}
 8005b12:	bf00      	nop
 8005b14:	2000000c 	.word	0x2000000c

08005b18 <SPI_WaitFifoStateUntilTimeout>:
 8005b18:	b580      	push	{r7, lr}
 8005b1a:	b08a      	sub	sp, #40	; 0x28
 8005b1c:	af00      	add	r7, sp, #0
 8005b1e:	60f8      	str	r0, [r7, #12]
 8005b20:	60b9      	str	r1, [r7, #8]
 8005b22:	607a      	str	r2, [r7, #4]
 8005b24:	603b      	str	r3, [r7, #0]
 8005b26:	2300      	movs	r3, #0
 8005b28:	75fb      	strb	r3, [r7, #23]
 8005b2a:	f7fd f9f1 	bl	8002f10 <HAL_GetTick>
 8005b2e:	4602      	mov	r2, r0
 8005b30:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005b32:	1a9b      	subs	r3, r3, r2
 8005b34:	683a      	ldr	r2, [r7, #0]
 8005b36:	4413      	add	r3, r2
 8005b38:	627b      	str	r3, [r7, #36]	; 0x24
 8005b3a:	f7fd f9e9 	bl	8002f10 <HAL_GetTick>
 8005b3e:	6238      	str	r0, [r7, #32]
 8005b40:	68fb      	ldr	r3, [r7, #12]
 8005b42:	681b      	ldr	r3, [r3, #0]
 8005b44:	330c      	adds	r3, #12
 8005b46:	61fb      	str	r3, [r7, #28]
 8005b48:	4b3d      	ldr	r3, [pc, #244]	; (8005c40 <SPI_WaitFifoStateUntilTimeout+0x128>)
 8005b4a:	681a      	ldr	r2, [r3, #0]
 8005b4c:	4613      	mov	r3, r2
 8005b4e:	009b      	lsls	r3, r3, #2
 8005b50:	4413      	add	r3, r2
 8005b52:	00da      	lsls	r2, r3, #3
 8005b54:	1ad3      	subs	r3, r2, r3
 8005b56:	0d1b      	lsrs	r3, r3, #20
 8005b58:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005b5a:	fb02 f303 	mul.w	r3, r2, r3
 8005b5e:	61bb      	str	r3, [r7, #24]
 8005b60:	e060      	b.n	8005c24 <SPI_WaitFifoStateUntilTimeout+0x10c>
 8005b62:	68bb      	ldr	r3, [r7, #8]
 8005b64:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8005b68:	d107      	bne.n	8005b7a <SPI_WaitFifoStateUntilTimeout+0x62>
 8005b6a:	687b      	ldr	r3, [r7, #4]
 8005b6c:	2b00      	cmp	r3, #0
 8005b6e:	d104      	bne.n	8005b7a <SPI_WaitFifoStateUntilTimeout+0x62>
 8005b70:	69fb      	ldr	r3, [r7, #28]
 8005b72:	781b      	ldrb	r3, [r3, #0]
 8005b74:	b2db      	uxtb	r3, r3
 8005b76:	75fb      	strb	r3, [r7, #23]
 8005b78:	7dfb      	ldrb	r3, [r7, #23]
 8005b7a:	683b      	ldr	r3, [r7, #0]
 8005b7c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005b80:	d050      	beq.n	8005c24 <SPI_WaitFifoStateUntilTimeout+0x10c>
 8005b82:	f7fd f9c5 	bl	8002f10 <HAL_GetTick>
 8005b86:	4602      	mov	r2, r0
 8005b88:	6a3b      	ldr	r3, [r7, #32]
 8005b8a:	1ad3      	subs	r3, r2, r3
 8005b8c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005b8e:	429a      	cmp	r2, r3
 8005b90:	d902      	bls.n	8005b98 <SPI_WaitFifoStateUntilTimeout+0x80>
 8005b92:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005b94:	2b00      	cmp	r3, #0
 8005b96:	d13d      	bne.n	8005c14 <SPI_WaitFifoStateUntilTimeout+0xfc>
 8005b98:	68fb      	ldr	r3, [r7, #12]
 8005b9a:	681b      	ldr	r3, [r3, #0]
 8005b9c:	685a      	ldr	r2, [r3, #4]
 8005b9e:	68fb      	ldr	r3, [r7, #12]
 8005ba0:	681b      	ldr	r3, [r3, #0]
 8005ba2:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8005ba6:	605a      	str	r2, [r3, #4]
 8005ba8:	68fb      	ldr	r3, [r7, #12]
 8005baa:	685b      	ldr	r3, [r3, #4]
 8005bac:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005bb0:	d111      	bne.n	8005bd6 <SPI_WaitFifoStateUntilTimeout+0xbe>
 8005bb2:	68fb      	ldr	r3, [r7, #12]
 8005bb4:	689b      	ldr	r3, [r3, #8]
 8005bb6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005bba:	d004      	beq.n	8005bc6 <SPI_WaitFifoStateUntilTimeout+0xae>
 8005bbc:	68fb      	ldr	r3, [r7, #12]
 8005bbe:	689b      	ldr	r3, [r3, #8]
 8005bc0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005bc4:	d107      	bne.n	8005bd6 <SPI_WaitFifoStateUntilTimeout+0xbe>
 8005bc6:	68fb      	ldr	r3, [r7, #12]
 8005bc8:	681b      	ldr	r3, [r3, #0]
 8005bca:	681a      	ldr	r2, [r3, #0]
 8005bcc:	68fb      	ldr	r3, [r7, #12]
 8005bce:	681b      	ldr	r3, [r3, #0]
 8005bd0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005bd4:	601a      	str	r2, [r3, #0]
 8005bd6:	68fb      	ldr	r3, [r7, #12]
 8005bd8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005bda:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005bde:	d10f      	bne.n	8005c00 <SPI_WaitFifoStateUntilTimeout+0xe8>
 8005be0:	68fb      	ldr	r3, [r7, #12]
 8005be2:	681b      	ldr	r3, [r3, #0]
 8005be4:	681a      	ldr	r2, [r3, #0]
 8005be6:	68fb      	ldr	r3, [r7, #12]
 8005be8:	681b      	ldr	r3, [r3, #0]
 8005bea:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005bee:	601a      	str	r2, [r3, #0]
 8005bf0:	68fb      	ldr	r3, [r7, #12]
 8005bf2:	681b      	ldr	r3, [r3, #0]
 8005bf4:	681a      	ldr	r2, [r3, #0]
 8005bf6:	68fb      	ldr	r3, [r7, #12]
 8005bf8:	681b      	ldr	r3, [r3, #0]
 8005bfa:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8005bfe:	601a      	str	r2, [r3, #0]
 8005c00:	68fb      	ldr	r3, [r7, #12]
 8005c02:	2201      	movs	r2, #1
 8005c04:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8005c08:	68fb      	ldr	r3, [r7, #12]
 8005c0a:	2200      	movs	r2, #0
 8005c0c:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 8005c10:	2303      	movs	r3, #3
 8005c12:	e010      	b.n	8005c36 <SPI_WaitFifoStateUntilTimeout+0x11e>
 8005c14:	69bb      	ldr	r3, [r7, #24]
 8005c16:	2b00      	cmp	r3, #0
 8005c18:	d101      	bne.n	8005c1e <SPI_WaitFifoStateUntilTimeout+0x106>
 8005c1a:	2300      	movs	r3, #0
 8005c1c:	627b      	str	r3, [r7, #36]	; 0x24
 8005c1e:	69bb      	ldr	r3, [r7, #24]
 8005c20:	3b01      	subs	r3, #1
 8005c22:	61bb      	str	r3, [r7, #24]
 8005c24:	68fb      	ldr	r3, [r7, #12]
 8005c26:	681b      	ldr	r3, [r3, #0]
 8005c28:	689a      	ldr	r2, [r3, #8]
 8005c2a:	68bb      	ldr	r3, [r7, #8]
 8005c2c:	4013      	ands	r3, r2
 8005c2e:	687a      	ldr	r2, [r7, #4]
 8005c30:	429a      	cmp	r2, r3
 8005c32:	d196      	bne.n	8005b62 <SPI_WaitFifoStateUntilTimeout+0x4a>
 8005c34:	2300      	movs	r3, #0
 8005c36:	4618      	mov	r0, r3
 8005c38:	3728      	adds	r7, #40	; 0x28
 8005c3a:	46bd      	mov	sp, r7
 8005c3c:	bd80      	pop	{r7, pc}
 8005c3e:	bf00      	nop
 8005c40:	2000000c 	.word	0x2000000c

08005c44 <SPI_EndRxTransaction>:
 8005c44:	b580      	push	{r7, lr}
 8005c46:	b086      	sub	sp, #24
 8005c48:	af02      	add	r7, sp, #8
 8005c4a:	60f8      	str	r0, [r7, #12]
 8005c4c:	60b9      	str	r1, [r7, #8]
 8005c4e:	607a      	str	r2, [r7, #4]
 8005c50:	68fb      	ldr	r3, [r7, #12]
 8005c52:	685b      	ldr	r3, [r3, #4]
 8005c54:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005c58:	d111      	bne.n	8005c7e <SPI_EndRxTransaction+0x3a>
 8005c5a:	68fb      	ldr	r3, [r7, #12]
 8005c5c:	689b      	ldr	r3, [r3, #8]
 8005c5e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005c62:	d004      	beq.n	8005c6e <SPI_EndRxTransaction+0x2a>
 8005c64:	68fb      	ldr	r3, [r7, #12]
 8005c66:	689b      	ldr	r3, [r3, #8]
 8005c68:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005c6c:	d107      	bne.n	8005c7e <SPI_EndRxTransaction+0x3a>
 8005c6e:	68fb      	ldr	r3, [r7, #12]
 8005c70:	681b      	ldr	r3, [r3, #0]
 8005c72:	681a      	ldr	r2, [r3, #0]
 8005c74:	68fb      	ldr	r3, [r7, #12]
 8005c76:	681b      	ldr	r3, [r3, #0]
 8005c78:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005c7c:	601a      	str	r2, [r3, #0]
 8005c7e:	687b      	ldr	r3, [r7, #4]
 8005c80:	9300      	str	r3, [sp, #0]
 8005c82:	68bb      	ldr	r3, [r7, #8]
 8005c84:	2200      	movs	r2, #0
 8005c86:	2180      	movs	r1, #128	; 0x80
 8005c88:	68f8      	ldr	r0, [r7, #12]
 8005c8a:	f7ff febd 	bl	8005a08 <SPI_WaitFlagStateUntilTimeout>
 8005c8e:	4603      	mov	r3, r0
 8005c90:	2b00      	cmp	r3, #0
 8005c92:	d007      	beq.n	8005ca4 <SPI_EndRxTransaction+0x60>
 8005c94:	68fb      	ldr	r3, [r7, #12]
 8005c96:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005c98:	f043 0220 	orr.w	r2, r3, #32
 8005c9c:	68fb      	ldr	r3, [r7, #12]
 8005c9e:	661a      	str	r2, [r3, #96]	; 0x60
 8005ca0:	2303      	movs	r3, #3
 8005ca2:	e023      	b.n	8005cec <SPI_EndRxTransaction+0xa8>
 8005ca4:	68fb      	ldr	r3, [r7, #12]
 8005ca6:	685b      	ldr	r3, [r3, #4]
 8005ca8:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005cac:	d11d      	bne.n	8005cea <SPI_EndRxTransaction+0xa6>
 8005cae:	68fb      	ldr	r3, [r7, #12]
 8005cb0:	689b      	ldr	r3, [r3, #8]
 8005cb2:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005cb6:	d004      	beq.n	8005cc2 <SPI_EndRxTransaction+0x7e>
 8005cb8:	68fb      	ldr	r3, [r7, #12]
 8005cba:	689b      	ldr	r3, [r3, #8]
 8005cbc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005cc0:	d113      	bne.n	8005cea <SPI_EndRxTransaction+0xa6>
 8005cc2:	687b      	ldr	r3, [r7, #4]
 8005cc4:	9300      	str	r3, [sp, #0]
 8005cc6:	68bb      	ldr	r3, [r7, #8]
 8005cc8:	2200      	movs	r2, #0
 8005cca:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8005cce:	68f8      	ldr	r0, [r7, #12]
 8005cd0:	f7ff ff22 	bl	8005b18 <SPI_WaitFifoStateUntilTimeout>
 8005cd4:	4603      	mov	r3, r0
 8005cd6:	2b00      	cmp	r3, #0
 8005cd8:	d007      	beq.n	8005cea <SPI_EndRxTransaction+0xa6>
 8005cda:	68fb      	ldr	r3, [r7, #12]
 8005cdc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005cde:	f043 0220 	orr.w	r2, r3, #32
 8005ce2:	68fb      	ldr	r3, [r7, #12]
 8005ce4:	661a      	str	r2, [r3, #96]	; 0x60
 8005ce6:	2303      	movs	r3, #3
 8005ce8:	e000      	b.n	8005cec <SPI_EndRxTransaction+0xa8>
 8005cea:	2300      	movs	r3, #0
 8005cec:	4618      	mov	r0, r3
 8005cee:	3710      	adds	r7, #16
 8005cf0:	46bd      	mov	sp, r7
 8005cf2:	bd80      	pop	{r7, pc}

08005cf4 <SPI_EndRxTxTransaction>:
 8005cf4:	b580      	push	{r7, lr}
 8005cf6:	b086      	sub	sp, #24
 8005cf8:	af02      	add	r7, sp, #8
 8005cfa:	60f8      	str	r0, [r7, #12]
 8005cfc:	60b9      	str	r1, [r7, #8]
 8005cfe:	607a      	str	r2, [r7, #4]
 8005d00:	687b      	ldr	r3, [r7, #4]
 8005d02:	9300      	str	r3, [sp, #0]
 8005d04:	68bb      	ldr	r3, [r7, #8]
 8005d06:	2200      	movs	r2, #0
 8005d08:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
 8005d0c:	68f8      	ldr	r0, [r7, #12]
 8005d0e:	f7ff ff03 	bl	8005b18 <SPI_WaitFifoStateUntilTimeout>
 8005d12:	4603      	mov	r3, r0
 8005d14:	2b00      	cmp	r3, #0
 8005d16:	d007      	beq.n	8005d28 <SPI_EndRxTxTransaction+0x34>
 8005d18:	68fb      	ldr	r3, [r7, #12]
 8005d1a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005d1c:	f043 0220 	orr.w	r2, r3, #32
 8005d20:	68fb      	ldr	r3, [r7, #12]
 8005d22:	661a      	str	r2, [r3, #96]	; 0x60
 8005d24:	2303      	movs	r3, #3
 8005d26:	e027      	b.n	8005d78 <SPI_EndRxTxTransaction+0x84>
 8005d28:	687b      	ldr	r3, [r7, #4]
 8005d2a:	9300      	str	r3, [sp, #0]
 8005d2c:	68bb      	ldr	r3, [r7, #8]
 8005d2e:	2200      	movs	r2, #0
 8005d30:	2180      	movs	r1, #128	; 0x80
 8005d32:	68f8      	ldr	r0, [r7, #12]
 8005d34:	f7ff fe68 	bl	8005a08 <SPI_WaitFlagStateUntilTimeout>
 8005d38:	4603      	mov	r3, r0
 8005d3a:	2b00      	cmp	r3, #0
 8005d3c:	d007      	beq.n	8005d4e <SPI_EndRxTxTransaction+0x5a>
 8005d3e:	68fb      	ldr	r3, [r7, #12]
 8005d40:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005d42:	f043 0220 	orr.w	r2, r3, #32
 8005d46:	68fb      	ldr	r3, [r7, #12]
 8005d48:	661a      	str	r2, [r3, #96]	; 0x60
 8005d4a:	2303      	movs	r3, #3
 8005d4c:	e014      	b.n	8005d78 <SPI_EndRxTxTransaction+0x84>
 8005d4e:	687b      	ldr	r3, [r7, #4]
 8005d50:	9300      	str	r3, [sp, #0]
 8005d52:	68bb      	ldr	r3, [r7, #8]
 8005d54:	2200      	movs	r2, #0
 8005d56:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8005d5a:	68f8      	ldr	r0, [r7, #12]
 8005d5c:	f7ff fedc 	bl	8005b18 <SPI_WaitFifoStateUntilTimeout>
 8005d60:	4603      	mov	r3, r0
 8005d62:	2b00      	cmp	r3, #0
 8005d64:	d007      	beq.n	8005d76 <SPI_EndRxTxTransaction+0x82>
 8005d66:	68fb      	ldr	r3, [r7, #12]
 8005d68:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005d6a:	f043 0220 	orr.w	r2, r3, #32
 8005d6e:	68fb      	ldr	r3, [r7, #12]
 8005d70:	661a      	str	r2, [r3, #96]	; 0x60
 8005d72:	2303      	movs	r3, #3
 8005d74:	e000      	b.n	8005d78 <SPI_EndRxTxTransaction+0x84>
 8005d76:	2300      	movs	r3, #0
 8005d78:	4618      	mov	r0, r3
 8005d7a:	3710      	adds	r7, #16
 8005d7c:	46bd      	mov	sp, r7
 8005d7e:	bd80      	pop	{r7, pc}

08005d80 <HAL_TIM_Base_Init>:
 8005d80:	b580      	push	{r7, lr}
 8005d82:	b082      	sub	sp, #8
 8005d84:	af00      	add	r7, sp, #0
 8005d86:	6078      	str	r0, [r7, #4]
 8005d88:	687b      	ldr	r3, [r7, #4]
 8005d8a:	2b00      	cmp	r3, #0
 8005d8c:	d101      	bne.n	8005d92 <HAL_TIM_Base_Init+0x12>
 8005d8e:	2301      	movs	r3, #1
 8005d90:	e049      	b.n	8005e26 <HAL_TIM_Base_Init+0xa6>
 8005d92:	687b      	ldr	r3, [r7, #4]
 8005d94:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005d98:	b2db      	uxtb	r3, r3
 8005d9a:	2b00      	cmp	r3, #0
 8005d9c:	d106      	bne.n	8005dac <HAL_TIM_Base_Init+0x2c>
 8005d9e:	687b      	ldr	r3, [r7, #4]
 8005da0:	2200      	movs	r2, #0
 8005da2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005da6:	6878      	ldr	r0, [r7, #4]
 8005da8:	f7fc f802 	bl	8001db0 <HAL_TIM_Base_MspInit>
 8005dac:	687b      	ldr	r3, [r7, #4]
 8005dae:	2202      	movs	r2, #2
 8005db0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005db4:	687b      	ldr	r3, [r7, #4]
 8005db6:	681a      	ldr	r2, [r3, #0]
 8005db8:	687b      	ldr	r3, [r7, #4]
 8005dba:	3304      	adds	r3, #4
 8005dbc:	4619      	mov	r1, r3
 8005dbe:	4610      	mov	r0, r2
 8005dc0:	f000 f9ce 	bl	8006160 <TIM_Base_SetConfig>
 8005dc4:	687b      	ldr	r3, [r7, #4]
 8005dc6:	2201      	movs	r2, #1
 8005dc8:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8005dcc:	687b      	ldr	r3, [r7, #4]
 8005dce:	2201      	movs	r2, #1
 8005dd0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005dd4:	687b      	ldr	r3, [r7, #4]
 8005dd6:	2201      	movs	r2, #1
 8005dd8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005ddc:	687b      	ldr	r3, [r7, #4]
 8005dde:	2201      	movs	r2, #1
 8005de0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005de4:	687b      	ldr	r3, [r7, #4]
 8005de6:	2201      	movs	r2, #1
 8005de8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005dec:	687b      	ldr	r3, [r7, #4]
 8005dee:	2201      	movs	r2, #1
 8005df0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005df4:	687b      	ldr	r3, [r7, #4]
 8005df6:	2201      	movs	r2, #1
 8005df8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005dfc:	687b      	ldr	r3, [r7, #4]
 8005dfe:	2201      	movs	r2, #1
 8005e00:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8005e04:	687b      	ldr	r3, [r7, #4]
 8005e06:	2201      	movs	r2, #1
 8005e08:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8005e0c:	687b      	ldr	r3, [r7, #4]
 8005e0e:	2201      	movs	r2, #1
 8005e10:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8005e14:	687b      	ldr	r3, [r7, #4]
 8005e16:	2201      	movs	r2, #1
 8005e18:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 8005e1c:	687b      	ldr	r3, [r7, #4]
 8005e1e:	2201      	movs	r2, #1
 8005e20:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005e24:	2300      	movs	r3, #0
 8005e26:	4618      	mov	r0, r3
 8005e28:	3708      	adds	r7, #8
 8005e2a:	46bd      	mov	sp, r7
 8005e2c:	bd80      	pop	{r7, pc}

08005e2e <HAL_TIM_Base_DeInit>:
 8005e2e:	b580      	push	{r7, lr}
 8005e30:	b082      	sub	sp, #8
 8005e32:	af00      	add	r7, sp, #0
 8005e34:	6078      	str	r0, [r7, #4]
 8005e36:	687b      	ldr	r3, [r7, #4]
 8005e38:	2202      	movs	r2, #2
 8005e3a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005e3e:	687b      	ldr	r3, [r7, #4]
 8005e40:	681b      	ldr	r3, [r3, #0]
 8005e42:	6a1a      	ldr	r2, [r3, #32]
 8005e44:	f241 1311 	movw	r3, #4369	; 0x1111
 8005e48:	4013      	ands	r3, r2
 8005e4a:	2b00      	cmp	r3, #0
 8005e4c:	d10f      	bne.n	8005e6e <HAL_TIM_Base_DeInit+0x40>
 8005e4e:	687b      	ldr	r3, [r7, #4]
 8005e50:	681b      	ldr	r3, [r3, #0]
 8005e52:	6a1a      	ldr	r2, [r3, #32]
 8005e54:	f240 4344 	movw	r3, #1092	; 0x444
 8005e58:	4013      	ands	r3, r2
 8005e5a:	2b00      	cmp	r3, #0
 8005e5c:	d107      	bne.n	8005e6e <HAL_TIM_Base_DeInit+0x40>
 8005e5e:	687b      	ldr	r3, [r7, #4]
 8005e60:	681b      	ldr	r3, [r3, #0]
 8005e62:	681a      	ldr	r2, [r3, #0]
 8005e64:	687b      	ldr	r3, [r7, #4]
 8005e66:	681b      	ldr	r3, [r3, #0]
 8005e68:	f022 0201 	bic.w	r2, r2, #1
 8005e6c:	601a      	str	r2, [r3, #0]
 8005e6e:	6878      	ldr	r0, [r7, #4]
 8005e70:	f7fb ffbc 	bl	8001dec <HAL_TIM_Base_MspDeInit>
 8005e74:	687b      	ldr	r3, [r7, #4]
 8005e76:	2200      	movs	r2, #0
 8005e78:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8005e7c:	687b      	ldr	r3, [r7, #4]
 8005e7e:	2200      	movs	r2, #0
 8005e80:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005e84:	687b      	ldr	r3, [r7, #4]
 8005e86:	2200      	movs	r2, #0
 8005e88:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005e8c:	687b      	ldr	r3, [r7, #4]
 8005e8e:	2200      	movs	r2, #0
 8005e90:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005e94:	687b      	ldr	r3, [r7, #4]
 8005e96:	2200      	movs	r2, #0
 8005e98:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005e9c:	687b      	ldr	r3, [r7, #4]
 8005e9e:	2200      	movs	r2, #0
 8005ea0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005ea4:	687b      	ldr	r3, [r7, #4]
 8005ea6:	2200      	movs	r2, #0
 8005ea8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005eac:	687b      	ldr	r3, [r7, #4]
 8005eae:	2200      	movs	r2, #0
 8005eb0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8005eb4:	687b      	ldr	r3, [r7, #4]
 8005eb6:	2200      	movs	r2, #0
 8005eb8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8005ebc:	687b      	ldr	r3, [r7, #4]
 8005ebe:	2200      	movs	r2, #0
 8005ec0:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8005ec4:	687b      	ldr	r3, [r7, #4]
 8005ec6:	2200      	movs	r2, #0
 8005ec8:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	2200      	movs	r2, #0
 8005ed0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005ed4:	687b      	ldr	r3, [r7, #4]
 8005ed6:	2200      	movs	r2, #0
 8005ed8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005edc:	2300      	movs	r3, #0
 8005ede:	4618      	mov	r0, r3
 8005ee0:	3708      	adds	r7, #8
 8005ee2:	46bd      	mov	sp, r7
 8005ee4:	bd80      	pop	{r7, pc}
	...

08005ee8 <HAL_TIM_Base_Start>:
 8005ee8:	b480      	push	{r7}
 8005eea:	b085      	sub	sp, #20
 8005eec:	af00      	add	r7, sp, #0
 8005eee:	6078      	str	r0, [r7, #4]
 8005ef0:	687b      	ldr	r3, [r7, #4]
 8005ef2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005ef6:	b2db      	uxtb	r3, r3
 8005ef8:	2b01      	cmp	r3, #1
 8005efa:	d001      	beq.n	8005f00 <HAL_TIM_Base_Start+0x18>
 8005efc:	2301      	movs	r3, #1
 8005efe:	e033      	b.n	8005f68 <HAL_TIM_Base_Start+0x80>
 8005f00:	687b      	ldr	r3, [r7, #4]
 8005f02:	2202      	movs	r2, #2
 8005f04:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005f08:	687b      	ldr	r3, [r7, #4]
 8005f0a:	681b      	ldr	r3, [r3, #0]
 8005f0c:	4a19      	ldr	r2, [pc, #100]	; (8005f74 <HAL_TIM_Base_Start+0x8c>)
 8005f0e:	4293      	cmp	r3, r2
 8005f10:	d009      	beq.n	8005f26 <HAL_TIM_Base_Start+0x3e>
 8005f12:	687b      	ldr	r3, [r7, #4]
 8005f14:	681b      	ldr	r3, [r3, #0]
 8005f16:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005f1a:	d004      	beq.n	8005f26 <HAL_TIM_Base_Start+0x3e>
 8005f1c:	687b      	ldr	r3, [r7, #4]
 8005f1e:	681b      	ldr	r3, [r3, #0]
 8005f20:	4a15      	ldr	r2, [pc, #84]	; (8005f78 <HAL_TIM_Base_Start+0x90>)
 8005f22:	4293      	cmp	r3, r2
 8005f24:	d115      	bne.n	8005f52 <HAL_TIM_Base_Start+0x6a>
 8005f26:	687b      	ldr	r3, [r7, #4]
 8005f28:	681b      	ldr	r3, [r3, #0]
 8005f2a:	689a      	ldr	r2, [r3, #8]
 8005f2c:	4b13      	ldr	r3, [pc, #76]	; (8005f7c <HAL_TIM_Base_Start+0x94>)
 8005f2e:	4013      	ands	r3, r2
 8005f30:	60fb      	str	r3, [r7, #12]
 8005f32:	68fb      	ldr	r3, [r7, #12]
 8005f34:	2b06      	cmp	r3, #6
 8005f36:	d015      	beq.n	8005f64 <HAL_TIM_Base_Start+0x7c>
 8005f38:	68fb      	ldr	r3, [r7, #12]
 8005f3a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005f3e:	d011      	beq.n	8005f64 <HAL_TIM_Base_Start+0x7c>
 8005f40:	687b      	ldr	r3, [r7, #4]
 8005f42:	681b      	ldr	r3, [r3, #0]
 8005f44:	681a      	ldr	r2, [r3, #0]
 8005f46:	687b      	ldr	r3, [r7, #4]
 8005f48:	681b      	ldr	r3, [r3, #0]
 8005f4a:	f042 0201 	orr.w	r2, r2, #1
 8005f4e:	601a      	str	r2, [r3, #0]
 8005f50:	e008      	b.n	8005f64 <HAL_TIM_Base_Start+0x7c>
 8005f52:	687b      	ldr	r3, [r7, #4]
 8005f54:	681b      	ldr	r3, [r3, #0]
 8005f56:	681a      	ldr	r2, [r3, #0]
 8005f58:	687b      	ldr	r3, [r7, #4]
 8005f5a:	681b      	ldr	r3, [r3, #0]
 8005f5c:	f042 0201 	orr.w	r2, r2, #1
 8005f60:	601a      	str	r2, [r3, #0]
 8005f62:	e000      	b.n	8005f66 <HAL_TIM_Base_Start+0x7e>
 8005f64:	bf00      	nop
 8005f66:	2300      	movs	r3, #0
 8005f68:	4618      	mov	r0, r3
 8005f6a:	3714      	adds	r7, #20
 8005f6c:	46bd      	mov	sp, r7
 8005f6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f72:	4770      	bx	lr
 8005f74:	40012c00 	.word	0x40012c00
 8005f78:	40014000 	.word	0x40014000
 8005f7c:	00010007 	.word	0x00010007

08005f80 <HAL_TIM_Base_Stop>:
 8005f80:	b480      	push	{r7}
 8005f82:	b083      	sub	sp, #12
 8005f84:	af00      	add	r7, sp, #0
 8005f86:	6078      	str	r0, [r7, #4]
 8005f88:	687b      	ldr	r3, [r7, #4]
 8005f8a:	681b      	ldr	r3, [r3, #0]
 8005f8c:	6a1a      	ldr	r2, [r3, #32]
 8005f8e:	f241 1311 	movw	r3, #4369	; 0x1111
 8005f92:	4013      	ands	r3, r2
 8005f94:	2b00      	cmp	r3, #0
 8005f96:	d10f      	bne.n	8005fb8 <HAL_TIM_Base_Stop+0x38>
 8005f98:	687b      	ldr	r3, [r7, #4]
 8005f9a:	681b      	ldr	r3, [r3, #0]
 8005f9c:	6a1a      	ldr	r2, [r3, #32]
 8005f9e:	f240 4344 	movw	r3, #1092	; 0x444
 8005fa2:	4013      	ands	r3, r2
 8005fa4:	2b00      	cmp	r3, #0
 8005fa6:	d107      	bne.n	8005fb8 <HAL_TIM_Base_Stop+0x38>
 8005fa8:	687b      	ldr	r3, [r7, #4]
 8005faa:	681b      	ldr	r3, [r3, #0]
 8005fac:	681a      	ldr	r2, [r3, #0]
 8005fae:	687b      	ldr	r3, [r7, #4]
 8005fb0:	681b      	ldr	r3, [r3, #0]
 8005fb2:	f022 0201 	bic.w	r2, r2, #1
 8005fb6:	601a      	str	r2, [r3, #0]
 8005fb8:	687b      	ldr	r3, [r7, #4]
 8005fba:	2201      	movs	r2, #1
 8005fbc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005fc0:	2300      	movs	r3, #0
 8005fc2:	4618      	mov	r0, r3
 8005fc4:	370c      	adds	r7, #12
 8005fc6:	46bd      	mov	sp, r7
 8005fc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fcc:	4770      	bx	lr

08005fce <HAL_TIM_ConfigClockSource>:
 8005fce:	b580      	push	{r7, lr}
 8005fd0:	b084      	sub	sp, #16
 8005fd2:	af00      	add	r7, sp, #0
 8005fd4:	6078      	str	r0, [r7, #4]
 8005fd6:	6039      	str	r1, [r7, #0]
 8005fd8:	2300      	movs	r3, #0
 8005fda:	73fb      	strb	r3, [r7, #15]
 8005fdc:	687b      	ldr	r3, [r7, #4]
 8005fde:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005fe2:	2b01      	cmp	r3, #1
 8005fe4:	d101      	bne.n	8005fea <HAL_TIM_ConfigClockSource+0x1c>
 8005fe6:	2302      	movs	r3, #2
 8005fe8:	e0b6      	b.n	8006158 <HAL_TIM_ConfigClockSource+0x18a>
 8005fea:	687b      	ldr	r3, [r7, #4]
 8005fec:	2201      	movs	r2, #1
 8005fee:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005ff2:	687b      	ldr	r3, [r7, #4]
 8005ff4:	2202      	movs	r2, #2
 8005ff6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005ffa:	687b      	ldr	r3, [r7, #4]
 8005ffc:	681b      	ldr	r3, [r3, #0]
 8005ffe:	689b      	ldr	r3, [r3, #8]
 8006000:	60bb      	str	r3, [r7, #8]
 8006002:	68bb      	ldr	r3, [r7, #8]
 8006004:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006008:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800600c:	60bb      	str	r3, [r7, #8]
 800600e:	68bb      	ldr	r3, [r7, #8]
 8006010:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006014:	60bb      	str	r3, [r7, #8]
 8006016:	687b      	ldr	r3, [r7, #4]
 8006018:	681b      	ldr	r3, [r3, #0]
 800601a:	68ba      	ldr	r2, [r7, #8]
 800601c:	609a      	str	r2, [r3, #8]
 800601e:	683b      	ldr	r3, [r7, #0]
 8006020:	681b      	ldr	r3, [r3, #0]
 8006022:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006026:	d03e      	beq.n	80060a6 <HAL_TIM_ConfigClockSource+0xd8>
 8006028:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800602c:	f200 8087 	bhi.w	800613e <HAL_TIM_ConfigClockSource+0x170>
 8006030:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006034:	f000 8086 	beq.w	8006144 <HAL_TIM_ConfigClockSource+0x176>
 8006038:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800603c:	d87f      	bhi.n	800613e <HAL_TIM_ConfigClockSource+0x170>
 800603e:	2b70      	cmp	r3, #112	; 0x70
 8006040:	d01a      	beq.n	8006078 <HAL_TIM_ConfigClockSource+0xaa>
 8006042:	2b70      	cmp	r3, #112	; 0x70
 8006044:	d87b      	bhi.n	800613e <HAL_TIM_ConfigClockSource+0x170>
 8006046:	2b60      	cmp	r3, #96	; 0x60
 8006048:	d050      	beq.n	80060ec <HAL_TIM_ConfigClockSource+0x11e>
 800604a:	2b60      	cmp	r3, #96	; 0x60
 800604c:	d877      	bhi.n	800613e <HAL_TIM_ConfigClockSource+0x170>
 800604e:	2b50      	cmp	r3, #80	; 0x50
 8006050:	d03c      	beq.n	80060cc <HAL_TIM_ConfigClockSource+0xfe>
 8006052:	2b50      	cmp	r3, #80	; 0x50
 8006054:	d873      	bhi.n	800613e <HAL_TIM_ConfigClockSource+0x170>
 8006056:	2b40      	cmp	r3, #64	; 0x40
 8006058:	d058      	beq.n	800610c <HAL_TIM_ConfigClockSource+0x13e>
 800605a:	2b40      	cmp	r3, #64	; 0x40
 800605c:	d86f      	bhi.n	800613e <HAL_TIM_ConfigClockSource+0x170>
 800605e:	2b30      	cmp	r3, #48	; 0x30
 8006060:	d064      	beq.n	800612c <HAL_TIM_ConfigClockSource+0x15e>
 8006062:	2b30      	cmp	r3, #48	; 0x30
 8006064:	d86b      	bhi.n	800613e <HAL_TIM_ConfigClockSource+0x170>
 8006066:	2b20      	cmp	r3, #32
 8006068:	d060      	beq.n	800612c <HAL_TIM_ConfigClockSource+0x15e>
 800606a:	2b20      	cmp	r3, #32
 800606c:	d867      	bhi.n	800613e <HAL_TIM_ConfigClockSource+0x170>
 800606e:	2b00      	cmp	r3, #0
 8006070:	d05c      	beq.n	800612c <HAL_TIM_ConfigClockSource+0x15e>
 8006072:	2b10      	cmp	r3, #16
 8006074:	d05a      	beq.n	800612c <HAL_TIM_ConfigClockSource+0x15e>
 8006076:	e062      	b.n	800613e <HAL_TIM_ConfigClockSource+0x170>
 8006078:	687b      	ldr	r3, [r7, #4]
 800607a:	6818      	ldr	r0, [r3, #0]
 800607c:	683b      	ldr	r3, [r7, #0]
 800607e:	6899      	ldr	r1, [r3, #8]
 8006080:	683b      	ldr	r3, [r7, #0]
 8006082:	685a      	ldr	r2, [r3, #4]
 8006084:	683b      	ldr	r3, [r7, #0]
 8006086:	68db      	ldr	r3, [r3, #12]
 8006088:	f000 f952 	bl	8006330 <TIM_ETR_SetConfig>
 800608c:	687b      	ldr	r3, [r7, #4]
 800608e:	681b      	ldr	r3, [r3, #0]
 8006090:	689b      	ldr	r3, [r3, #8]
 8006092:	60bb      	str	r3, [r7, #8]
 8006094:	68bb      	ldr	r3, [r7, #8]
 8006096:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800609a:	60bb      	str	r3, [r7, #8]
 800609c:	687b      	ldr	r3, [r7, #4]
 800609e:	681b      	ldr	r3, [r3, #0]
 80060a0:	68ba      	ldr	r2, [r7, #8]
 80060a2:	609a      	str	r2, [r3, #8]
 80060a4:	e04f      	b.n	8006146 <HAL_TIM_ConfigClockSource+0x178>
 80060a6:	687b      	ldr	r3, [r7, #4]
 80060a8:	6818      	ldr	r0, [r3, #0]
 80060aa:	683b      	ldr	r3, [r7, #0]
 80060ac:	6899      	ldr	r1, [r3, #8]
 80060ae:	683b      	ldr	r3, [r7, #0]
 80060b0:	685a      	ldr	r2, [r3, #4]
 80060b2:	683b      	ldr	r3, [r7, #0]
 80060b4:	68db      	ldr	r3, [r3, #12]
 80060b6:	f000 f93b 	bl	8006330 <TIM_ETR_SetConfig>
 80060ba:	687b      	ldr	r3, [r7, #4]
 80060bc:	681b      	ldr	r3, [r3, #0]
 80060be:	689a      	ldr	r2, [r3, #8]
 80060c0:	687b      	ldr	r3, [r7, #4]
 80060c2:	681b      	ldr	r3, [r3, #0]
 80060c4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80060c8:	609a      	str	r2, [r3, #8]
 80060ca:	e03c      	b.n	8006146 <HAL_TIM_ConfigClockSource+0x178>
 80060cc:	687b      	ldr	r3, [r7, #4]
 80060ce:	6818      	ldr	r0, [r3, #0]
 80060d0:	683b      	ldr	r3, [r7, #0]
 80060d2:	6859      	ldr	r1, [r3, #4]
 80060d4:	683b      	ldr	r3, [r7, #0]
 80060d6:	68db      	ldr	r3, [r3, #12]
 80060d8:	461a      	mov	r2, r3
 80060da:	f000 f8af 	bl	800623c <TIM_TI1_ConfigInputStage>
 80060de:	687b      	ldr	r3, [r7, #4]
 80060e0:	681b      	ldr	r3, [r3, #0]
 80060e2:	2150      	movs	r1, #80	; 0x50
 80060e4:	4618      	mov	r0, r3
 80060e6:	f000 f908 	bl	80062fa <TIM_ITRx_SetConfig>
 80060ea:	e02c      	b.n	8006146 <HAL_TIM_ConfigClockSource+0x178>
 80060ec:	687b      	ldr	r3, [r7, #4]
 80060ee:	6818      	ldr	r0, [r3, #0]
 80060f0:	683b      	ldr	r3, [r7, #0]
 80060f2:	6859      	ldr	r1, [r3, #4]
 80060f4:	683b      	ldr	r3, [r7, #0]
 80060f6:	68db      	ldr	r3, [r3, #12]
 80060f8:	461a      	mov	r2, r3
 80060fa:	f000 f8ce 	bl	800629a <TIM_TI2_ConfigInputStage>
 80060fe:	687b      	ldr	r3, [r7, #4]
 8006100:	681b      	ldr	r3, [r3, #0]
 8006102:	2160      	movs	r1, #96	; 0x60
 8006104:	4618      	mov	r0, r3
 8006106:	f000 f8f8 	bl	80062fa <TIM_ITRx_SetConfig>
 800610a:	e01c      	b.n	8006146 <HAL_TIM_ConfigClockSource+0x178>
 800610c:	687b      	ldr	r3, [r7, #4]
 800610e:	6818      	ldr	r0, [r3, #0]
 8006110:	683b      	ldr	r3, [r7, #0]
 8006112:	6859      	ldr	r1, [r3, #4]
 8006114:	683b      	ldr	r3, [r7, #0]
 8006116:	68db      	ldr	r3, [r3, #12]
 8006118:	461a      	mov	r2, r3
 800611a:	f000 f88f 	bl	800623c <TIM_TI1_ConfigInputStage>
 800611e:	687b      	ldr	r3, [r7, #4]
 8006120:	681b      	ldr	r3, [r3, #0]
 8006122:	2140      	movs	r1, #64	; 0x40
 8006124:	4618      	mov	r0, r3
 8006126:	f000 f8e8 	bl	80062fa <TIM_ITRx_SetConfig>
 800612a:	e00c      	b.n	8006146 <HAL_TIM_ConfigClockSource+0x178>
 800612c:	687b      	ldr	r3, [r7, #4]
 800612e:	681a      	ldr	r2, [r3, #0]
 8006130:	683b      	ldr	r3, [r7, #0]
 8006132:	681b      	ldr	r3, [r3, #0]
 8006134:	4619      	mov	r1, r3
 8006136:	4610      	mov	r0, r2
 8006138:	f000 f8df 	bl	80062fa <TIM_ITRx_SetConfig>
 800613c:	e003      	b.n	8006146 <HAL_TIM_ConfigClockSource+0x178>
 800613e:	2301      	movs	r3, #1
 8006140:	73fb      	strb	r3, [r7, #15]
 8006142:	e000      	b.n	8006146 <HAL_TIM_ConfigClockSource+0x178>
 8006144:	bf00      	nop
 8006146:	687b      	ldr	r3, [r7, #4]
 8006148:	2201      	movs	r2, #1
 800614a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800614e:	687b      	ldr	r3, [r7, #4]
 8006150:	2200      	movs	r2, #0
 8006152:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006156:	7bfb      	ldrb	r3, [r7, #15]
 8006158:	4618      	mov	r0, r3
 800615a:	3710      	adds	r7, #16
 800615c:	46bd      	mov	sp, r7
 800615e:	bd80      	pop	{r7, pc}

08006160 <TIM_Base_SetConfig>:
 8006160:	b480      	push	{r7}
 8006162:	b085      	sub	sp, #20
 8006164:	af00      	add	r7, sp, #0
 8006166:	6078      	str	r0, [r7, #4]
 8006168:	6039      	str	r1, [r7, #0]
 800616a:	687b      	ldr	r3, [r7, #4]
 800616c:	681b      	ldr	r3, [r3, #0]
 800616e:	60fb      	str	r3, [r7, #12]
 8006170:	687b      	ldr	r3, [r7, #4]
 8006172:	4a2e      	ldr	r2, [pc, #184]	; (800622c <TIM_Base_SetConfig+0xcc>)
 8006174:	4293      	cmp	r3, r2
 8006176:	d003      	beq.n	8006180 <TIM_Base_SetConfig+0x20>
 8006178:	687b      	ldr	r3, [r7, #4]
 800617a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800617e:	d108      	bne.n	8006192 <TIM_Base_SetConfig+0x32>
 8006180:	68fb      	ldr	r3, [r7, #12]
 8006182:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006186:	60fb      	str	r3, [r7, #12]
 8006188:	683b      	ldr	r3, [r7, #0]
 800618a:	685b      	ldr	r3, [r3, #4]
 800618c:	68fa      	ldr	r2, [r7, #12]
 800618e:	4313      	orrs	r3, r2
 8006190:	60fb      	str	r3, [r7, #12]
 8006192:	687b      	ldr	r3, [r7, #4]
 8006194:	4a25      	ldr	r2, [pc, #148]	; (800622c <TIM_Base_SetConfig+0xcc>)
 8006196:	4293      	cmp	r3, r2
 8006198:	d00f      	beq.n	80061ba <TIM_Base_SetConfig+0x5a>
 800619a:	687b      	ldr	r3, [r7, #4]
 800619c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80061a0:	d00b      	beq.n	80061ba <TIM_Base_SetConfig+0x5a>
 80061a2:	687b      	ldr	r3, [r7, #4]
 80061a4:	4a22      	ldr	r2, [pc, #136]	; (8006230 <TIM_Base_SetConfig+0xd0>)
 80061a6:	4293      	cmp	r3, r2
 80061a8:	d007      	beq.n	80061ba <TIM_Base_SetConfig+0x5a>
 80061aa:	687b      	ldr	r3, [r7, #4]
 80061ac:	4a21      	ldr	r2, [pc, #132]	; (8006234 <TIM_Base_SetConfig+0xd4>)
 80061ae:	4293      	cmp	r3, r2
 80061b0:	d003      	beq.n	80061ba <TIM_Base_SetConfig+0x5a>
 80061b2:	687b      	ldr	r3, [r7, #4]
 80061b4:	4a20      	ldr	r2, [pc, #128]	; (8006238 <TIM_Base_SetConfig+0xd8>)
 80061b6:	4293      	cmp	r3, r2
 80061b8:	d108      	bne.n	80061cc <TIM_Base_SetConfig+0x6c>
 80061ba:	68fb      	ldr	r3, [r7, #12]
 80061bc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80061c0:	60fb      	str	r3, [r7, #12]
 80061c2:	683b      	ldr	r3, [r7, #0]
 80061c4:	68db      	ldr	r3, [r3, #12]
 80061c6:	68fa      	ldr	r2, [r7, #12]
 80061c8:	4313      	orrs	r3, r2
 80061ca:	60fb      	str	r3, [r7, #12]
 80061cc:	68fb      	ldr	r3, [r7, #12]
 80061ce:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80061d2:	683b      	ldr	r3, [r7, #0]
 80061d4:	695b      	ldr	r3, [r3, #20]
 80061d6:	4313      	orrs	r3, r2
 80061d8:	60fb      	str	r3, [r7, #12]
 80061da:	687b      	ldr	r3, [r7, #4]
 80061dc:	68fa      	ldr	r2, [r7, #12]
 80061de:	601a      	str	r2, [r3, #0]
 80061e0:	683b      	ldr	r3, [r7, #0]
 80061e2:	689a      	ldr	r2, [r3, #8]
 80061e4:	687b      	ldr	r3, [r7, #4]
 80061e6:	62da      	str	r2, [r3, #44]	; 0x2c
 80061e8:	683b      	ldr	r3, [r7, #0]
 80061ea:	681a      	ldr	r2, [r3, #0]
 80061ec:	687b      	ldr	r3, [r7, #4]
 80061ee:	629a      	str	r2, [r3, #40]	; 0x28
 80061f0:	687b      	ldr	r3, [r7, #4]
 80061f2:	4a0e      	ldr	r2, [pc, #56]	; (800622c <TIM_Base_SetConfig+0xcc>)
 80061f4:	4293      	cmp	r3, r2
 80061f6:	d00b      	beq.n	8006210 <TIM_Base_SetConfig+0xb0>
 80061f8:	687b      	ldr	r3, [r7, #4]
 80061fa:	4a0d      	ldr	r2, [pc, #52]	; (8006230 <TIM_Base_SetConfig+0xd0>)
 80061fc:	4293      	cmp	r3, r2
 80061fe:	d007      	beq.n	8006210 <TIM_Base_SetConfig+0xb0>
 8006200:	687b      	ldr	r3, [r7, #4]
 8006202:	4a0c      	ldr	r2, [pc, #48]	; (8006234 <TIM_Base_SetConfig+0xd4>)
 8006204:	4293      	cmp	r3, r2
 8006206:	d003      	beq.n	8006210 <TIM_Base_SetConfig+0xb0>
 8006208:	687b      	ldr	r3, [r7, #4]
 800620a:	4a0b      	ldr	r2, [pc, #44]	; (8006238 <TIM_Base_SetConfig+0xd8>)
 800620c:	4293      	cmp	r3, r2
 800620e:	d103      	bne.n	8006218 <TIM_Base_SetConfig+0xb8>
 8006210:	683b      	ldr	r3, [r7, #0]
 8006212:	691a      	ldr	r2, [r3, #16]
 8006214:	687b      	ldr	r3, [r7, #4]
 8006216:	631a      	str	r2, [r3, #48]	; 0x30
 8006218:	687b      	ldr	r3, [r7, #4]
 800621a:	2201      	movs	r2, #1
 800621c:	615a      	str	r2, [r3, #20]
 800621e:	bf00      	nop
 8006220:	3714      	adds	r7, #20
 8006222:	46bd      	mov	sp, r7
 8006224:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006228:	4770      	bx	lr
 800622a:	bf00      	nop
 800622c:	40012c00 	.word	0x40012c00
 8006230:	40014000 	.word	0x40014000
 8006234:	40014400 	.word	0x40014400
 8006238:	40014800 	.word	0x40014800

0800623c <TIM_TI1_ConfigInputStage>:
 800623c:	b480      	push	{r7}
 800623e:	b087      	sub	sp, #28
 8006240:	af00      	add	r7, sp, #0
 8006242:	60f8      	str	r0, [r7, #12]
 8006244:	60b9      	str	r1, [r7, #8]
 8006246:	607a      	str	r2, [r7, #4]
 8006248:	68fb      	ldr	r3, [r7, #12]
 800624a:	6a1b      	ldr	r3, [r3, #32]
 800624c:	617b      	str	r3, [r7, #20]
 800624e:	68fb      	ldr	r3, [r7, #12]
 8006250:	6a1b      	ldr	r3, [r3, #32]
 8006252:	f023 0201 	bic.w	r2, r3, #1
 8006256:	68fb      	ldr	r3, [r7, #12]
 8006258:	621a      	str	r2, [r3, #32]
 800625a:	68fb      	ldr	r3, [r7, #12]
 800625c:	699b      	ldr	r3, [r3, #24]
 800625e:	613b      	str	r3, [r7, #16]
 8006260:	693b      	ldr	r3, [r7, #16]
 8006262:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006266:	613b      	str	r3, [r7, #16]
 8006268:	687b      	ldr	r3, [r7, #4]
 800626a:	011b      	lsls	r3, r3, #4
 800626c:	693a      	ldr	r2, [r7, #16]
 800626e:	4313      	orrs	r3, r2
 8006270:	613b      	str	r3, [r7, #16]
 8006272:	697b      	ldr	r3, [r7, #20]
 8006274:	f023 030a 	bic.w	r3, r3, #10
 8006278:	617b      	str	r3, [r7, #20]
 800627a:	697a      	ldr	r2, [r7, #20]
 800627c:	68bb      	ldr	r3, [r7, #8]
 800627e:	4313      	orrs	r3, r2
 8006280:	617b      	str	r3, [r7, #20]
 8006282:	68fb      	ldr	r3, [r7, #12]
 8006284:	693a      	ldr	r2, [r7, #16]
 8006286:	619a      	str	r2, [r3, #24]
 8006288:	68fb      	ldr	r3, [r7, #12]
 800628a:	697a      	ldr	r2, [r7, #20]
 800628c:	621a      	str	r2, [r3, #32]
 800628e:	bf00      	nop
 8006290:	371c      	adds	r7, #28
 8006292:	46bd      	mov	sp, r7
 8006294:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006298:	4770      	bx	lr

0800629a <TIM_TI2_ConfigInputStage>:
 800629a:	b480      	push	{r7}
 800629c:	b087      	sub	sp, #28
 800629e:	af00      	add	r7, sp, #0
 80062a0:	60f8      	str	r0, [r7, #12]
 80062a2:	60b9      	str	r1, [r7, #8]
 80062a4:	607a      	str	r2, [r7, #4]
 80062a6:	68fb      	ldr	r3, [r7, #12]
 80062a8:	6a1b      	ldr	r3, [r3, #32]
 80062aa:	f023 0210 	bic.w	r2, r3, #16
 80062ae:	68fb      	ldr	r3, [r7, #12]
 80062b0:	621a      	str	r2, [r3, #32]
 80062b2:	68fb      	ldr	r3, [r7, #12]
 80062b4:	699b      	ldr	r3, [r3, #24]
 80062b6:	617b      	str	r3, [r7, #20]
 80062b8:	68fb      	ldr	r3, [r7, #12]
 80062ba:	6a1b      	ldr	r3, [r3, #32]
 80062bc:	613b      	str	r3, [r7, #16]
 80062be:	697b      	ldr	r3, [r7, #20]
 80062c0:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80062c4:	617b      	str	r3, [r7, #20]
 80062c6:	687b      	ldr	r3, [r7, #4]
 80062c8:	031b      	lsls	r3, r3, #12
 80062ca:	697a      	ldr	r2, [r7, #20]
 80062cc:	4313      	orrs	r3, r2
 80062ce:	617b      	str	r3, [r7, #20]
 80062d0:	693b      	ldr	r3, [r7, #16]
 80062d2:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80062d6:	613b      	str	r3, [r7, #16]
 80062d8:	68bb      	ldr	r3, [r7, #8]
 80062da:	011b      	lsls	r3, r3, #4
 80062dc:	693a      	ldr	r2, [r7, #16]
 80062de:	4313      	orrs	r3, r2
 80062e0:	613b      	str	r3, [r7, #16]
 80062e2:	68fb      	ldr	r3, [r7, #12]
 80062e4:	697a      	ldr	r2, [r7, #20]
 80062e6:	619a      	str	r2, [r3, #24]
 80062e8:	68fb      	ldr	r3, [r7, #12]
 80062ea:	693a      	ldr	r2, [r7, #16]
 80062ec:	621a      	str	r2, [r3, #32]
 80062ee:	bf00      	nop
 80062f0:	371c      	adds	r7, #28
 80062f2:	46bd      	mov	sp, r7
 80062f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062f8:	4770      	bx	lr

080062fa <TIM_ITRx_SetConfig>:
 80062fa:	b480      	push	{r7}
 80062fc:	b085      	sub	sp, #20
 80062fe:	af00      	add	r7, sp, #0
 8006300:	6078      	str	r0, [r7, #4]
 8006302:	6039      	str	r1, [r7, #0]
 8006304:	687b      	ldr	r3, [r7, #4]
 8006306:	689b      	ldr	r3, [r3, #8]
 8006308:	60fb      	str	r3, [r7, #12]
 800630a:	68fb      	ldr	r3, [r7, #12]
 800630c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006310:	60fb      	str	r3, [r7, #12]
 8006312:	683a      	ldr	r2, [r7, #0]
 8006314:	68fb      	ldr	r3, [r7, #12]
 8006316:	4313      	orrs	r3, r2
 8006318:	f043 0307 	orr.w	r3, r3, #7
 800631c:	60fb      	str	r3, [r7, #12]
 800631e:	687b      	ldr	r3, [r7, #4]
 8006320:	68fa      	ldr	r2, [r7, #12]
 8006322:	609a      	str	r2, [r3, #8]
 8006324:	bf00      	nop
 8006326:	3714      	adds	r7, #20
 8006328:	46bd      	mov	sp, r7
 800632a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800632e:	4770      	bx	lr

08006330 <TIM_ETR_SetConfig>:
 8006330:	b480      	push	{r7}
 8006332:	b087      	sub	sp, #28
 8006334:	af00      	add	r7, sp, #0
 8006336:	60f8      	str	r0, [r7, #12]
 8006338:	60b9      	str	r1, [r7, #8]
 800633a:	607a      	str	r2, [r7, #4]
 800633c:	603b      	str	r3, [r7, #0]
 800633e:	68fb      	ldr	r3, [r7, #12]
 8006340:	689b      	ldr	r3, [r3, #8]
 8006342:	617b      	str	r3, [r7, #20]
 8006344:	697b      	ldr	r3, [r7, #20]
 8006346:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800634a:	617b      	str	r3, [r7, #20]
 800634c:	683b      	ldr	r3, [r7, #0]
 800634e:	021a      	lsls	r2, r3, #8
 8006350:	687b      	ldr	r3, [r7, #4]
 8006352:	431a      	orrs	r2, r3
 8006354:	68bb      	ldr	r3, [r7, #8]
 8006356:	4313      	orrs	r3, r2
 8006358:	697a      	ldr	r2, [r7, #20]
 800635a:	4313      	orrs	r3, r2
 800635c:	617b      	str	r3, [r7, #20]
 800635e:	68fb      	ldr	r3, [r7, #12]
 8006360:	697a      	ldr	r2, [r7, #20]
 8006362:	609a      	str	r2, [r3, #8]
 8006364:	bf00      	nop
 8006366:	371c      	adds	r7, #28
 8006368:	46bd      	mov	sp, r7
 800636a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800636e:	4770      	bx	lr

08006370 <HAL_TIMEx_MasterConfigSynchronization>:
 8006370:	b480      	push	{r7}
 8006372:	b085      	sub	sp, #20
 8006374:	af00      	add	r7, sp, #0
 8006376:	6078      	str	r0, [r7, #4]
 8006378:	6039      	str	r1, [r7, #0]
 800637a:	687b      	ldr	r3, [r7, #4]
 800637c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006380:	2b01      	cmp	r3, #1
 8006382:	d101      	bne.n	8006388 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8006384:	2302      	movs	r3, #2
 8006386:	e04f      	b.n	8006428 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8006388:	687b      	ldr	r3, [r7, #4]
 800638a:	2201      	movs	r2, #1
 800638c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006390:	687b      	ldr	r3, [r7, #4]
 8006392:	2202      	movs	r2, #2
 8006394:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006398:	687b      	ldr	r3, [r7, #4]
 800639a:	681b      	ldr	r3, [r3, #0]
 800639c:	685b      	ldr	r3, [r3, #4]
 800639e:	60fb      	str	r3, [r7, #12]
 80063a0:	687b      	ldr	r3, [r7, #4]
 80063a2:	681b      	ldr	r3, [r3, #0]
 80063a4:	689b      	ldr	r3, [r3, #8]
 80063a6:	60bb      	str	r3, [r7, #8]
 80063a8:	687b      	ldr	r3, [r7, #4]
 80063aa:	681b      	ldr	r3, [r3, #0]
 80063ac:	4a21      	ldr	r2, [pc, #132]	; (8006434 <HAL_TIMEx_MasterConfigSynchronization+0xc4>)
 80063ae:	4293      	cmp	r3, r2
 80063b0:	d108      	bne.n	80063c4 <HAL_TIMEx_MasterConfigSynchronization+0x54>
 80063b2:	68fb      	ldr	r3, [r7, #12]
 80063b4:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80063b8:	60fb      	str	r3, [r7, #12]
 80063ba:	683b      	ldr	r3, [r7, #0]
 80063bc:	685b      	ldr	r3, [r3, #4]
 80063be:	68fa      	ldr	r2, [r7, #12]
 80063c0:	4313      	orrs	r3, r2
 80063c2:	60fb      	str	r3, [r7, #12]
 80063c4:	68fb      	ldr	r3, [r7, #12]
 80063c6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80063ca:	60fb      	str	r3, [r7, #12]
 80063cc:	683b      	ldr	r3, [r7, #0]
 80063ce:	681b      	ldr	r3, [r3, #0]
 80063d0:	68fa      	ldr	r2, [r7, #12]
 80063d2:	4313      	orrs	r3, r2
 80063d4:	60fb      	str	r3, [r7, #12]
 80063d6:	687b      	ldr	r3, [r7, #4]
 80063d8:	681b      	ldr	r3, [r3, #0]
 80063da:	68fa      	ldr	r2, [r7, #12]
 80063dc:	605a      	str	r2, [r3, #4]
 80063de:	687b      	ldr	r3, [r7, #4]
 80063e0:	681b      	ldr	r3, [r3, #0]
 80063e2:	4a14      	ldr	r2, [pc, #80]	; (8006434 <HAL_TIMEx_MasterConfigSynchronization+0xc4>)
 80063e4:	4293      	cmp	r3, r2
 80063e6:	d009      	beq.n	80063fc <HAL_TIMEx_MasterConfigSynchronization+0x8c>
 80063e8:	687b      	ldr	r3, [r7, #4]
 80063ea:	681b      	ldr	r3, [r3, #0]
 80063ec:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80063f0:	d004      	beq.n	80063fc <HAL_TIMEx_MasterConfigSynchronization+0x8c>
 80063f2:	687b      	ldr	r3, [r7, #4]
 80063f4:	681b      	ldr	r3, [r3, #0]
 80063f6:	4a10      	ldr	r2, [pc, #64]	; (8006438 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 80063f8:	4293      	cmp	r3, r2
 80063fa:	d10c      	bne.n	8006416 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 80063fc:	68bb      	ldr	r3, [r7, #8]
 80063fe:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006402:	60bb      	str	r3, [r7, #8]
 8006404:	683b      	ldr	r3, [r7, #0]
 8006406:	689b      	ldr	r3, [r3, #8]
 8006408:	68ba      	ldr	r2, [r7, #8]
 800640a:	4313      	orrs	r3, r2
 800640c:	60bb      	str	r3, [r7, #8]
 800640e:	687b      	ldr	r3, [r7, #4]
 8006410:	681b      	ldr	r3, [r3, #0]
 8006412:	68ba      	ldr	r2, [r7, #8]
 8006414:	609a      	str	r2, [r3, #8]
 8006416:	687b      	ldr	r3, [r7, #4]
 8006418:	2201      	movs	r2, #1
 800641a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800641e:	687b      	ldr	r3, [r7, #4]
 8006420:	2200      	movs	r2, #0
 8006422:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006426:	2300      	movs	r3, #0
 8006428:	4618      	mov	r0, r3
 800642a:	3714      	adds	r7, #20
 800642c:	46bd      	mov	sp, r7
 800642e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006432:	4770      	bx	lr
 8006434:	40012c00 	.word	0x40012c00
 8006438:	40014000 	.word	0x40014000

0800643c <HAL_UART_Init>:
 800643c:	b580      	push	{r7, lr}
 800643e:	b082      	sub	sp, #8
 8006440:	af00      	add	r7, sp, #0
 8006442:	6078      	str	r0, [r7, #4]
 8006444:	687b      	ldr	r3, [r7, #4]
 8006446:	2b00      	cmp	r3, #0
 8006448:	d101      	bne.n	800644e <HAL_UART_Init+0x12>
 800644a:	2301      	movs	r3, #1
 800644c:	e040      	b.n	80064d0 <HAL_UART_Init+0x94>
 800644e:	687b      	ldr	r3, [r7, #4]
 8006450:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8006452:	2b00      	cmp	r3, #0
 8006454:	d106      	bne.n	8006464 <HAL_UART_Init+0x28>
 8006456:	687b      	ldr	r3, [r7, #4]
 8006458:	2200      	movs	r2, #0
 800645a:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 800645e:	6878      	ldr	r0, [r7, #4]
 8006460:	f7fb fcdc 	bl	8001e1c <HAL_UART_MspInit>
 8006464:	687b      	ldr	r3, [r7, #4]
 8006466:	2224      	movs	r2, #36	; 0x24
 8006468:	679a      	str	r2, [r3, #120]	; 0x78
 800646a:	687b      	ldr	r3, [r7, #4]
 800646c:	681b      	ldr	r3, [r3, #0]
 800646e:	681a      	ldr	r2, [r3, #0]
 8006470:	687b      	ldr	r3, [r7, #4]
 8006472:	681b      	ldr	r3, [r3, #0]
 8006474:	f022 0201 	bic.w	r2, r2, #1
 8006478:	601a      	str	r2, [r3, #0]
 800647a:	6878      	ldr	r0, [r7, #4]
 800647c:	f000 f82c 	bl	80064d8 <UART_SetConfig>
 8006480:	4603      	mov	r3, r0
 8006482:	2b01      	cmp	r3, #1
 8006484:	d101      	bne.n	800648a <HAL_UART_Init+0x4e>
 8006486:	2301      	movs	r3, #1
 8006488:	e022      	b.n	80064d0 <HAL_UART_Init+0x94>
 800648a:	687b      	ldr	r3, [r7, #4]
 800648c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800648e:	2b00      	cmp	r3, #0
 8006490:	d002      	beq.n	8006498 <HAL_UART_Init+0x5c>
 8006492:	6878      	ldr	r0, [r7, #4]
 8006494:	f000 f956 	bl	8006744 <UART_AdvFeatureConfig>
 8006498:	687b      	ldr	r3, [r7, #4]
 800649a:	681b      	ldr	r3, [r3, #0]
 800649c:	685a      	ldr	r2, [r3, #4]
 800649e:	687b      	ldr	r3, [r7, #4]
 80064a0:	681b      	ldr	r3, [r3, #0]
 80064a2:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80064a6:	605a      	str	r2, [r3, #4]
 80064a8:	687b      	ldr	r3, [r7, #4]
 80064aa:	681b      	ldr	r3, [r3, #0]
 80064ac:	689a      	ldr	r2, [r3, #8]
 80064ae:	687b      	ldr	r3, [r7, #4]
 80064b0:	681b      	ldr	r3, [r3, #0]
 80064b2:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80064b6:	609a      	str	r2, [r3, #8]
 80064b8:	687b      	ldr	r3, [r7, #4]
 80064ba:	681b      	ldr	r3, [r3, #0]
 80064bc:	681a      	ldr	r2, [r3, #0]
 80064be:	687b      	ldr	r3, [r7, #4]
 80064c0:	681b      	ldr	r3, [r3, #0]
 80064c2:	f042 0201 	orr.w	r2, r2, #1
 80064c6:	601a      	str	r2, [r3, #0]
 80064c8:	6878      	ldr	r0, [r7, #4]
 80064ca:	f000 f9dd 	bl	8006888 <UART_CheckIdleState>
 80064ce:	4603      	mov	r3, r0
 80064d0:	4618      	mov	r0, r3
 80064d2:	3708      	adds	r7, #8
 80064d4:	46bd      	mov	sp, r7
 80064d6:	bd80      	pop	{r7, pc}

080064d8 <UART_SetConfig>:
 80064d8:	b580      	push	{r7, lr}
 80064da:	b088      	sub	sp, #32
 80064dc:	af00      	add	r7, sp, #0
 80064de:	6078      	str	r0, [r7, #4]
 80064e0:	2300      	movs	r3, #0
 80064e2:	77bb      	strb	r3, [r7, #30]
 80064e4:	687b      	ldr	r3, [r7, #4]
 80064e6:	689a      	ldr	r2, [r3, #8]
 80064e8:	687b      	ldr	r3, [r7, #4]
 80064ea:	691b      	ldr	r3, [r3, #16]
 80064ec:	431a      	orrs	r2, r3
 80064ee:	687b      	ldr	r3, [r7, #4]
 80064f0:	695b      	ldr	r3, [r3, #20]
 80064f2:	431a      	orrs	r2, r3
 80064f4:	687b      	ldr	r3, [r7, #4]
 80064f6:	69db      	ldr	r3, [r3, #28]
 80064f8:	4313      	orrs	r3, r2
 80064fa:	617b      	str	r3, [r7, #20]
 80064fc:	687b      	ldr	r3, [r7, #4]
 80064fe:	681b      	ldr	r3, [r3, #0]
 8006500:	681a      	ldr	r2, [r3, #0]
 8006502:	4b8a      	ldr	r3, [pc, #552]	; (800672c <UART_SetConfig+0x254>)
 8006504:	4013      	ands	r3, r2
 8006506:	687a      	ldr	r2, [r7, #4]
 8006508:	6812      	ldr	r2, [r2, #0]
 800650a:	6979      	ldr	r1, [r7, #20]
 800650c:	430b      	orrs	r3, r1
 800650e:	6013      	str	r3, [r2, #0]
 8006510:	687b      	ldr	r3, [r7, #4]
 8006512:	681b      	ldr	r3, [r3, #0]
 8006514:	685b      	ldr	r3, [r3, #4]
 8006516:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800651a:	687b      	ldr	r3, [r7, #4]
 800651c:	68da      	ldr	r2, [r3, #12]
 800651e:	687b      	ldr	r3, [r7, #4]
 8006520:	681b      	ldr	r3, [r3, #0]
 8006522:	430a      	orrs	r2, r1
 8006524:	605a      	str	r2, [r3, #4]
 8006526:	687b      	ldr	r3, [r7, #4]
 8006528:	699b      	ldr	r3, [r3, #24]
 800652a:	617b      	str	r3, [r7, #20]
 800652c:	687b      	ldr	r3, [r7, #4]
 800652e:	6a1b      	ldr	r3, [r3, #32]
 8006530:	697a      	ldr	r2, [r7, #20]
 8006532:	4313      	orrs	r3, r2
 8006534:	617b      	str	r3, [r7, #20]
 8006536:	687b      	ldr	r3, [r7, #4]
 8006538:	681b      	ldr	r3, [r3, #0]
 800653a:	689b      	ldr	r3, [r3, #8]
 800653c:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 8006540:	687b      	ldr	r3, [r7, #4]
 8006542:	681b      	ldr	r3, [r3, #0]
 8006544:	697a      	ldr	r2, [r7, #20]
 8006546:	430a      	orrs	r2, r1
 8006548:	609a      	str	r2, [r3, #8]
 800654a:	687b      	ldr	r3, [r7, #4]
 800654c:	681b      	ldr	r3, [r3, #0]
 800654e:	4a78      	ldr	r2, [pc, #480]	; (8006730 <UART_SetConfig+0x258>)
 8006550:	4293      	cmp	r3, r2
 8006552:	d120      	bne.n	8006596 <UART_SetConfig+0xbe>
 8006554:	4b77      	ldr	r3, [pc, #476]	; (8006734 <UART_SetConfig+0x25c>)
 8006556:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006558:	f003 0303 	and.w	r3, r3, #3
 800655c:	2b03      	cmp	r3, #3
 800655e:	d817      	bhi.n	8006590 <UART_SetConfig+0xb8>
 8006560:	a201      	add	r2, pc, #4	; (adr r2, 8006568 <UART_SetConfig+0x90>)
 8006562:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006566:	bf00      	nop
 8006568:	08006579 	.word	0x08006579
 800656c:	08006585 	.word	0x08006585
 8006570:	0800658b 	.word	0x0800658b
 8006574:	0800657f 	.word	0x0800657f
 8006578:	2300      	movs	r3, #0
 800657a:	77fb      	strb	r3, [r7, #31]
 800657c:	e01d      	b.n	80065ba <UART_SetConfig+0xe2>
 800657e:	2302      	movs	r3, #2
 8006580:	77fb      	strb	r3, [r7, #31]
 8006582:	e01a      	b.n	80065ba <UART_SetConfig+0xe2>
 8006584:	2304      	movs	r3, #4
 8006586:	77fb      	strb	r3, [r7, #31]
 8006588:	e017      	b.n	80065ba <UART_SetConfig+0xe2>
 800658a:	2308      	movs	r3, #8
 800658c:	77fb      	strb	r3, [r7, #31]
 800658e:	e014      	b.n	80065ba <UART_SetConfig+0xe2>
 8006590:	2310      	movs	r3, #16
 8006592:	77fb      	strb	r3, [r7, #31]
 8006594:	e011      	b.n	80065ba <UART_SetConfig+0xe2>
 8006596:	687b      	ldr	r3, [r7, #4]
 8006598:	681b      	ldr	r3, [r3, #0]
 800659a:	4a67      	ldr	r2, [pc, #412]	; (8006738 <UART_SetConfig+0x260>)
 800659c:	4293      	cmp	r3, r2
 800659e:	d102      	bne.n	80065a6 <UART_SetConfig+0xce>
 80065a0:	2300      	movs	r3, #0
 80065a2:	77fb      	strb	r3, [r7, #31]
 80065a4:	e009      	b.n	80065ba <UART_SetConfig+0xe2>
 80065a6:	687b      	ldr	r3, [r7, #4]
 80065a8:	681b      	ldr	r3, [r3, #0]
 80065aa:	4a64      	ldr	r2, [pc, #400]	; (800673c <UART_SetConfig+0x264>)
 80065ac:	4293      	cmp	r3, r2
 80065ae:	d102      	bne.n	80065b6 <UART_SetConfig+0xde>
 80065b0:	2300      	movs	r3, #0
 80065b2:	77fb      	strb	r3, [r7, #31]
 80065b4:	e001      	b.n	80065ba <UART_SetConfig+0xe2>
 80065b6:	2310      	movs	r3, #16
 80065b8:	77fb      	strb	r3, [r7, #31]
 80065ba:	687b      	ldr	r3, [r7, #4]
 80065bc:	69db      	ldr	r3, [r3, #28]
 80065be:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80065c2:	d15b      	bne.n	800667c <UART_SetConfig+0x1a4>
 80065c4:	7ffb      	ldrb	r3, [r7, #31]
 80065c6:	2b08      	cmp	r3, #8
 80065c8:	d827      	bhi.n	800661a <UART_SetConfig+0x142>
 80065ca:	a201      	add	r2, pc, #4	; (adr r2, 80065d0 <UART_SetConfig+0xf8>)
 80065cc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80065d0:	080065f5 	.word	0x080065f5
 80065d4:	080065fd 	.word	0x080065fd
 80065d8:	08006605 	.word	0x08006605
 80065dc:	0800661b 	.word	0x0800661b
 80065e0:	0800660b 	.word	0x0800660b
 80065e4:	0800661b 	.word	0x0800661b
 80065e8:	0800661b 	.word	0x0800661b
 80065ec:	0800661b 	.word	0x0800661b
 80065f0:	08006613 	.word	0x08006613
 80065f4:	f7fe f87c 	bl	80046f0 <HAL_RCC_GetPCLK1Freq>
 80065f8:	61b8      	str	r0, [r7, #24]
 80065fa:	e013      	b.n	8006624 <UART_SetConfig+0x14c>
 80065fc:	f7fe f89a 	bl	8004734 <HAL_RCC_GetPCLK2Freq>
 8006600:	61b8      	str	r0, [r7, #24]
 8006602:	e00f      	b.n	8006624 <UART_SetConfig+0x14c>
 8006604:	4b4e      	ldr	r3, [pc, #312]	; (8006740 <UART_SetConfig+0x268>)
 8006606:	61bb      	str	r3, [r7, #24]
 8006608:	e00c      	b.n	8006624 <UART_SetConfig+0x14c>
 800660a:	f7fd fff9 	bl	8004600 <HAL_RCC_GetSysClockFreq>
 800660e:	61b8      	str	r0, [r7, #24]
 8006610:	e008      	b.n	8006624 <UART_SetConfig+0x14c>
 8006612:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8006616:	61bb      	str	r3, [r7, #24]
 8006618:	e004      	b.n	8006624 <UART_SetConfig+0x14c>
 800661a:	2300      	movs	r3, #0
 800661c:	61bb      	str	r3, [r7, #24]
 800661e:	2301      	movs	r3, #1
 8006620:	77bb      	strb	r3, [r7, #30]
 8006622:	bf00      	nop
 8006624:	69bb      	ldr	r3, [r7, #24]
 8006626:	2b00      	cmp	r3, #0
 8006628:	d074      	beq.n	8006714 <UART_SetConfig+0x23c>
 800662a:	69bb      	ldr	r3, [r7, #24]
 800662c:	005a      	lsls	r2, r3, #1
 800662e:	687b      	ldr	r3, [r7, #4]
 8006630:	685b      	ldr	r3, [r3, #4]
 8006632:	085b      	lsrs	r3, r3, #1
 8006634:	441a      	add	r2, r3
 8006636:	687b      	ldr	r3, [r7, #4]
 8006638:	685b      	ldr	r3, [r3, #4]
 800663a:	fbb2 f3f3 	udiv	r3, r2, r3
 800663e:	b29b      	uxth	r3, r3
 8006640:	613b      	str	r3, [r7, #16]
 8006642:	693b      	ldr	r3, [r7, #16]
 8006644:	2b0f      	cmp	r3, #15
 8006646:	d916      	bls.n	8006676 <UART_SetConfig+0x19e>
 8006648:	693b      	ldr	r3, [r7, #16]
 800664a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800664e:	d212      	bcs.n	8006676 <UART_SetConfig+0x19e>
 8006650:	693b      	ldr	r3, [r7, #16]
 8006652:	b29b      	uxth	r3, r3
 8006654:	f023 030f 	bic.w	r3, r3, #15
 8006658:	81fb      	strh	r3, [r7, #14]
 800665a:	693b      	ldr	r3, [r7, #16]
 800665c:	085b      	lsrs	r3, r3, #1
 800665e:	b29b      	uxth	r3, r3
 8006660:	f003 0307 	and.w	r3, r3, #7
 8006664:	b29a      	uxth	r2, r3
 8006666:	89fb      	ldrh	r3, [r7, #14]
 8006668:	4313      	orrs	r3, r2
 800666a:	81fb      	strh	r3, [r7, #14]
 800666c:	687b      	ldr	r3, [r7, #4]
 800666e:	681b      	ldr	r3, [r3, #0]
 8006670:	89fa      	ldrh	r2, [r7, #14]
 8006672:	60da      	str	r2, [r3, #12]
 8006674:	e04e      	b.n	8006714 <UART_SetConfig+0x23c>
 8006676:	2301      	movs	r3, #1
 8006678:	77bb      	strb	r3, [r7, #30]
 800667a:	e04b      	b.n	8006714 <UART_SetConfig+0x23c>
 800667c:	7ffb      	ldrb	r3, [r7, #31]
 800667e:	2b08      	cmp	r3, #8
 8006680:	d827      	bhi.n	80066d2 <UART_SetConfig+0x1fa>
 8006682:	a201      	add	r2, pc, #4	; (adr r2, 8006688 <UART_SetConfig+0x1b0>)
 8006684:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006688:	080066ad 	.word	0x080066ad
 800668c:	080066b5 	.word	0x080066b5
 8006690:	080066bd 	.word	0x080066bd
 8006694:	080066d3 	.word	0x080066d3
 8006698:	080066c3 	.word	0x080066c3
 800669c:	080066d3 	.word	0x080066d3
 80066a0:	080066d3 	.word	0x080066d3
 80066a4:	080066d3 	.word	0x080066d3
 80066a8:	080066cb 	.word	0x080066cb
 80066ac:	f7fe f820 	bl	80046f0 <HAL_RCC_GetPCLK1Freq>
 80066b0:	61b8      	str	r0, [r7, #24]
 80066b2:	e013      	b.n	80066dc <UART_SetConfig+0x204>
 80066b4:	f7fe f83e 	bl	8004734 <HAL_RCC_GetPCLK2Freq>
 80066b8:	61b8      	str	r0, [r7, #24]
 80066ba:	e00f      	b.n	80066dc <UART_SetConfig+0x204>
 80066bc:	4b20      	ldr	r3, [pc, #128]	; (8006740 <UART_SetConfig+0x268>)
 80066be:	61bb      	str	r3, [r7, #24]
 80066c0:	e00c      	b.n	80066dc <UART_SetConfig+0x204>
 80066c2:	f7fd ff9d 	bl	8004600 <HAL_RCC_GetSysClockFreq>
 80066c6:	61b8      	str	r0, [r7, #24]
 80066c8:	e008      	b.n	80066dc <UART_SetConfig+0x204>
 80066ca:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80066ce:	61bb      	str	r3, [r7, #24]
 80066d0:	e004      	b.n	80066dc <UART_SetConfig+0x204>
 80066d2:	2300      	movs	r3, #0
 80066d4:	61bb      	str	r3, [r7, #24]
 80066d6:	2301      	movs	r3, #1
 80066d8:	77bb      	strb	r3, [r7, #30]
 80066da:	bf00      	nop
 80066dc:	69bb      	ldr	r3, [r7, #24]
 80066de:	2b00      	cmp	r3, #0
 80066e0:	d018      	beq.n	8006714 <UART_SetConfig+0x23c>
 80066e2:	687b      	ldr	r3, [r7, #4]
 80066e4:	685b      	ldr	r3, [r3, #4]
 80066e6:	085a      	lsrs	r2, r3, #1
 80066e8:	69bb      	ldr	r3, [r7, #24]
 80066ea:	441a      	add	r2, r3
 80066ec:	687b      	ldr	r3, [r7, #4]
 80066ee:	685b      	ldr	r3, [r3, #4]
 80066f0:	fbb2 f3f3 	udiv	r3, r2, r3
 80066f4:	b29b      	uxth	r3, r3
 80066f6:	613b      	str	r3, [r7, #16]
 80066f8:	693b      	ldr	r3, [r7, #16]
 80066fa:	2b0f      	cmp	r3, #15
 80066fc:	d908      	bls.n	8006710 <UART_SetConfig+0x238>
 80066fe:	693b      	ldr	r3, [r7, #16]
 8006700:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006704:	d204      	bcs.n	8006710 <UART_SetConfig+0x238>
 8006706:	687b      	ldr	r3, [r7, #4]
 8006708:	681b      	ldr	r3, [r3, #0]
 800670a:	693a      	ldr	r2, [r7, #16]
 800670c:	60da      	str	r2, [r3, #12]
 800670e:	e001      	b.n	8006714 <UART_SetConfig+0x23c>
 8006710:	2301      	movs	r3, #1
 8006712:	77bb      	strb	r3, [r7, #30]
 8006714:	687b      	ldr	r3, [r7, #4]
 8006716:	2200      	movs	r2, #0
 8006718:	665a      	str	r2, [r3, #100]	; 0x64
 800671a:	687b      	ldr	r3, [r7, #4]
 800671c:	2200      	movs	r2, #0
 800671e:	669a      	str	r2, [r3, #104]	; 0x68
 8006720:	7fbb      	ldrb	r3, [r7, #30]
 8006722:	4618      	mov	r0, r3
 8006724:	3720      	adds	r7, #32
 8006726:	46bd      	mov	sp, r7
 8006728:	bd80      	pop	{r7, pc}
 800672a:	bf00      	nop
 800672c:	efff69f3 	.word	0xefff69f3
 8006730:	40013800 	.word	0x40013800
 8006734:	40021000 	.word	0x40021000
 8006738:	40004400 	.word	0x40004400
 800673c:	40004800 	.word	0x40004800
 8006740:	007a1200 	.word	0x007a1200

08006744 <UART_AdvFeatureConfig>:
 8006744:	b480      	push	{r7}
 8006746:	b083      	sub	sp, #12
 8006748:	af00      	add	r7, sp, #0
 800674a:	6078      	str	r0, [r7, #4]
 800674c:	687b      	ldr	r3, [r7, #4]
 800674e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006750:	f003 0301 	and.w	r3, r3, #1
 8006754:	2b00      	cmp	r3, #0
 8006756:	d00a      	beq.n	800676e <UART_AdvFeatureConfig+0x2a>
 8006758:	687b      	ldr	r3, [r7, #4]
 800675a:	681b      	ldr	r3, [r3, #0]
 800675c:	685b      	ldr	r3, [r3, #4]
 800675e:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 8006762:	687b      	ldr	r3, [r7, #4]
 8006764:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8006766:	687b      	ldr	r3, [r7, #4]
 8006768:	681b      	ldr	r3, [r3, #0]
 800676a:	430a      	orrs	r2, r1
 800676c:	605a      	str	r2, [r3, #4]
 800676e:	687b      	ldr	r3, [r7, #4]
 8006770:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006772:	f003 0302 	and.w	r3, r3, #2
 8006776:	2b00      	cmp	r3, #0
 8006778:	d00a      	beq.n	8006790 <UART_AdvFeatureConfig+0x4c>
 800677a:	687b      	ldr	r3, [r7, #4]
 800677c:	681b      	ldr	r3, [r3, #0]
 800677e:	685b      	ldr	r3, [r3, #4]
 8006780:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8006784:	687b      	ldr	r3, [r7, #4]
 8006786:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006788:	687b      	ldr	r3, [r7, #4]
 800678a:	681b      	ldr	r3, [r3, #0]
 800678c:	430a      	orrs	r2, r1
 800678e:	605a      	str	r2, [r3, #4]
 8006790:	687b      	ldr	r3, [r7, #4]
 8006792:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006794:	f003 0304 	and.w	r3, r3, #4
 8006798:	2b00      	cmp	r3, #0
 800679a:	d00a      	beq.n	80067b2 <UART_AdvFeatureConfig+0x6e>
 800679c:	687b      	ldr	r3, [r7, #4]
 800679e:	681b      	ldr	r3, [r3, #0]
 80067a0:	685b      	ldr	r3, [r3, #4]
 80067a2:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 80067a6:	687b      	ldr	r3, [r7, #4]
 80067a8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80067aa:	687b      	ldr	r3, [r7, #4]
 80067ac:	681b      	ldr	r3, [r3, #0]
 80067ae:	430a      	orrs	r2, r1
 80067b0:	605a      	str	r2, [r3, #4]
 80067b2:	687b      	ldr	r3, [r7, #4]
 80067b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80067b6:	f003 0308 	and.w	r3, r3, #8
 80067ba:	2b00      	cmp	r3, #0
 80067bc:	d00a      	beq.n	80067d4 <UART_AdvFeatureConfig+0x90>
 80067be:	687b      	ldr	r3, [r7, #4]
 80067c0:	681b      	ldr	r3, [r3, #0]
 80067c2:	685b      	ldr	r3, [r3, #4]
 80067c4:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 80067c8:	687b      	ldr	r3, [r7, #4]
 80067ca:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80067cc:	687b      	ldr	r3, [r7, #4]
 80067ce:	681b      	ldr	r3, [r3, #0]
 80067d0:	430a      	orrs	r2, r1
 80067d2:	605a      	str	r2, [r3, #4]
 80067d4:	687b      	ldr	r3, [r7, #4]
 80067d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80067d8:	f003 0310 	and.w	r3, r3, #16
 80067dc:	2b00      	cmp	r3, #0
 80067de:	d00a      	beq.n	80067f6 <UART_AdvFeatureConfig+0xb2>
 80067e0:	687b      	ldr	r3, [r7, #4]
 80067e2:	681b      	ldr	r3, [r3, #0]
 80067e4:	689b      	ldr	r3, [r3, #8]
 80067e6:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 80067ea:	687b      	ldr	r3, [r7, #4]
 80067ec:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80067ee:	687b      	ldr	r3, [r7, #4]
 80067f0:	681b      	ldr	r3, [r3, #0]
 80067f2:	430a      	orrs	r2, r1
 80067f4:	609a      	str	r2, [r3, #8]
 80067f6:	687b      	ldr	r3, [r7, #4]
 80067f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80067fa:	f003 0320 	and.w	r3, r3, #32
 80067fe:	2b00      	cmp	r3, #0
 8006800:	d00a      	beq.n	8006818 <UART_AdvFeatureConfig+0xd4>
 8006802:	687b      	ldr	r3, [r7, #4]
 8006804:	681b      	ldr	r3, [r3, #0]
 8006806:	689b      	ldr	r3, [r3, #8]
 8006808:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 800680c:	687b      	ldr	r3, [r7, #4]
 800680e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8006810:	687b      	ldr	r3, [r7, #4]
 8006812:	681b      	ldr	r3, [r3, #0]
 8006814:	430a      	orrs	r2, r1
 8006816:	609a      	str	r2, [r3, #8]
 8006818:	687b      	ldr	r3, [r7, #4]
 800681a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800681c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006820:	2b00      	cmp	r3, #0
 8006822:	d01a      	beq.n	800685a <UART_AdvFeatureConfig+0x116>
 8006824:	687b      	ldr	r3, [r7, #4]
 8006826:	681b      	ldr	r3, [r3, #0]
 8006828:	685b      	ldr	r3, [r3, #4]
 800682a:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 800682e:	687b      	ldr	r3, [r7, #4]
 8006830:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006832:	687b      	ldr	r3, [r7, #4]
 8006834:	681b      	ldr	r3, [r3, #0]
 8006836:	430a      	orrs	r2, r1
 8006838:	605a      	str	r2, [r3, #4]
 800683a:	687b      	ldr	r3, [r7, #4]
 800683c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800683e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8006842:	d10a      	bne.n	800685a <UART_AdvFeatureConfig+0x116>
 8006844:	687b      	ldr	r3, [r7, #4]
 8006846:	681b      	ldr	r3, [r3, #0]
 8006848:	685b      	ldr	r3, [r3, #4]
 800684a:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 800684e:	687b      	ldr	r3, [r7, #4]
 8006850:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006852:	687b      	ldr	r3, [r7, #4]
 8006854:	681b      	ldr	r3, [r3, #0]
 8006856:	430a      	orrs	r2, r1
 8006858:	605a      	str	r2, [r3, #4]
 800685a:	687b      	ldr	r3, [r7, #4]
 800685c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800685e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006862:	2b00      	cmp	r3, #0
 8006864:	d00a      	beq.n	800687c <UART_AdvFeatureConfig+0x138>
 8006866:	687b      	ldr	r3, [r7, #4]
 8006868:	681b      	ldr	r3, [r3, #0]
 800686a:	685b      	ldr	r3, [r3, #4]
 800686c:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8006870:	687b      	ldr	r3, [r7, #4]
 8006872:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8006874:	687b      	ldr	r3, [r7, #4]
 8006876:	681b      	ldr	r3, [r3, #0]
 8006878:	430a      	orrs	r2, r1
 800687a:	605a      	str	r2, [r3, #4]
 800687c:	bf00      	nop
 800687e:	370c      	adds	r7, #12
 8006880:	46bd      	mov	sp, r7
 8006882:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006886:	4770      	bx	lr

08006888 <UART_CheckIdleState>:
 8006888:	b580      	push	{r7, lr}
 800688a:	b086      	sub	sp, #24
 800688c:	af02      	add	r7, sp, #8
 800688e:	6078      	str	r0, [r7, #4]
 8006890:	687b      	ldr	r3, [r7, #4]
 8006892:	2200      	movs	r2, #0
 8006894:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8006898:	f7fc fb3a 	bl	8002f10 <HAL_GetTick>
 800689c:	60f8      	str	r0, [r7, #12]
 800689e:	687b      	ldr	r3, [r7, #4]
 80068a0:	681b      	ldr	r3, [r3, #0]
 80068a2:	681b      	ldr	r3, [r3, #0]
 80068a4:	f003 0308 	and.w	r3, r3, #8
 80068a8:	2b08      	cmp	r3, #8
 80068aa:	d10e      	bne.n	80068ca <UART_CheckIdleState+0x42>
 80068ac:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80068b0:	9300      	str	r3, [sp, #0]
 80068b2:	68fb      	ldr	r3, [r7, #12]
 80068b4:	2200      	movs	r2, #0
 80068b6:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 80068ba:	6878      	ldr	r0, [r7, #4]
 80068bc:	f000 f82d 	bl	800691a <UART_WaitOnFlagUntilTimeout>
 80068c0:	4603      	mov	r3, r0
 80068c2:	2b00      	cmp	r3, #0
 80068c4:	d001      	beq.n	80068ca <UART_CheckIdleState+0x42>
 80068c6:	2303      	movs	r3, #3
 80068c8:	e023      	b.n	8006912 <UART_CheckIdleState+0x8a>
 80068ca:	687b      	ldr	r3, [r7, #4]
 80068cc:	681b      	ldr	r3, [r3, #0]
 80068ce:	681b      	ldr	r3, [r3, #0]
 80068d0:	f003 0304 	and.w	r3, r3, #4
 80068d4:	2b04      	cmp	r3, #4
 80068d6:	d10e      	bne.n	80068f6 <UART_CheckIdleState+0x6e>
 80068d8:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80068dc:	9300      	str	r3, [sp, #0]
 80068de:	68fb      	ldr	r3, [r7, #12]
 80068e0:	2200      	movs	r2, #0
 80068e2:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 80068e6:	6878      	ldr	r0, [r7, #4]
 80068e8:	f000 f817 	bl	800691a <UART_WaitOnFlagUntilTimeout>
 80068ec:	4603      	mov	r3, r0
 80068ee:	2b00      	cmp	r3, #0
 80068f0:	d001      	beq.n	80068f6 <UART_CheckIdleState+0x6e>
 80068f2:	2303      	movs	r3, #3
 80068f4:	e00d      	b.n	8006912 <UART_CheckIdleState+0x8a>
 80068f6:	687b      	ldr	r3, [r7, #4]
 80068f8:	2220      	movs	r2, #32
 80068fa:	679a      	str	r2, [r3, #120]	; 0x78
 80068fc:	687b      	ldr	r3, [r7, #4]
 80068fe:	2220      	movs	r2, #32
 8006900:	67da      	str	r2, [r3, #124]	; 0x7c
 8006902:	687b      	ldr	r3, [r7, #4]
 8006904:	2200      	movs	r2, #0
 8006906:	661a      	str	r2, [r3, #96]	; 0x60
 8006908:	687b      	ldr	r3, [r7, #4]
 800690a:	2200      	movs	r2, #0
 800690c:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8006910:	2300      	movs	r3, #0
 8006912:	4618      	mov	r0, r3
 8006914:	3710      	adds	r7, #16
 8006916:	46bd      	mov	sp, r7
 8006918:	bd80      	pop	{r7, pc}

0800691a <UART_WaitOnFlagUntilTimeout>:
 800691a:	b580      	push	{r7, lr}
 800691c:	b09c      	sub	sp, #112	; 0x70
 800691e:	af00      	add	r7, sp, #0
 8006920:	60f8      	str	r0, [r7, #12]
 8006922:	60b9      	str	r1, [r7, #8]
 8006924:	603b      	str	r3, [r7, #0]
 8006926:	4613      	mov	r3, r2
 8006928:	71fb      	strb	r3, [r7, #7]
 800692a:	e0a5      	b.n	8006a78 <UART_WaitOnFlagUntilTimeout+0x15e>
 800692c:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800692e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006932:	f000 80a1 	beq.w	8006a78 <UART_WaitOnFlagUntilTimeout+0x15e>
 8006936:	f7fc faeb 	bl	8002f10 <HAL_GetTick>
 800693a:	4602      	mov	r2, r0
 800693c:	683b      	ldr	r3, [r7, #0]
 800693e:	1ad3      	subs	r3, r2, r3
 8006940:	6fba      	ldr	r2, [r7, #120]	; 0x78
 8006942:	429a      	cmp	r2, r3
 8006944:	d302      	bcc.n	800694c <UART_WaitOnFlagUntilTimeout+0x32>
 8006946:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8006948:	2b00      	cmp	r3, #0
 800694a:	d13e      	bne.n	80069ca <UART_WaitOnFlagUntilTimeout+0xb0>
 800694c:	68fb      	ldr	r3, [r7, #12]
 800694e:	681b      	ldr	r3, [r3, #0]
 8006950:	653b      	str	r3, [r7, #80]	; 0x50
 8006952:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8006954:	e853 3f00 	ldrex	r3, [r3]
 8006958:	64fb      	str	r3, [r7, #76]	; 0x4c
 800695a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800695c:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8006960:	667b      	str	r3, [r7, #100]	; 0x64
 8006962:	68fb      	ldr	r3, [r7, #12]
 8006964:	681b      	ldr	r3, [r3, #0]
 8006966:	461a      	mov	r2, r3
 8006968:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800696a:	65fb      	str	r3, [r7, #92]	; 0x5c
 800696c:	65ba      	str	r2, [r7, #88]	; 0x58
 800696e:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8006970:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8006972:	e841 2300 	strex	r3, r2, [r1]
 8006976:	657b      	str	r3, [r7, #84]	; 0x54
 8006978:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800697a:	2b00      	cmp	r3, #0
 800697c:	d1e6      	bne.n	800694c <UART_WaitOnFlagUntilTimeout+0x32>
 800697e:	68fb      	ldr	r3, [r7, #12]
 8006980:	681b      	ldr	r3, [r3, #0]
 8006982:	3308      	adds	r3, #8
 8006984:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006986:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8006988:	e853 3f00 	ldrex	r3, [r3]
 800698c:	63bb      	str	r3, [r7, #56]	; 0x38
 800698e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006990:	f023 0301 	bic.w	r3, r3, #1
 8006994:	663b      	str	r3, [r7, #96]	; 0x60
 8006996:	68fb      	ldr	r3, [r7, #12]
 8006998:	681b      	ldr	r3, [r3, #0]
 800699a:	3308      	adds	r3, #8
 800699c:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800699e:	64ba      	str	r2, [r7, #72]	; 0x48
 80069a0:	647b      	str	r3, [r7, #68]	; 0x44
 80069a2:	6c79      	ldr	r1, [r7, #68]	; 0x44
 80069a4:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80069a6:	e841 2300 	strex	r3, r2, [r1]
 80069aa:	643b      	str	r3, [r7, #64]	; 0x40
 80069ac:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80069ae:	2b00      	cmp	r3, #0
 80069b0:	d1e5      	bne.n	800697e <UART_WaitOnFlagUntilTimeout+0x64>
 80069b2:	68fb      	ldr	r3, [r7, #12]
 80069b4:	2220      	movs	r2, #32
 80069b6:	679a      	str	r2, [r3, #120]	; 0x78
 80069b8:	68fb      	ldr	r3, [r7, #12]
 80069ba:	2220      	movs	r2, #32
 80069bc:	67da      	str	r2, [r3, #124]	; 0x7c
 80069be:	68fb      	ldr	r3, [r7, #12]
 80069c0:	2200      	movs	r2, #0
 80069c2:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 80069c6:	2303      	movs	r3, #3
 80069c8:	e067      	b.n	8006a9a <UART_WaitOnFlagUntilTimeout+0x180>
 80069ca:	68fb      	ldr	r3, [r7, #12]
 80069cc:	681b      	ldr	r3, [r3, #0]
 80069ce:	681b      	ldr	r3, [r3, #0]
 80069d0:	f003 0304 	and.w	r3, r3, #4
 80069d4:	2b00      	cmp	r3, #0
 80069d6:	d04f      	beq.n	8006a78 <UART_WaitOnFlagUntilTimeout+0x15e>
 80069d8:	68fb      	ldr	r3, [r7, #12]
 80069da:	681b      	ldr	r3, [r3, #0]
 80069dc:	69db      	ldr	r3, [r3, #28]
 80069de:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80069e2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80069e6:	d147      	bne.n	8006a78 <UART_WaitOnFlagUntilTimeout+0x15e>
 80069e8:	68fb      	ldr	r3, [r7, #12]
 80069ea:	681b      	ldr	r3, [r3, #0]
 80069ec:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80069f0:	621a      	str	r2, [r3, #32]
 80069f2:	68fb      	ldr	r3, [r7, #12]
 80069f4:	681b      	ldr	r3, [r3, #0]
 80069f6:	62bb      	str	r3, [r7, #40]	; 0x28
 80069f8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80069fa:	e853 3f00 	ldrex	r3, [r3]
 80069fe:	627b      	str	r3, [r7, #36]	; 0x24
 8006a00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006a02:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8006a06:	66fb      	str	r3, [r7, #108]	; 0x6c
 8006a08:	68fb      	ldr	r3, [r7, #12]
 8006a0a:	681b      	ldr	r3, [r3, #0]
 8006a0c:	461a      	mov	r2, r3
 8006a0e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006a10:	637b      	str	r3, [r7, #52]	; 0x34
 8006a12:	633a      	str	r2, [r7, #48]	; 0x30
 8006a14:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8006a16:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8006a18:	e841 2300 	strex	r3, r2, [r1]
 8006a1c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006a1e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006a20:	2b00      	cmp	r3, #0
 8006a22:	d1e6      	bne.n	80069f2 <UART_WaitOnFlagUntilTimeout+0xd8>
 8006a24:	68fb      	ldr	r3, [r7, #12]
 8006a26:	681b      	ldr	r3, [r3, #0]
 8006a28:	3308      	adds	r3, #8
 8006a2a:	617b      	str	r3, [r7, #20]
 8006a2c:	697b      	ldr	r3, [r7, #20]
 8006a2e:	e853 3f00 	ldrex	r3, [r3]
 8006a32:	613b      	str	r3, [r7, #16]
 8006a34:	693b      	ldr	r3, [r7, #16]
 8006a36:	f023 0301 	bic.w	r3, r3, #1
 8006a3a:	66bb      	str	r3, [r7, #104]	; 0x68
 8006a3c:	68fb      	ldr	r3, [r7, #12]
 8006a3e:	681b      	ldr	r3, [r3, #0]
 8006a40:	3308      	adds	r3, #8
 8006a42:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8006a44:	623a      	str	r2, [r7, #32]
 8006a46:	61fb      	str	r3, [r7, #28]
 8006a48:	69f9      	ldr	r1, [r7, #28]
 8006a4a:	6a3a      	ldr	r2, [r7, #32]
 8006a4c:	e841 2300 	strex	r3, r2, [r1]
 8006a50:	61bb      	str	r3, [r7, #24]
 8006a52:	69bb      	ldr	r3, [r7, #24]
 8006a54:	2b00      	cmp	r3, #0
 8006a56:	d1e5      	bne.n	8006a24 <UART_WaitOnFlagUntilTimeout+0x10a>
 8006a58:	68fb      	ldr	r3, [r7, #12]
 8006a5a:	2220      	movs	r2, #32
 8006a5c:	679a      	str	r2, [r3, #120]	; 0x78
 8006a5e:	68fb      	ldr	r3, [r7, #12]
 8006a60:	2220      	movs	r2, #32
 8006a62:	67da      	str	r2, [r3, #124]	; 0x7c
 8006a64:	68fb      	ldr	r3, [r7, #12]
 8006a66:	2220      	movs	r2, #32
 8006a68:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8006a6c:	68fb      	ldr	r3, [r7, #12]
 8006a6e:	2200      	movs	r2, #0
 8006a70:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8006a74:	2303      	movs	r3, #3
 8006a76:	e010      	b.n	8006a9a <UART_WaitOnFlagUntilTimeout+0x180>
 8006a78:	68fb      	ldr	r3, [r7, #12]
 8006a7a:	681b      	ldr	r3, [r3, #0]
 8006a7c:	69da      	ldr	r2, [r3, #28]
 8006a7e:	68bb      	ldr	r3, [r7, #8]
 8006a80:	4013      	ands	r3, r2
 8006a82:	68ba      	ldr	r2, [r7, #8]
 8006a84:	429a      	cmp	r2, r3
 8006a86:	bf0c      	ite	eq
 8006a88:	2301      	moveq	r3, #1
 8006a8a:	2300      	movne	r3, #0
 8006a8c:	b2db      	uxtb	r3, r3
 8006a8e:	461a      	mov	r2, r3
 8006a90:	79fb      	ldrb	r3, [r7, #7]
 8006a92:	429a      	cmp	r2, r3
 8006a94:	f43f af4a 	beq.w	800692c <UART_WaitOnFlagUntilTimeout+0x12>
 8006a98:	2300      	movs	r3, #0
 8006a9a:	4618      	mov	r0, r3
 8006a9c:	3770      	adds	r7, #112	; 0x70
 8006a9e:	46bd      	mov	sp, r7
 8006aa0:	bd80      	pop	{r7, pc}
	...

08006aa4 <__libc_init_array>:
 8006aa4:	b570      	push	{r4, r5, r6, lr}
 8006aa6:	4d0d      	ldr	r5, [pc, #52]	; (8006adc <__libc_init_array+0x38>)
 8006aa8:	4c0d      	ldr	r4, [pc, #52]	; (8006ae0 <__libc_init_array+0x3c>)
 8006aaa:	1b64      	subs	r4, r4, r5
 8006aac:	10a4      	asrs	r4, r4, #2
 8006aae:	2600      	movs	r6, #0
 8006ab0:	42a6      	cmp	r6, r4
 8006ab2:	d109      	bne.n	8006ac8 <__libc_init_array+0x24>
 8006ab4:	4d0b      	ldr	r5, [pc, #44]	; (8006ae4 <__libc_init_array+0x40>)
 8006ab6:	4c0c      	ldr	r4, [pc, #48]	; (8006ae8 <__libc_init_array+0x44>)
 8006ab8:	f000 f89a 	bl	8006bf0 <_init>
 8006abc:	1b64      	subs	r4, r4, r5
 8006abe:	10a4      	asrs	r4, r4, #2
 8006ac0:	2600      	movs	r6, #0
 8006ac2:	42a6      	cmp	r6, r4
 8006ac4:	d105      	bne.n	8006ad2 <__libc_init_array+0x2e>
 8006ac6:	bd70      	pop	{r4, r5, r6, pc}
 8006ac8:	f855 3b04 	ldr.w	r3, [r5], #4
 8006acc:	4798      	blx	r3
 8006ace:	3601      	adds	r6, #1
 8006ad0:	e7ee      	b.n	8006ab0 <__libc_init_array+0xc>
 8006ad2:	f855 3b04 	ldr.w	r3, [r5], #4
 8006ad6:	4798      	blx	r3
 8006ad8:	3601      	adds	r6, #1
 8006ada:	e7f2      	b.n	8006ac2 <__libc_init_array+0x1e>
 8006adc:	08006d00 	.word	0x08006d00
 8006ae0:	08006d00 	.word	0x08006d00
 8006ae4:	08006d00 	.word	0x08006d00
 8006ae8:	08006d04 	.word	0x08006d04

08006aec <__itoa>:
 8006aec:	1e93      	subs	r3, r2, #2
 8006aee:	2b22      	cmp	r3, #34	; 0x22
 8006af0:	b510      	push	{r4, lr}
 8006af2:	460c      	mov	r4, r1
 8006af4:	d904      	bls.n	8006b00 <__itoa+0x14>
 8006af6:	2300      	movs	r3, #0
 8006af8:	700b      	strb	r3, [r1, #0]
 8006afa:	461c      	mov	r4, r3
 8006afc:	4620      	mov	r0, r4
 8006afe:	bd10      	pop	{r4, pc}
 8006b00:	2a0a      	cmp	r2, #10
 8006b02:	d109      	bne.n	8006b18 <__itoa+0x2c>
 8006b04:	2800      	cmp	r0, #0
 8006b06:	da07      	bge.n	8006b18 <__itoa+0x2c>
 8006b08:	232d      	movs	r3, #45	; 0x2d
 8006b0a:	700b      	strb	r3, [r1, #0]
 8006b0c:	4240      	negs	r0, r0
 8006b0e:	2101      	movs	r1, #1
 8006b10:	4421      	add	r1, r4
 8006b12:	f000 f82b 	bl	8006b6c <__utoa>
 8006b16:	e7f1      	b.n	8006afc <__itoa+0x10>
 8006b18:	2100      	movs	r1, #0
 8006b1a:	e7f9      	b.n	8006b10 <__itoa+0x24>

08006b1c <itoa>:
 8006b1c:	f7ff bfe6 	b.w	8006aec <__itoa>

08006b20 <memcpy>:
 8006b20:	440a      	add	r2, r1
 8006b22:	4291      	cmp	r1, r2
 8006b24:	f100 33ff 	add.w	r3, r0, #4294967295
 8006b28:	d100      	bne.n	8006b2c <memcpy+0xc>
 8006b2a:	4770      	bx	lr
 8006b2c:	b510      	push	{r4, lr}
 8006b2e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006b32:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006b36:	4291      	cmp	r1, r2
 8006b38:	d1f9      	bne.n	8006b2e <memcpy+0xe>
 8006b3a:	bd10      	pop	{r4, pc}

08006b3c <memset>:
 8006b3c:	4402      	add	r2, r0
 8006b3e:	4603      	mov	r3, r0
 8006b40:	4293      	cmp	r3, r2
 8006b42:	d100      	bne.n	8006b46 <memset+0xa>
 8006b44:	4770      	bx	lr
 8006b46:	f803 1b01 	strb.w	r1, [r3], #1
 8006b4a:	e7f9      	b.n	8006b40 <memset+0x4>

08006b4c <strcat>:
 8006b4c:	b510      	push	{r4, lr}
 8006b4e:	4602      	mov	r2, r0
 8006b50:	7814      	ldrb	r4, [r2, #0]
 8006b52:	4613      	mov	r3, r2
 8006b54:	3201      	adds	r2, #1
 8006b56:	2c00      	cmp	r4, #0
 8006b58:	d1fa      	bne.n	8006b50 <strcat+0x4>
 8006b5a:	3b01      	subs	r3, #1
 8006b5c:	f811 2b01 	ldrb.w	r2, [r1], #1
 8006b60:	f803 2f01 	strb.w	r2, [r3, #1]!
 8006b64:	2a00      	cmp	r2, #0
 8006b66:	d1f9      	bne.n	8006b5c <strcat+0x10>
 8006b68:	bd10      	pop	{r4, pc}
	...

08006b6c <__utoa>:
 8006b6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006b6e:	4c1f      	ldr	r4, [pc, #124]	; (8006bec <__utoa+0x80>)
 8006b70:	b08b      	sub	sp, #44	; 0x2c
 8006b72:	4605      	mov	r5, r0
 8006b74:	460b      	mov	r3, r1
 8006b76:	466e      	mov	r6, sp
 8006b78:	f104 0c20 	add.w	ip, r4, #32
 8006b7c:	6820      	ldr	r0, [r4, #0]
 8006b7e:	6861      	ldr	r1, [r4, #4]
 8006b80:	4637      	mov	r7, r6
 8006b82:	c703      	stmia	r7!, {r0, r1}
 8006b84:	3408      	adds	r4, #8
 8006b86:	4564      	cmp	r4, ip
 8006b88:	463e      	mov	r6, r7
 8006b8a:	d1f7      	bne.n	8006b7c <__utoa+0x10>
 8006b8c:	7921      	ldrb	r1, [r4, #4]
 8006b8e:	7139      	strb	r1, [r7, #4]
 8006b90:	1e91      	subs	r1, r2, #2
 8006b92:	6820      	ldr	r0, [r4, #0]
 8006b94:	6038      	str	r0, [r7, #0]
 8006b96:	2922      	cmp	r1, #34	; 0x22
 8006b98:	f04f 0100 	mov.w	r1, #0
 8006b9c:	d904      	bls.n	8006ba8 <__utoa+0x3c>
 8006b9e:	7019      	strb	r1, [r3, #0]
 8006ba0:	460b      	mov	r3, r1
 8006ba2:	4618      	mov	r0, r3
 8006ba4:	b00b      	add	sp, #44	; 0x2c
 8006ba6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006ba8:	1e58      	subs	r0, r3, #1
 8006baa:	4684      	mov	ip, r0
 8006bac:	fbb5 f7f2 	udiv	r7, r5, r2
 8006bb0:	f10d 0e28 	add.w	lr, sp, #40	; 0x28
 8006bb4:	fb02 5617 	mls	r6, r2, r7, r5
 8006bb8:	4476      	add	r6, lr
 8006bba:	460c      	mov	r4, r1
 8006bbc:	f816 6c28 	ldrb.w	r6, [r6, #-40]
 8006bc0:	f80c 6f01 	strb.w	r6, [ip, #1]!
 8006bc4:	462e      	mov	r6, r5
 8006bc6:	42b2      	cmp	r2, r6
 8006bc8:	f101 0101 	add.w	r1, r1, #1
 8006bcc:	463d      	mov	r5, r7
 8006bce:	d9ed      	bls.n	8006bac <__utoa+0x40>
 8006bd0:	2200      	movs	r2, #0
 8006bd2:	545a      	strb	r2, [r3, r1]
 8006bd4:	1919      	adds	r1, r3, r4
 8006bd6:	1aa5      	subs	r5, r4, r2
 8006bd8:	42aa      	cmp	r2, r5
 8006bda:	dae2      	bge.n	8006ba2 <__utoa+0x36>
 8006bdc:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 8006be0:	780e      	ldrb	r6, [r1, #0]
 8006be2:	7006      	strb	r6, [r0, #0]
 8006be4:	3201      	adds	r2, #1
 8006be6:	f801 5901 	strb.w	r5, [r1], #-1
 8006bea:	e7f4      	b.n	8006bd6 <__utoa+0x6a>
 8006bec:	08006cd8 	.word	0x08006cd8

08006bf0 <_init>:
 8006bf0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006bf2:	bf00      	nop
 8006bf4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006bf6:	bc08      	pop	{r3}
 8006bf8:	469e      	mov	lr, r3
 8006bfa:	4770      	bx	lr

08006bfc <_fini>:
 8006bfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006bfe:	bf00      	nop
 8006c00:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006c02:	bc08      	pop	{r3}
 8006c04:	469e      	mov	lr, r3
 8006c06:	4770      	bx	lr
